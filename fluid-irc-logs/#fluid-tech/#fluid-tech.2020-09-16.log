2020-09-16T12:13:28  <sbates> Bosmon: agreed with respect to privilege. it's an interesting design choice to make. immutability with respect to git is a complex topic due to its distributed nature. while you can absolutely delete branches and rewrite history in git and the gc will remove any commits from a given repo that are no longer reachable, those commits may live on in other clones of the repo that either don't have the rewritten history
2020-09-16T12:13:28  <sbates> (yet) or which have explicit refs to stop the commits from being gc'ed
2020-09-16T12:16:12  <Bosmon> sbates - yes, I used to believe in it myself
2020-09-16T12:18:50  <Bosmon> git already has this problem pretty much built into it, but it seems that netlify just amplifies them
2020-09-16T12:19:01  <Bosmon> it
2020-09-16T12:19:39  <sbates> yes
2020-09-16T12:19:45  <Bosmon> It's already interesting enough that triggering the gc operation on a repository isn't something that is exposed by the git API
2020-09-16T12:20:00  <Bosmon> You need to physically lay your hands with it an interact with it at the CLI level
2020-09-16T12:21:44  <Bosmon> But at least if the information itself isn't reachable over the git API, you could be said to have "done your job" by deleting the branch(es) that refers to it
2020-09-16T12:23:46  <sbates> depending on the specifics of the situation, the commits on the deleted branches may still be reachable via 'git reflog'
2020-09-16T12:25:00  <sbates> the gc.reflogExpireUnreachable config value controls how long unreachable reflog entries stay alive
2020-09-16T12:26:05  <Bosmon> sbates - right, but it seems that the commits will not be readable remotely - https://stackoverflow.com/questions/10098095/git-can-i-view-the-reflog-of-a-remote
2020-09-16T12:26:41  <Bosmon> Although the second answer explains how github subverts this : P

2020-09-15T11:23:10  <Justin_o> Bosmon: thanks for posting that
2020-09-15T12:29:13  <Bosmon> Justin_o - no worries
2020-09-15T12:29:43  <Bosmon> It's a little funny that the principal engineer of Wikipedia is suddenly on a drive to demonstrate how many people use QUnit
2020-09-15T12:34:53  <Justin_o> Bosmon: I think he's been part of the jQuery community for a while, but I could be mistaken. I'm not sure what the drive for this is though.
2020-09-15T12:35:37  <Justin_o> Maybe they're trying to revive QUnit's popularity again.
2020-09-15T12:35:56  <Bosmon> Perhaps they are trying to make a case for hiring a dedicated QUnit engineer
2020-09-15T12:39:49  <Justin_o> oh maybe
2020-09-15T14:01:58  *** greatislander_ is now known as greatislander
2020-09-15T14:01:58  *** ewbjr__ is now known as ewbjr_
2020-09-15T14:01:58  *** sgithens_ is now known as sgithens
2020-09-15T17:40:05  <philip> Bosmon: Ahaha, by making every variant of the dataset be represented by a PR?
2020-09-15T17:40:17  <Bosmon> philip - exactly!
2020-09-15T17:40:42  <Bosmon> Or at least, to be incorporated in to some commit to some PR
2020-09-15T17:40:51  <Bosmon> All we need to do is work out the naming structure appropriately
2020-09-15T17:41:07  <Bosmon> We'll have to have a kind of "universal convention" on the naming of local branches, remote branches, and their corresponding PRs
2020-09-15T17:41:29  <Bosmon> Such that the whole situation can synoptically be seen from any particular node in the network
2020-09-15T17:41:51  <Bosmon> git by tradition gives you far too much rope to hang yourself with, in being able to rename local and remote branches etc.
2020-09-15T17:42:09  <cindyli> it saves us from creating own urls for diffs
2020-09-15T17:42:44  <Bosmon> Well, the diffs are another matter.... we'll still need special "merge commits" that exist just to create relations between other commits
2020-09-15T17:42:48  <Bosmon> But again this is just a matter of naming
2020-09-15T17:43:11  <Bosmon> What I was most worried about was how we tricked netlify into producing an indefinite number of simultaneous deployments
2020-09-15T17:43:17  <Bosmon> But earlier cindyli just showed us how : p
2020-09-15T17:43:48  <Bosmon> What will be most tricksy is that we will have kinds of "PR-generating builds"
2020-09-15T17:44:11  <Bosmon> That is, a particular commit to a particular PR, as it runs its 11ty npm install, will have the effect of synthesising a fresh PR with its own build, etc. etc. etc. : P
2020-09-15T17:44:33  <Bosmon> It will be a kind of "git virus", which makes me worry about the details of the exact terms of service of both github and netlify
2020-09-15T17:44:48  <Bosmon> But I imagine in the early days our deployments will be pretty slow and infrequent
2020-09-15T17:45:22  <Bosmon> But as I observed in the previous meeting, both me and Philip pretty quickly ran into the resource usage, security and privacy implications of creating truly open authoring environments
2020-09-15T17:45:30  <Bosmon> Us with the nexus, and he with webstrates
2020-09-15T17:45:36  <Justin_o> Bosmon: sorry, just following along because this interesting. Won't that pollute the PRs in GitHub though? Is this in a self contained repo that doesn't expect other PRs, or are you just going to label them differently?
2020-09-15T17:45:52  <Bosmon> And we're about to pull just the same kind of trick again
2020-09-15T17:46:10  <cindyli> here's the netlify feature list for different plans: https://www.netlify.com/pricing/#features
2020-09-15T17:46:30  <Bosmon> Justin_o - I think we will label them, but I think most importantly all of these PRs will be generated by a special github bot-type user whose only purpose is to generate such PRs
2020-09-15T17:46:59  <cindyli> the free plan offers 300 build minutes /month. assuming each build takes 3 minutes, free plan offers 100 builds per month
2020-09-15T17:47:12  <Bosmon> cindyli - do we have any idea how much netlify resources we are currently using?
2020-09-15T17:47:35  <cindyli> let me see if there's a way to check...
2020-09-15T17:47:45  <Bosmon> cindyli - and I think there might well be limitations on netlify usage that are not purely resource-based
2020-09-15T17:47:53  <Justin_o> Bosmon: I suppose you can make the PRs from the bots be drafts too
2020-09-15T17:48:06  <Bosmon> We should spend some time reading through their ToS to see if something we are doing might be discouraged
2020-09-15T17:48:08  <Bosmon> Justin_o - eactly
2020-09-15T17:48:29  <Bosmon> And in the meantime, we get an indefinite number of statically hosted instances of the website that can be freely shared around
2020-09-15T17:49:34  <cindyli> Bosmon: do we need to have netlify deploy those special PRs? they are all dataset contributions waiting to be merged
2020-09-15T17:52:42  <Bosmon> cindyli - well, the point is that we want users to have sharable visualisations based on their dataset contributions, right?
2020-09-15T17:52:48  <Justin_o> Bosmon: but how would you locate those deployments without clicking the link from the PR?
2020-09-15T17:53:00  <Bosmon> That is, they want to be able to show to someone else, "Here is what the visualisation looks like with my change to the data"
2020-09-15T17:53:01  <Justin_o> that is, how do those external to the project benefit
2020-09-15T17:53:06  <Bosmon> Or even just see that themselves
2020-09-15T17:53:15  <cindyli> ya. makes sense
2020-09-15T17:53:38  <Bosmon> Justin_o - the link would be surfaced in the interface that they see themselves - in fact, it would from time to time be their actual browsing URL
2020-09-15T17:53:41  <cindyli> Justin_o: once the PR number is known, the url of the deployed site can be figrued out
2020-09-15T17:53:50  <Bosmon> And then it would have the standard "Share this thing" button that so many things in the world now have
2020-09-15T17:53:58  <Bosmon> Pictures on instagram, etc : P
2020-09-15T17:54:14  <Bosmon> Share my viz on facebook....
2020-09-15T17:54:31  <Bosmon> Given it is static, the resource costs would be fairly tiny
2020-09-15T17:54:33  <Justin_o> Bosmon, cindyli: so the GitHub API will return the PR number?
2020-09-15T17:54:57  <Bosmon> Justin_o - well, in practice, netlify generates its own URLs anyway
2020-09-15T17:55:02  <Bosmon> cindyli showed me what they look like
2020-09-15T17:55:06  <Justin_o> Bosmon, cindyli: are these netlify deploys permanent? or do they disappear after some time?
2020-09-15T17:55:23  <Bosmon> We'd have to store an indirection table somewhere
2020-09-15T17:55:39  <cindyli> i believe the deploy will disappear when the pull request is closed
2020-09-15T17:55:47  <Bosmon> Justin_o - unclear how permanent they are, but it seems their limitations are primarily on the number of concurrent builds rather than the number of hosted replicas of the site
2020-09-15T17:55:55  <Bosmon> I imagine it is really pretty cheap to them to host a replica
2020-09-15T18:01:09  <Bosmon> I guess this is one of the core virtues of the "static publishing" approach
2020-09-15T18:01:37  <Bosmon> Hosting replicas of a live website with backing logic would be hugely more punishing, to the extent I imagine very few people would do it
2020-09-15T18:01:55  <Bosmon> If you need a whole VM to back your "resource", noone is going to want to pay for that
2020-09-15T18:02:12  <Justin_o> true
2020-09-15T18:05:21  <Bosmon> Well, I think this is very very promising... all the blocks are starting to line up
2020-09-15T18:13:49  <cindyli> YAY!
2020-09-15T19:38:23  <sbates> I'
2020-09-15T19:39:09  <sbates> I'm catching up on the netlify conversation, it might be neater to use branches, rather than PRs for your variant deployments
2020-09-15T19:39:20  <sbates> are you unable to use branches?
2020-09-15T19:39:46  <sbates> with branches, the URL is predictable as it's built from the branch name
2020-09-15T19:40:23  <sbates> Bosmon, cindyli ^
2020-09-15T19:41:04  <sbates> or do you need to be able to make these builds are arbitrary users?
2020-09-15T19:41:38  <sbates> *as arbitrary users
2020-09-15T19:42:07  <cindyli> sbates: the plan is to use a catch-all github account to issue branches or PRs on behalf of arbitrary users
2020-09-15T19:42:42  <sbates> could the catch-all account then simply create the branches? without the need to make PRs?
2020-09-15T19:43:00  <cindyli> the benefit of using PRs is, netlify builds deploy previews for all pull requests which allows users to see an actual website with their data incorporated
2020-09-15T19:43:04  <sbates> and netlify would deploy branches from the catch-all account
2020-09-15T19:43:17  <cindyli> i see what you mean
2020-09-15T19:43:17  <sbates> it also builds all branches
2020-09-15T19:43:33  <Bosmon> sbates - that's cool
2020-09-15T19:43:36  <Bosmon> Absolutely all?
2020-09-15T19:43:37  <cindyli> ya, but you need to specify branch names in the netlify setting
2020-09-15T19:43:39  <sbates> yes
2020-09-15T19:43:45  <sbates> it's a configuration
2020-09-15T19:43:56  <Bosmon> Incredible
2020-09-15T19:43:57  <sbates> you can say build all
2020-09-15T19:44:15  <cindyli> let me check..
2020-09-15T19:44:21  <sbates> I use it for c2lc, each time I want a special build, I just push a branch
2020-09-15T19:44:31  <Bosmon> I guess it frees us from having to think of a whole extra layer of names
2020-09-15T19:44:42  <sbates> and I get a deployment at a predicable URL
2020-09-15T19:44:51  <Bosmon> Although I guess it makes it less clear how to make the gesture that "I no longer want this build" other than destroying the branch
2020-09-15T19:44:57  <Bosmon> WHich seems undesirably state-erasing
2020-09-15T19:45:00  <sbates> right, yes
2020-09-15T19:45:58  <cindyli> ya, netlify settings allow to build deploys for all branches
2020-09-15T19:46:11  <cindyli> Bosmon's point makes sense too
2020-09-15T19:46:26  <Bosmon> I guess practice we will want a more refined system for determining what "kind" of build is done in any case
2020-09-15T19:46:36  <Bosmon> So the model of doing "some" build for all branches might be the best one
2020-09-15T19:47:08  <Bosmon> The way to say "I don't want that kind of build" might be to simply push some material to package.json directing that you want "the null build"
2020-09-15T19:47:09  <sbates> an option to consider anyway
2020-09-15T19:47:23  <Bosmon> Similar to historical and current uses of fluid.emptySubcomponent : P
2020-09-15T19:47:39  <cindyli> that would be cool
2020-09-15T20:00:19  <colinclark> Does Netlify’s configuration have an API?
2020-09-15T20:00:36  <colinclark> which you couse use to then add or remove branches from the list of ones to be built and deployed
2020-09-15T20:00:48  <colinclark> so that branches wouldn’t have to be deleted to make this happen
2020-09-15T20:00:50  <sbates> cindyli, Bosmon: in terms of customizing individual builds or limiting which branches get built, you may be able to use the file-based configuration https://docs.netlify.com/configure-builds/file-based-configuration/
2020-09-15T20:02:56  <sbates> colinclark: there's definitely an API, so I think it's a possibility, I'm scanning through it now
2020-09-15T20:03:15  <colinclark> the file configuration might just be enough
2020-09-15T20:04:27  <sbates> there's also the netlify-cli command line tool that could be driven from GitHub Actions for example
2020-09-15T20:08:25  <colinclark> ah interestnig
2020-09-15T20:20:22  <sbates> it looks like there maybe isn't currently any way to delete deployments: https://github.com/netlify/open-api/issues/97 (from Feb 2019)
2020-09-15T20:25:56  <sbates> discussion on deploy lifetimes: https://community.netlify.com/t/does-each-deploy-preview-stay-available-forever/12601
2020-09-15T20:28:39  <sbates> "the only method to delete a deploy is to delete the site which deletes all deploys associated with the site. There is no other workaround at this time."
2020-09-15T20:28:50  <sbates> from the above discussion
2020-09-15T20:29:20  <sbates> my reading then is that even if a branch or PR is deleted, the associated deploy will persist
2020-09-15T20:30:32  <sbates> Bosmon, colinclark ^
2020-09-15T21:55:29  <Bosmon> sbates - really fascinating
2020-09-15T21:55:33  <Bosmon> And perhaps slightly worrying : P
2020-09-15T22:00:33  <Bosmon> I would say that, sociologically speaking, this notion of "immutability" inherently speaks to a certain kind of "privilege" ...

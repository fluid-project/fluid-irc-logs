2020-06-16T14:22:35  <gtirloni> what are the browsers officially supported by Infusion?
2020-06-16T14:24:38  <colinclark> Justin_o can verify, but I believe we’re (finally!) supporting only modern browsers
2020-06-16T14:24:45  <colinclark> No more IE11, etc.
2020-06-16T14:25:52  <colinclark> Now’s a good time to keep it simple, so I don’t really see a compelling reason to test on the rapidly proliferating Chrome forks...
2020-06-16T14:25:56  <Justin_o> colinclark, gtirloni: yes that's right, we recently decided to drop support for IE. It was too much of a maintenance burden.
2020-06-16T14:26:06  <colinclark> so I guess that leaves us with Firefox, Chrome, and Safari
2020-06-16T14:26:17  <colinclark> the latter two on Windows and macOS
2020-06-16T14:26:24  <colinclark> sorry, former two
2020-06-16T14:26:57  <gtirloni> cool!
2020-06-16T14:27:46  <gtirloni> we're skipping Safari tests though
2020-06-16T14:27:50  <Justin_o> greatislander: has suggested using https://browserl.ist to identify browsers to support. You can also use that to configure your builds for transpilation and compiling. I don't think we do that too much. You can customize the list it generates though if you don't want to use their suggestion
2020-06-16T14:28:11  <gtirloni> https://github.com/fluid-project/infusion/blob/master/tests/testem.js#L41
2020-06-16T14:28:52  <Justin_o> gtirloni: I left a comment on the JIRA, right now there is a problem with testem and newer versions of Safari
2020-06-16T14:29:01  <gtirloni> ok
2020-06-16T14:29:13  <Justin_o> basically when Safari is triggered it it requires user intervention to proceed
2020-06-16T14:29:31  <Justin_o> it seems like Karma has a workaround for that issue though, so hopefully testem will get it fixed up soon.
2020-06-16T14:30:27  <gtirloni> re: FLUID-6519 (testing on Linux, Windows and macOS), do we expect any differences at all between Firefox/Chrome on those different OSes?
2020-06-16T14:30:57  <gtirloni> I'm wondering if it makes sense to test on Firefox on each of them.. or if just testing on Linux would be enough
2020-06-16T14:35:39  <Justin_o> gtirloni: generally speaking we don't expect there to be differences across platform, but that's not always the case.
2020-06-16T14:36:31  <gtirloni> got it
2020-06-16T14:36:33  <Justin_o> gtirloni: something like the Text-to-speech might perform differently across platform because it may interact with the speech synthesizers installed on the machines
2020-06-16T14:37:36  <gtirloni> Justin_o: is there are JIRA about the IE11 deprecation? I'd like to submit a PR to add IE11 to the skip list in testem
2020-06-16T14:37:45  <gtirloni> it's breaking my PR to test on windows :)
2020-06-16T14:37:49  <Justin_o> we've actually had some issues testing that one because of it. I think in the VMs there might not be a sound card and that can cause problems as the feature is supported but still doesn't work. Or maybe those images didn't have the synthesizers installed..
2020-06-16T14:38:37  <Justin_o> gtirloni: so it's on the mailing list and in the comments of another JIRA. Let me see if I can find you a link. I think we'll need a JIRA for your work though
2020-06-16T14:39:13  <Justin_o> gtirloni: http://fluid.2324889.n4.nabble.com/Proposal-to-remove-IE-11-support-from-Infusion-td10852.html
2020-06-16T14:39:57  <Justin_o> gtirloni: also rather than skipping a bunch of things, you might want to just set which browsers to test. There's also a flag to skip if the requested browser isn't present
2020-06-16T14:40:51  <gtirloni> thanks, I'll create a JIRA
2020-06-16T14:41:11  <Justin_o> gtirloni: here's an example of what I mean https://github.com/GPII/gpii-open-same-tab-extension/blob/master/tests/testem.js#L38-L39
2020-06-16T14:41:35  <gtirloni> got it, makes sense
2020-06-16T14:41:40  <gtirloni> thanks
2020-06-16T14:50:59  <colinclark> Justin_o: !
2020-06-16T14:51:09  <colinclark> Karma has a workaround for the annoying Safari issue?
2020-06-16T14:51:23  <colinclark> me and the-t- were just talking about this issue yesterday
2020-06-16T14:51:45  <Justin_o> colinclark: I filed this issue with testem a while back https://github.com/testem/testem/issues/1387
2020-06-16T14:52:00  <Justin_o> someone left this comment https://github.com/testem/testem/issues/1387#issuecomment-630783762
2020-06-16T14:52:31  <colinclark> wow, they used applescript to work around it
2020-06-16T14:52:31  <Justin_o> but looking at it again, I guess it's not actually from Karma :( but the workaround is for karma
2020-06-16T14:52:41  <colinclark> Apple!
2020-06-16T14:53:08  <colinclark> Right now I’m still on macOS 10.14, but the issue happens there too
2020-06-16T14:53:15  <colinclark> I’m so excited to upgrade to the newest version
2020-06-16T14:53:17  <colinclark> I think it’s called...
2020-06-16T14:53:20  <colinclark> Windows 10
2020-06-16T14:53:22  <colinclark> :)
2020-06-16T14:54:02  <Justin_o> colinclark: I think it's an issue with Safari 13, which was also released on prior versions of macOS
2020-06-16T14:54:06  <colinclark> yup
2020-06-16T14:54:08  <colinclark> exactly
2020-06-16T14:54:17  <Justin_o> I don't think I could make that switch
2020-06-16T14:54:33  <colinclark> avtar helped me build a PC before COVID struck
2020-06-16T14:54:40  * gtirloni will help anyone that wants to switch to Fedora 32
2020-06-16T14:54:42  <colinclark> I use it exclusively for creative work
2020-06-16T14:54:46  <colinclark> which includes coding
2020-06-16T14:54:49  <colinclark> I actually really love it
2020-06-16T14:55:03  <colinclark> gtirloni: lol
2020-06-16T14:56:28  <Justin_o> colinclark: I guess there are a lot of cross over in terms of IDEs and other major software applications these days, so moving between platforms probably isn't as difficult anymore
2020-06-16T14:56:33  <Justin_o> and with so much being online too
2020-06-16T14:56:38  <colinclark> yup
2020-06-16T14:56:50  <colinclark> VS Code is exactly the same on Windows as on Mac
2020-06-16T14:57:02  <colinclark> I don’t love cmd.exe, but that’s life
2020-06-16T14:57:08  <gtirloni> running Linux on Windows 10 through WSL2 is pretty sweet these days
2020-06-16T14:57:14  <colinclark> I haven’t quite embraced WSL yet
2020-06-16T14:57:26  <colinclark> i really should, but it was so confusing
2020-06-16T14:57:35  <gtirloni> I'm running a Insider Build of W10 on my desktop and got the latest WSL, it's pretty cool
2020-06-16T14:57:36  <colinclark> it still feels like two separate worlds
2020-06-16T14:57:41  <colinclark> ah great
2020-06-16T14:57:42  <gtirloni> VS Code integrates seamlessly
2020-06-16T14:57:44  <colinclark> the new shell is nice too
2020-06-16T14:57:48  <colinclark> oh
2020-06-16T14:57:53  <Justin_o> I've been trying to avoid VS Code because I don't like the way it looks mostly. But I'm afraid that Atom isn't going to be supported in the future and they've already seem to have lost some things.
2020-06-16T14:57:54  <colinclark> you’ll have to tell me more about that, gtirloni
2020-06-16T14:57:57  <colinclark> that sounds good
2020-06-16T14:57:59  <gtirloni> as in, I'm running VSCode on windows and it's compiling and doing things inside WSL
2020-06-16T14:58:19  <colinclark> Justin_o: I switched the day that avtar showed me how to debug Node.js apps in VS Code
2020-06-16T14:58:35  <colinclark> like any Nerd Product, you can configure the look of it a lot
2020-06-16T14:58:40  <Justin_o> colinclark: that's basically all I use VS Code for
2020-06-16T14:58:42  <colinclark> I like my file browser on the right, for example
2020-06-16T14:59:01  <colinclark> gtirloni: Yeah, that’s exactly what I want
2020-06-16T14:59:27  <colinclark> oh Justin_o, while we’re on the subject of Windows
2020-06-16T14:59:27  <Justin_o> colinclark: it's weird because there is something about the general aesthetic I don't like, but I should really spend more time trying to get it configured.
2020-06-16T14:59:37  <gtirloni> colinclark: once you install/enable WSL 2.. you open a terminal and type "code" .. it magically figures out it's running inside WSL and installs all the extensions and whatnot to make everything work. It was pretty magical
2020-06-16T14:59:47  <colinclark> beauty, gtirloni
2020-06-16T15:00:12  <colinclark> I learned yesterday that we now require line endings in Git to be configured in a particular way on any project that uses fluid-eslint-config
2020-06-16T15:00:38  <colinclark> since it now statically lints LF line endings, you can’t use the default autocrlf=true
2020-06-16T15:00:59  <colinclark> it has to be set to “input” and Windows users have to ensrue their editor is always using LF instead of CRLF
2020-06-16T15:01:27  <colinclark> since autocrlf only does the conversion for you on commit, it’s too late for the linter
2020-06-16T15:03:30  <Justin_o> colinclark: yes, I think we added that change alongside adding the .editorconfig
2020-06-16T15:03:46  <colinclark> what’s the .editorconfig?
2020-06-16T15:04:17  <Justin_o> https://editorconfig.org
2020-06-16T15:04:28  <Justin_o> https://github.com/fluid-project/infusion/blob/master/.editorconfig
2020-06-16T15:05:35  <Justin_o> it's a way of letting the code base define editor settings. That way you don't have to worry so much about having to reconfigure your settings for each project yourself
2020-06-16T15:07:23  <colinclark> oh right
2020-06-16T15:07:28  <colinclark> this is a VS Code plugin I have to add
2020-06-16T15:10:29  <colinclark> it’s too bad fluid-eslint-config couldn’t provide this infrastructure automatically
2020-06-16T15:11:04  <Justin_o> colinclark: you mean the git config? or the editor config?
2020-06-16T15:11:11  <colinclark> the latter
2020-06-16T15:11:25  <Justin_o> colinclark: also eslint is planning on changing their configuration methods.. let me dig up the issue.
2020-06-16T15:11:30  <colinclark> oh interesting
2020-06-16T15:11:49  <colinclark> reminds me...
2020-06-16T15:11:59  <colinclark> i also noticed a rule we should probably include in our eslint config
2020-06-16T15:12:25  <colinclark> https://github.com/continuing-creativity/flocking-midi/blob/master/.eslintrc.json#L11-L17
2020-06-16T15:12:44  <colinclark> ESLint seems to default to a really bizarre un-indented style of switch statement
2020-06-16T15:13:14  <colinclark> where the case statement is at the same level as the switch
2020-06-16T15:14:34  <Justin_o> colinclark: okay, we probably just haven't run into that one yet.
2020-06-16T15:14:46  <colinclark> yeah, we don’t use them much
2020-06-16T15:14:59  <colinclark> anyway, linting is boring :)
2020-06-16T15:15:07  <colinclark> these were just the little details I ran across recently
2020-06-16T15:21:40  <Justin_o> colinclark: took a while, but I found it.. so this is a proposal I guess for a new way to configure eslint https://github.com/eslint/rfcs/pull/9
2020-06-16T15:22:13  <Justin_o> one problem, and something we'll soon have for fluid-eslint-config is that we'll need to add a plugin for linting jsdoc but you can't really bundle those with the shareable config
2020-06-16T15:22:35  <colinclark> you know it’s funny...
2020-06-16T15:22:47  <colinclark> i was just thinking the other day as I was fighting to properly override our ESLint shared config
2020-06-16T15:22:57  <colinclark> how annoying it is to have to repeat yourself
2020-06-16T15:23:43  <Justin_o> it's also very opaque at times.. I've run into issues with shared configs from other repos and it took for ever to track back what exactly the linting rules are
2020-06-16T15:23:47  <colinclark> like I had write these lines all over again: https://github.com/continuing-creativity/flocking-midi/blob/master/.eslintrc.json#L12-L13
2020-06-16T15:23:56  <colinclark> even though they are the same as in fluid-eslint-config
2020-06-16T15:24:10  <colinclark> but I had to include them in order to overrride the “SwitchCase” option
2020-06-16T15:24:12  <Justin_o> colinclark: because it's an array
2020-06-16T15:24:20  <colinclark> yeah
2020-06-16T15:24:33  <colinclark> so what was I thinking about is how much we’ve learned about these kinds of issues
2020-06-16T15:24:50  <Justin_o> colinclark: I mean we have issues with arrays in infusion too, but I'm not sure why some of these things are defined as arrays for eslint config
2020-06-16T15:24:51  <colinclark> and how much easier it is to override an Infusion component than it is to override ESLint :)
2020-06-16T15:25:00  <colinclark> yes, which is why we often avoid arrays
2020-06-16T15:25:12  <colinclark> in favour of things we can name and more cleanly override
2020-06-16T15:25:21  <Justin_o> yep, although I think Bosmon has some ideas for working with arrays in models
2020-06-16T15:25:29  <colinclark> indeed he does
2020-06-16T15:27:27  <Justin_o> colinclark: I don't know what the ETA for that config change is, it's still in the "initial commenting" phase as per https://github.com/eslint/eslint/projects/7

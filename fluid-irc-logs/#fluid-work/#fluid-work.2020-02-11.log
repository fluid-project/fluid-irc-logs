2020-02-11T00:10:04  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-bingudoqlxkxifdk> has quit IRC (Quit: Connection closed for inactivity)
2020-02-11T01:30:16  <sgithens> Bosmon: Seeing a release such as this in a package.json file, how do I determine what I would checkout to actually get that, since there isn't currently a GPII-4253 branch
2020-02-11T01:30:35  <sgithens> I can lookup the b920f98 commit in github
2020-02-11T01:31:00  <sgithens> if I just checkout that commit though... I'm not sure if that's guaranteed to be the same place
2020-02-11T01:31:44  <sgithens> there is some stuff in this release which is necessary for failing test in my gpii-app branch, so I want to pull it into my gpii-windows branch with the capture tool work
2020-02-11T01:32:26  <sgithens> oh wait
2020-02-11T01:32:41  <sgithens> ok yeah, that's right I just get that commit
2020-02-11T01:32:57  <sgithens> nevermind
2020-02-11T01:51:50  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has quit IRC (Quit: Leaving.)
2020-02-11T01:52:13  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has joined #fluid-work
2020-02-11T01:57:00  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has quit IRC (Ping timeout: 265 seconds)
2020-02-11T02:43:17  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-11T02:58:07  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-11T03:37:33  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-11T03:56:59  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-11T03:57:20  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-11T04:23:20  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-11T04:49:40  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-11T04:54:46  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Ping timeout: 268 seconds)
2020-02-11T05:17:09  *** Teddy__ <Teddy__!uid407930@gateway/web/irccloud.com/x-yrpqzopxdbpbolti> has quit IRC (Quit: Connection closed for inactivity)
2020-02-11T05:53:51  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:52b:69dc:c2f9:b2e5> has quit IRC (Ping timeout: 246 seconds)
2020-02-11T07:12:01  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:18f4:cf98:1099:a10e> has joined #fluid-work
2020-02-11T07:15:40  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-11T07:20:41  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Ping timeout: 272 seconds)
2020-02-11T07:29:07  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:18f4:cf98:1099:a10e> has quit IRC (Quit: Leaving.)
2020-02-11T08:11:43  *** kasparnet <kasparnet!~kasper@192038135240.mbb.telenor.dk> has joined #fluid-work
2020-02-11T08:14:04  *** kasparnet <kasparnet!~kasper@192038135240.mbb.telenor.dk> has quit IRC (Read error: Connection reset by peer)
2020-02-11T08:52:04  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:18f4:cf98:1099:a10e> has joined #fluid-work
2020-02-11T09:16:14  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-11T09:20:27  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Ping timeout: 240 seconds)
2020-02-11T09:30:13  <the-t-in-rtf> Morning, @Bosmon and @javjarfer[m]
2020-02-11T09:30:16  <the-t-in-rtf> https://issues.gpii.net/browse/GPII-4344
2020-02-11T09:30:44  <the-t-in-rtf> I am starting to work on fixing the mouse settings issues (and potentially other similar bugs with "intra-application transforms")
2020-02-11T09:31:19  <Bosmon> the-t-in-rtf - really good report, thanks
2020-02-11T09:33:11  <the-t-in-rtf> thanks.  I may need input from whoever loaded these particular foot cannons, but hopefully I can figure most of it out just from what's there.
2020-02-11T09:33:49  <the-t-in-rtf> working on the foot cannon detector at the moment.
2020-02-11T09:34:48  <the-t-in-rtf> In addition to the two that went off this go, there are a couple of dozen potential foot cannons lying around.
2020-02-11T09:35:30  <Bosmon> I'm sure that these days we prefer to consider that these cannons are 300mm long
2020-02-11T09:36:37  <the-t-in-rtf> ha, I meant the part of the body targeted, not the length
2020-02-11T09:36:55  <the-t-in-rtf> Anyway, I do have an actual question
2020-02-11T09:36:56  <the-t-in-rtf> https://github.com/GPII/universal/blob/76ad0e6d5eb7023a566bcabbc32695e5e844ba00/testData/solutions/win32.json5#L7788
2020-02-11T09:37:12  <the-t-in-rtf> I was going to tidy this up and move the value part to its own element, rather than using outputPath
2020-02-11T09:37:17  <the-t-in-rtf> I assume that's fine?
2020-02-11T09:37:39  <the-t-in-rtf> or is there some special convention at work?
2020-02-11T09:37:45  <Bosmon> the-t-in-rtf - absolutely
2020-02-11T09:37:52  <Bosmon> Many of these old transforms are extremely crusty
2020-02-11T09:38:04  <Bosmon> And were just cobbled by pasting bits of other transforms that people saw around
2020-02-11T09:38:54  <the-t-in-rtf> yes, without tests things descend into savagery so quickly
2020-02-11T09:39:10  <the-t-in-rtf> Anyway, what is the actual expected structure of the "path" element?
2020-02-11T09:39:25  <the-t-in-rtf> the schema claims it's a string, but the transform produces an object.
2020-02-11T09:40:15  <Bosmon> the-t-in-rtf - well, this is the bit that is going to be revised by sgithens work anyway.... but in the meantime it looks like it is either a String or a hash of get/set?
2020-02-11T09:40:45  <the-t-in-rtf> so it can be either?
2020-02-11T09:40:59  <the-t-in-rtf> I can certainly make that work, just need to know.
2020-02-11T09:41:18  <Bosmon> the-t-in-rtf - no way of knowing other than looking at the code : P
2020-02-11T09:41:59  <Bosmon> https://github.com/GPII/windows/blob/master/gpii/node_modules/spiSettingsHandler/src/SpiSettingsHandler.js#L280
2020-02-11T09:42:59  <the-t-in-rtf> ha!
2020-02-11T09:43:06  <the-t-in-rtf> just came back to paste the very next line
2020-02-11T09:43:06  <the-t-in-rtf> https://github.com/GPII/windows/blob/3e5cd8ed59e7b10b2d1088effa15a89181401756/gpii/node_modules/spiSettingsHandler/src/SpiSettingsHandler.js#L281
2020-02-11T09:43:10  <the-t-in-rtf> cheers
2020-02-11T09:43:17  <the-t-in-rtf> anyway, that's clear enough
2020-02-11T09:43:34  <the-t-in-rtf> it'll add little boilerplate to all of those settings until my LSR work is available, but it's fine
2020-02-11T09:49:17  <the-t-in-rtf> https://pastebin.com/Nju2EnTW
2020-02-11T09:49:57  <the-t-in-rtf> that construct is what we needed instead of either variation, which were two-bullet foot cannons with one chamber full.
2020-02-11T09:50:39  <the-t-in-rtf> already confirmed that I've fixed the transform that caused this specific problem, but going through the whole stack while I'm there.
2020-02-11T09:50:54  <the-t-in-rtf> should still be ready for review later today
2020-02-11T09:54:50  <the-t-in-rtf> https://github.com/GPII/universal/blob/76ad0e6d5eb7023a566bcabbc32695e5e844ba00/testData/solutions/win32.json5#L9647
2020-02-11T09:55:00  <the-t-in-rtf> So, there's "value" as a boolean.
2020-02-11T09:56:04  <the-t-in-rtf> And there's "value" as an enum with 0 and 1
2020-02-11T09:56:05  <the-t-in-rtf> https://github.com/GPII/universal/blob/76ad0e6d5eb7023a566bcabbc32695e5e844ba00/testData/solutions/win32.json5#L7770
2020-02-11T09:56:23  <the-t-in-rtf> given that these are never stored, I think we can safely standardise
2020-02-11T09:56:27  <the-t-in-rtf> ideally on booleans
2020-02-11T09:56:51  <the-t-in-rtf> we only use that enum of 0 and 1 under duress, i.e. when dealing with unscientific unfreedoms
2020-02-11T09:58:26  <the-t-in-rtf> but I wanted to confirm with someone more familiar with it that there was no functional reason to use one vs. the other
2020-02-11T09:58:46  <the-t-in-rtf> (I am reading the code at the moment, but if someone knows outright, it'd be nice to hear about it)
2020-02-11T10:02:15  <the-t-in-rtf> deep sigh as I realise that I really will have to run the windows tests against my work as I go
2020-02-11T10:02:32  <the-t-in-rtf> and potentially the gpii-app ones
2020-02-11T10:28:48  <Bosmon> There can be no such functional reason
2020-02-11T10:32:16  <the-t-in-rtf> wonderful
2020-02-11T10:32:21  <the-t-in-rtf> I am delighted to hear it
2020-02-11T10:32:33  <the-t-in-rtf> it will be a comfort to standardise that
2020-02-11T10:32:40  <the-t-in-rtf> it made my eyes itch
2020-02-11T10:38:33  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has joined #fluid-work
2020-02-11T11:11:37  <javjarfer[m]> Bosmon: hi! Good morning!
2020-02-11T11:16:35  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-11T11:20:50  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Ping timeout: 240 seconds)
2020-02-11T11:35:53  <javjarfer[m]> hi the-t-in-rtf ! good afternoon
2020-02-11T11:36:14  <javjarfer[m]> do you know if this fail is related to the problems you are seeing with the transforms? https://ci.gpii.net/job/universal-node-tests/2088/
2020-02-11T11:36:23  <javjarfer[m]> it's from my pull https://github.com/GPII/universal/pull/830
2020-02-11T11:38:22  <the-t-in-rtf> looking at the errors now
2020-02-11T11:38:36  <the-t-in-rtf> the value being undefined is pretty suspicious
2020-02-11T11:39:45  <the-t-in-rtf> and the fact that the name is the one that's post-transform
2020-02-11T11:40:10  <the-t-in-rtf> just a sec, tracking down a full example to advise you
2020-02-11T11:44:12  <the-t-in-rtf> so,  GitHub is unhelpfully not letting me see/link to line numbers
2020-02-11T11:44:19  <the-t-in-rtf> but this is exactly what I'm cleaning up as we speak
2020-02-11T11:44:35  <the-t-in-rtf> look at the definition for "SystemSettings_QuietMoments_Summary_Checkbox"
2020-02-11T11:44:46  <the-t-in-rtf> both the schema and the inverseCapabilitiesTransformation that generates it
2020-02-11T11:45:04  <the-t-in-rtf> sorry, the capabilitiesTransformation
2020-02-11T11:45:25  <the-t-in-rtf> it's stuffing the enabled flag into an object that looks like { value: "something"}
2020-02-11T11:45:35  <the-t-in-rtf> and the schema is not defined in terms of that format
2020-02-11T11:45:43  <the-t-in-rtf> i.e. it's written as though the value were everythhing
2020-02-11T11:46:18  <the-t-in-rtf> so it's fine to transform from an easier value to an SPI setting, but you actually have to represent the SPI setting in full as an object with path and value properties
2020-02-11T11:46:20  <the-t-in-rtf> the "
2020-02-11T11:46:54  <the-t-in-rtf> the "undefined" messages are slightly misleading, basically because it's comparing the object with the deeper value.
2020-02-11T11:47:12  <the-t-in-rtf> i.e. trying to test the rules for "value" against the enclosing object
2020-02-11T11:50:08  <the-t-in-rtf> I am just adding tests for this very thing and finding lots of examples where this same problem occurs
2020-02-11T11:50:56  <the-t-in-rtf> we'll have to check a bunch of SPI and native settings handler settings for this
2020-02-11T11:51:00  <the-t-in-rtf> like dozens
2020-02-11T11:53:27  <javjarfer[m]> the-t-in-rtf: I get it, so the problem is that the generated object of the transform have inner values which are the ones that should be verified against the schema
2020-02-11T11:53:50  <javjarfer[m]> yes, that's a standard procedure we have been doing since the spiSettingHandler
2020-02-11T11:53:59  <javjarfer[m]> I'm afraid that affect many settings
2020-02-11T11:54:41  <the-t-in-rtf> yes, I know
2020-02-11T11:54:53  <the-t-in-rtf> they'll all be fixed soon
2020-02-11T11:55:07  <javjarfer[m]> the-t-in-rtf: that's great!
2020-02-11T11:55:15  <the-t-in-rtf> but we don't have automated checks yet for the underlying problem, so we'll have to be careful in reviews
2020-02-11T11:55:53  <the-t-in-rtf> until we can come up with something that (for example) takes the defaults for each setting back and forward through the transforms
2020-02-11T11:56:13  <the-t-in-rtf> If I can, I'll add that
2020-02-11T11:56:56  <the-t-in-rtf> I believe it would have caught most of the issues we're seeing
2020-02-11T11:58:09  <the-t-in-rtf> right now I'm just adding test data that exposes the problem for each inferred setting
2020-02-11T12:21:55  <the-t-in-rtf> there were still two dozen, so I wrote the roundtripper
2020-02-11T12:22:10  <the-t-in-rtf> found 21 broken transform chains
2020-02-11T12:22:21  <the-t-in-rtf> mainly exactly this problem
2020-02-11T12:24:04  <the-t-in-rtf> oh, wow, so glad I wrote the new test
2020-02-11T12:24:27  <the-t-in-rtf> this is actually another variation, where the journey to/from the common term is broken
2020-02-11T12:24:53  <the-t-in-rtf> i.e. we start out with "Brightness": 0 and end up with "Brightness": { value: 0 }
2020-02-11T12:25:52  <the-t-in-rtf> hmm, that may be my fault, working on the check
2020-02-11T12:28:26  <the-t-in-rtf> OK, I got rid of some false positives and found that indeed, we have the same problem with common terms
2020-02-11T12:28:29  <the-t-in-rtf> check this out
2020-02-11T12:28:30  <the-t-in-rtf> https://github.com/GPII/universal/blob/master/testData/solutions/win32.json5#L7017
2020-02-11T12:29:25  <the-t-in-rtf> The schema clearly describes something that the transform doesn't
2020-02-11T12:29:35  <the-t-in-rtf> i.e. that's supposed to be a path/value construct
2020-02-11T12:32:07  <the-t-in-rtf> we may not be able to write checks for the underlying goof (using SPI settings and values interchangeably), but this check will at least catch a bunch of variations
2020-02-11T12:32:51  <javjarfer[m]> the-t-in-rtf: I see, I have fears that we should be able to test all of this before actually using it, because otherwise we could discover new errors at runtime
2020-02-11T12:33:02  <javjarfer[m]> looks like we have a lot of potential corner cases here
2020-02-11T12:34:20  <the-t-in-rtf> yes, I will do my best to test as many angles as I can
2020-02-11T12:34:36  *** jhernandez <jhernandez!~jhernande@2a02:a03f:6189:e000:d600:afb2:8af2:1a83> has joined #fluid-work
2020-02-11T12:37:47  <the-t-in-rtf> I think finding/addressing more than 2 dozen bugs in a day is a pretty good effort though… ;)
2020-02-11T12:38:06  <the-t-in-rtf> we knew we had two
2020-02-11T12:44:31  <the-t-in-rtf> OK, I think I found a new class of bug
2020-02-11T12:44:32  <the-t-in-rtf> https://github.com/GPII/universal/blob/master/testData/solutions/win32.json5#L7233
2020-02-11T12:44:51  <the-t-in-rtf> setting that to false roundtrips to 0, not false
2020-02-11T12:45:25  <the-t-in-rtf> I will investigate that after putting out the larger fires, as it's "mostly harmless"
2020-02-11T12:45:40  <javjarfer[m]> the-t-in-rtf: yes, nice one, those things will be sneaky ones
2020-02-11T13:07:29  <the-t-in-rtf> actually found one where 1 round trips to 0, that's my first target to fix
2020-02-11T13:07:38  <the-t-in-rtf> or true roundtrips to 0, I mean
2020-02-11T13:08:15  <the-t-in-rtf> ugh, other way round, false roundtrips to 1
2020-02-11T13:08:55  <the-t-in-rtf> uuuugh
2020-02-11T13:08:56  <the-t-in-rtf> https://github.com/GPII/universal/blob/master/testData/solutions/win32.json5#L7253
2020-02-11T13:09:31  <the-t-in-rtf> false is not equal to zero, and so is considered true
2020-02-11T13:10:27  <the-t-in-rtf> uuugh
2020-02-11T13:10:52  <the-t-in-rtf> the schema is exactly backwards from what the transforms describe
2020-02-11T13:11:21  <the-t-in-rtf> actually, that's fine,  it's a quicker fix that way
2020-02-11T13:22:36  <the-t-in-rtf> OK,  polishing up the new check to warn on acceptably lossy round trips, like false->0->0 and true->1->1
2020-02-11T13:23:12  <the-t-in-rtf> but I have fixed a bunch of variations on the SPI and native settings handler settings that were not described property
2020-02-11T13:28:40  <the-t-in-rtf> and a couple of pairs of transforms that would mangle data roundtripped through them.
2020-02-11T13:29:15  <the-t-in-rtf> i.e. that old chestnut false -> 1 -> 1
2020-02-11T13:29:42  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2020-02-11T13:32:16  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-htyhevhgzvvgdlen> has joined #fluid-work
2020-02-11T13:42:14  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2020-02-11T13:58:37  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 265 seconds)
2020-02-11T13:59:34  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has joined #fluid-work
2020-02-11T14:01:45  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-11T14:04:24  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-11T14:04:47  *** alanharnum <alanharnum!uid363993@gateway/web/irccloud.com/x-ypjktziimneorqgy> has joined #fluid-work
2020-02-11T14:07:54  *** jhung is now known as jhung_away
2020-02-11T14:31:04  *** danielcho <danielcho!~Adium@205.211.168.103> has joined #fluid-work
2020-02-11T14:31:21  *** avtar <avtar!~avtar@ip-24-50-183-17.user.start.ca> has joined #fluid-work
2020-02-11T14:31:44  *** avtar <avtar!~avtar@ip-24-50-183-17.user.start.ca> has quit IRC (Remote host closed the connection)
2020-02-11T14:32:17  *** clown <clown!clown@nat/ocadu/x-tyturmqrrhpalzch> has joined #fluid-work
2020-02-11T14:32:27  *** avtar <avtar!~avtar@ip-24-50-183-17.user.start.ca> has joined #fluid-work
2020-02-11T14:40:50  *** jhung_away <jhung_away!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 240 seconds)
2020-02-11T14:52:00  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has quit IRC (Remote host closed the connection)
2020-02-11T14:52:22  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has joined #fluid-work
2020-02-11T14:52:45  *** clown1 <clown1!clown@nat/ocadu/x-hawffyxzerkanifq> has joined #fluid-work
2020-02-11T14:53:29  *** clown <clown!clown@nat/ocadu/x-tyturmqrrhpalzch> has quit IRC (Disconnected by services)
2020-02-11T14:53:32  *** clown1 is now known as clown
2020-02-11T15:14:29  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has joined #fluid-work
2020-02-11T15:24:31  *** Teddy__ <Teddy__!uid407930@gateway/web/irccloud.com/x-sofeppvffzhkqyab> has joined #fluid-work
2020-02-11T15:50:43  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-11T15:53:45  *** jhernandez <jhernandez!~jhernande@2a02:a03f:6189:e000:d600:afb2:8af2:1a83> has quit IRC (Quit: jhernandez)
2020-02-11T15:54:16  *** jhernandez <jhernandez!~jhernande@109.131.217.102> has joined #fluid-work
2020-02-11T16:05:49  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-11T16:16:02  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-11T16:16:33  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-11T16:23:21  *** clown <clown!clown@nat/ocadu/x-hawffyxzerkanifq> has quit IRC (Quit: Leaving.)
2020-02-11T16:51:57  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 268 seconds)
2020-02-11T16:54:51  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2020-02-11T17:19:15  <cindyli> gmoss: shall we talk about the review comments on your SJRK-104 pull request?
2020-02-11T17:21:54  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-02-11T17:40:38  *** clown <clown!clown@nat/ocadu/x-wzdiwkivpbcqwfml> has joined #fluid-work
2020-02-11T17:42:31  <gmoss> Bosmon: cindyli, michelled and I have just had a brief discussion about SJRK-104 PR feedback. We're wondering what you think about the hiding/showing logic. Specifically, what are your reasons for suggesting that we use multiple model values to represent the visibility states of each step/UI? I have reasons of my own, but I don't want to preempt yours with those :)
2020-02-11T17:44:00  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-11T17:44:22  *** alanharnum <alanharnum!uid363993@gateway/web/irccloud.com/x-ypjktziimneorqgy> has quit IRC (Quit: Connection closed for inactivity)
2020-02-11T17:45:30  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-11T17:48:54  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has quit IRC (Quit: Leaving.)
2020-02-11T18:01:39  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-11T18:05:49  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has left #fluid-work
2020-02-11T18:14:45  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-02-11T18:14:57  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has joined #fluid-work
2020-02-11T18:17:41  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2020-02-11T18:18:25  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-11T18:20:45  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-11T18:28:51  <Bosmon> gmoss - because the purpose of model state is to be a mirror for visible state
2020-02-11T18:29:27  <Bosmon> Just because you think you have certain exclusion relations in place which preclude certain combinations of such state, there's no reason use these to economise on your addressible model space ....
2020-02-11T18:30:53  <Bosmon> After all, the relations might go away some day, as a result of some further authorial decision
2020-02-11T18:31:16  <Bosmon> And then there'll you'll be, stuck with a configuration of your application which is impossible to encode
2020-02-11T18:31:33  <Bosmon> Or.... there someone will be
2020-02-11T18:40:11  *** danielcho <danielcho!~Adium@205.211.168.103> has quit IRC (Quit: Leaving.)
2020-02-11T18:58:15  *** danielcho <danielcho!~Adium@205.211.168.103> has joined #fluid-work
2020-02-11T18:58:16  <gmoss> Bosmon: these are the same reasons I had, though far better articulated :) cindyli made a compelling suggestion this morning, which was that if we want to change the interaction between the bits we want to hide and show, the single model value we're using currently could be adapted to store a string or other non-boolean value to represent a multitude of possible states. I mentioned then that the name of this single
2020-02-11T18:58:16  <gmoss> value needs to change to reflect its true nature (i.e. that it controls more than the visibility of a single thing), indeed this should probably change if we're going to continue to use one value for two states. We're doing a bit of a mix of the two approaches in the previewer component, using a valueMapper relay to propagate the single value to the other binary visibility control state values
2020-02-11T18:59:04  <gmoss> not to suggest the valueMapper approach is the correct one, it's just what we're doing ;)
2020-02-11T18:59:49  <gmoss> At the end of the day, we'll need to make a decision on what is acceptable in order to get SJRK-104 merged in
2020-02-11T19:10:53  *** danielcho <danielcho!~Adium@205.211.168.103> has quit IRC (Remote host closed the connection)
2020-02-11T19:11:07  *** danielcho <danielcho!~Adium@205.211.168.103> has joined #fluid-work
2020-02-11T19:26:49  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-11T19:46:15  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-11T19:48:15  <sgithens> javjarfer[m]: Do you know if this 2020 version of JAWS is different than the newest one we have in the solutions registry? Is the registry entry going to have to be updated to XYZed2020? https://support.freedomscientific.com/Downloads/JAWS
2020-02-11T19:48:43  <sgithens> I should probably download the 2019 version right?
2020-02-11T19:52:42  *** michelled1 <michelled1!~Adium@S01067896845ea39e.vn.shawcable.net> has joined #fluid-work
2020-02-11T19:52:42  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has quit IRC (Read error: Connection reset by peer)
2020-02-11T19:58:35  *** michelled1 <michelled1!~Adium@S01067896845ea39e.vn.shawcable.net> has quit IRC (Quit: Leaving.)
2020-02-11T19:58:45  <javjarfer[m]> sgithens , Hi! I saw your comments in the pull, sry I haven't been able to address then yet (day with lots of stuff), but yes, I will go with JAWS 2019
2020-02-11T19:58:49  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has joined #fluid-work
2020-02-11T20:00:15  <javjarfer[m]> JAWS 2020 doesn't change almost nothing, just 4 more settings and different config files, but we haven't onboarded them tested it yet
2020-02-11T20:00:31  <javjarfer[m]> So, I will go with 2019 until that
2020-02-11T20:02:08  <sgithens> javjarfer[m]: Great thanks
2020-02-11T20:03:59  <javjarfer[m]> sgithens, yw!
2020-02-11T20:05:34  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-02-11T20:08:55  *** clown1 <clown1!clown@nat/ocadu/x-jyipuwiqajzmbbng> has joined #fluid-work
2020-02-11T20:10:25  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-11T20:10:33  *** clown2 <clown2!clown@nat/ocadu/x-esjbqtrreqfhtsns> has joined #fluid-work
2020-02-11T20:11:16  *** clown <clown!clown@nat/ocadu/x-wzdiwkivpbcqwfml> has quit IRC (Disconnected by services)
2020-02-11T20:11:19  *** clown2 is now known as clown
2020-02-11T20:13:06  *** clown1 <clown1!clown@nat/ocadu/x-jyipuwiqajzmbbng> has quit IRC (Ping timeout: 246 seconds)
2020-02-11T20:38:30  *** cindyli1 <cindyli1!~Adium@198.52.178.16> has joined #fluid-work
2020-02-11T20:41:27  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Ping timeout: 260 seconds)
2020-02-11T20:48:40  *** Shyamal <Shyamal!uid411152@gateway/web/irccloud.com/x-tifvxsqkbejyxvqn> has joined #fluid-work
2020-02-11T20:58:12  *** cindyli1 <cindyli1!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2020-02-11T20:58:19  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-02-11T21:08:18  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-11T21:11:29  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2020-02-11T21:16:31  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:18f4:cf98:1099:a10e> has quit IRC (Quit: Leaving.)
2020-02-11T21:36:49  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2020-02-11T21:40:04  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:898b:82cc:427d:e6a5> has joined #fluid-work
2020-02-11T21:40:09  *** jhernandez <jhernandez!~jhernande@109.131.217.102> has quit IRC (Quit: jhernandez)
2020-02-11T21:46:27  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:898b:82cc:427d:e6a5> has quit IRC (Ping timeout: 272 seconds)
2020-02-11T21:58:53  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2020-02-11T21:59:24  *** clown <clown!clown@nat/ocadu/x-esjbqtrreqfhtsns> has quit IRC (Quit: Leaving.)
2020-02-11T21:59:48  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-11T22:03:06  *** danielcho <danielcho!~Adium@205.211.168.103> has quit IRC (Quit: Leaving.)
2020-02-11T22:09:51  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Quit: Leaving)
2020-02-11T22:22:10  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has quit IRC (Quit: Leaving.)
2020-02-11T22:22:34  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has joined #fluid-work
2020-02-11T22:23:25  *** michelled <michelled!~Adium@S01067896845ea39e.vn.shawcable.net> has quit IRC (Client Quit)
2020-02-11T22:34:15  *** avtar <avtar!~avtar@ip-24-50-183-17.user.start.ca> has quit IRC (Remote host closed the connection)
2020-02-11T22:35:22  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2020-02-11T22:45:19  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-11T23:18:05  *** Shyamal <Shyamal!uid411152@gateway/web/irccloud.com/x-tifvxsqkbejyxvqn> has quit IRC (Quit: Connection closed for inactivity)

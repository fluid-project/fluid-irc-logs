2019-06-16T01:42:10  *** sepidehshahi <sepidehshahi!~sepidehsh@205.211.168.101> has joined #fluid-work
2019-06-16T01:42:10  *** sepidehshahi <sepidehshahi!~sepidehsh@205.211.168.101> has quit IRC (Client Quit)
2019-06-16T05:43:28  *** sepidehshahi <sepidehshahi!~sepidehsh@205.211.168.101> has joined #fluid-work
2019-06-16T05:43:28  *** sepidehshahi <sepidehshahi!~sepidehsh@205.211.168.101> has quit IRC (Client Quit)
2019-06-16T18:14:14  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-06-16T18:20:09  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-06-16T22:13:03  *** Bosmon <Bosmon!~a@82-71-9-15.dsl.in-addr.zen.co.uk> has joined #fluid-work
2019-06-16T22:24:31  <sgithens> Bosmon: I'm wondering, is there a generalized change applier routine where you could just pass it an object to work on, rather than an inferred model from the component it's bound to? So like, you'd still an infusion component with the built up transforms and whatnot, but when you use it's change applier you could pass an object for it to transform?
2019-06-16T22:25:06  <Bosmon> sgithens - this is deprecated, in the modern framework each ChangeApplier is tightly bound to the model of its associated component
2019-06-16T22:25:21  <Bosmon> You're not meant to commit crimes against user programming by operating on disembodied objects : P
2019-06-16T22:26:49  <sgithens> the-t-in-rtf: had mentioned using transforms for the DB migration stuff.. so if you're updating millions of records, it seems like it would be nice to just operate it on each couch record that needs updated rather than create a full component instance for each one.
2019-06-16T22:27:02  <sgithens> Maybe the instantiation isn't that expensive and it doesn't matter
2019-06-16T22:27:33  <Bosmon> Sadly, today, the instantiation is moderately expensive
2019-06-16T22:27:42  <Bosmon> Although not really that expensive compared to the cost of the I/O
2019-06-16T22:28:10  <sgithens> I guess you could just changeApply the entire model before each one :p
2019-06-16T22:29:05  <sgithens> although, tranformsing random data seems much less criminal than most things I want to do
2019-06-16T22:29:10  <sgithens> or tend to do
2019-06-16T22:29:19  <sgithens> for batch processing and stuf
2019-06-16T23:03:35  <Bosmon> Yes, in theory the moral thing to do is to make a fresh component for each record
2019-06-16T23:04:12  <Bosmon> I mean, you would anyway, right? Since in general there would be a fresh DB query and probably overal HTTP request for each record

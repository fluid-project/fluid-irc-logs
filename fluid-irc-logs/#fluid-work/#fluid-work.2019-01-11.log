2019-01-11T00:41:43  *** colinclark <colinclark!~colinclar@CPE0c473d35f193-CM0c473d35f190.cpe.net.cable.rogers.com> has joined #fluid-work
2019-01-11T00:48:56  *** colinclark <colinclark!~colinclar@CPE0c473d35f193-CM0c473d35f190.cpe.net.cable.rogers.com> has quit IRC (Ping timeout: 250 seconds)
2019-01-11T01:00:27  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has joined #fluid-work
2019-01-11T01:04:50  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has quit IRC (Ping timeout: 246 seconds)
2019-01-11T02:28:26  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has joined #fluid-work
2019-01-11T02:30:02  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has quit IRC (Client Quit)
2019-01-11T03:41:46  *** colinclark <colinclark!~colinclar@192-0-159-124.cpe.teksavvy.com> has joined #fluid-work
2019-01-11T03:41:52  *** colinclark <colinclark!~colinclar@192-0-159-124.cpe.teksavvy.com> has quit IRC (Client Quit)
2019-01-11T05:49:37  *** kasparnet <kasparnet!~kasper@ip-5-186-120-225.cgn.fibianet.dk> has joined #fluid-work
2019-01-11T05:49:37  *** kasparnet <kasparnet!~kasper@ip-5-186-120-225.cgn.fibianet.dk> has quit IRC (Read error: Connection reset by peer)
2019-01-11T06:02:45  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has joined #fluid-work
2019-01-11T06:07:00  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has quit IRC (Ping timeout: 250 seconds)
2019-01-11T09:11:32  *** kokoja <kokoja!~kokoja@83-148-84-242.ip.btc-net.bg> has joined #fluid-work
2019-01-11T09:12:42  *** kokoja <kokoja!~kokoja@83-148-84-242.ip.btc-net.bg> has quit IRC (Remote host closed the connection)
2019-01-11T09:13:20  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has joined #fluid-work
2019-01-11T09:39:40  *** kasparnet <kasparnet!~kasper@192.38.139.52> has joined #fluid-work
2019-01-11T09:42:29  *** kasparnet <kasparnet!~kasper@192.38.139.52> has quit IRC (Remote host closed the connection)
2019-01-11T09:42:57  *** kasparnet <kasparnet!~kasper@192.38.139.52> has joined #fluid-work
2019-01-11T09:42:59  *** kasparnet <kasparnet!~kasper@192.38.139.52> has quit IRC (Remote host closed the connection)
2019-01-11T09:46:55  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has quit IRC (Remote host closed the connection)
2019-01-11T09:47:40  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has joined #fluid-work
2019-01-11T09:51:43  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has quit IRC (Ping timeout: 245 seconds)
2019-01-11T10:18:26  *** kokoja <kokoja!~kokoja@83-148-84-242.ip.btc-net.bg> has joined #fluid-work
2019-01-11T10:21:18  *** kokoja <kokoja!~kokoja@83-148-84-242.ip.btc-net.bg> has quit IRC (Remote host closed the connection)
2019-01-11T10:21:52  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has joined #fluid-work
2019-01-11T10:30:58  *** kokoja_ <kokoja_!~kokoja@83-148-84-242.ip.btc-net.bg> has joined #fluid-work
2019-01-11T10:34:16  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has quit IRC (Ping timeout: 260 seconds)
2019-01-11T10:42:19  *** kokoja_ <kokoja_!~kokoja@83-148-84-242.ip.btc-net.bg> has quit IRC (Remote host closed the connection)
2019-01-11T10:51:25  *** kokoja <kokoja!~kokoja@83-148-84-242.ip.btc-net.bg> has joined #fluid-work
2019-01-11T11:46:03  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e55:d000:9dc5:4fb1:2508:34f8> has joined #fluid-work
2019-01-11T12:06:41  <javjarfer[m]> Hi there Bosmon !  Thanks for the fast merge of yesterday
2019-01-11T12:07:27  <Bosmon> javjarfer[m] - well not so fast, given somehow I found my local git repository was corrupted in a peculiar way which I hope doesn't happen again
2019-01-11T12:08:07  <javjarfer[m]> Bosmon: oh, yes, I remember that, happened to me at the end of last month
2019-01-11T12:08:48  <javjarfer[m]> was really painful to solve the situation
2019-01-11T12:48:41  <the-t-in-rtf> @Bosmon or anyone else, I am working through test failures in migrating to couch.  I think I have missed out some key piece of config.  a login returns success, but the activeGpiiKeys are never updated
2019-01-11T12:48:57  <the-t-in-rtf> which means that subsequent logouts fail because the username requested doesn't match "noUser"
2019-01-11T12:50:20  <the-t-in-rtf> I can see that the life cycle manager's model has been updated
2019-01-11T12:51:25  <the-t-in-rtf> I'm currently sitting here in the debugger:
2019-01-11T12:51:25  <the-t-in-rtf> https://github.com/GPII/universal/blob/master/gpii/node_modules/lifecycleManager/src/UserLogonRequest.js#L80
2019-01-11T12:51:54  <the-t-in-rtf> the model is updated with the new user information, but both the member variable and the getter only return the old list with "noUser".
2019-01-11T13:00:30  <the-t-in-rtf> I'm trying to find the bit that listens to the model change or associated event and updates the active gpii keys.
2019-01-11T13:03:10  *** kokoja <kokoja!~kokoja@83-148-84-242.ip.btc-net.bg> has quit IRC (Remote host closed the connection)
2019-01-11T13:03:45  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has joined #fluid-work
2019-01-11T13:06:22  <the-t-in-rtf> aaaa
2019-01-11T13:06:35  <the-t-in-rtf> the data is indexed, but returned out of order.
2019-01-11T13:06:49  <the-t-in-rtf> i.e. "noUser" is returned as the first key.
2019-01-11T13:07:17  <the-t-in-rtf> unless that's just normal after one of the logouts
2019-01-11T13:08:10  <the-t-in-rtf> OK, I just confirmed
2019-01-11T13:10:54  <Bosmon> the-t-in-rtf - that's pretty interesting, what are the consequences of that
2019-01-11T13:11:27  <the-t-in-rtf> the other non-noUser account can't log out
2019-01-11T13:11:34  <the-t-in-rtf> it's meant to fail with an exploding settings handler error
2019-01-11T13:11:45  <the-t-in-rtf> instead it fails with an error about "noUser" already being logged on
2019-01-11T13:11:56  <the-t-in-rtf> I'm working on ErrorTests.js
2019-01-11T13:12:17  <the-t-in-rtf> but this seems to be the pattern that is breaking a lot of tests
2019-01-11T13:13:04  <the-t-in-rtf> OK, so what's the meaning of "session" versus "session-1" in the lifecycleManager's index
2019-01-11T13:13:15  <Bosmon> the-t-in-rtf - they are dynamic components
2019-01-11T13:13:20  <the-t-in-rtf> ah
2019-01-11T13:13:23  <Bosmon> So these are just the keys that are assigned to them
2019-01-11T13:13:34  <Bosmon> Interestingly right at this moment cindyli is at work abolishing this dynamic component
2019-01-11T13:13:40  <the-t-in-rtf> so, should the nouser one have been removed?
2019-01-11T13:13:43  <Bosmon> In theory there should never be more than one of them at a time
2019-01-11T13:13:50  <the-t-in-rtf> yes, I suspect that's the real failure
2019-01-11T13:13:57  <Bosmon> And her work is on enforcing this by turning the component into a static component
2019-01-11T13:14:00  <the-t-in-rtf> great
2019-01-11T13:14:03  <the-t-in-rtf> that will be helpful
2019-01-11T13:14:05  <Bosmon> And hence vastly simplifying the architecture
2019-01-11T13:14:26  <Bosmon> I always fretted about the possibility of race conditions here and it looks like you might have run into one
2019-01-11T13:16:32  <the-t-in-rtf> so, just to make sure it's not some missing bit on my end, what is supposed to remove old entries from the index?
2019-01-11T13:18:11  <Bosmon> the-t-in-rtf - some site like this: https://github.com/GPII/universal/blob/master/gpii/node_modules/lifecycleManager/src/LifecycleManager.js#L1154
2019-01-11T13:18:29  <Bosmon> Or, exceptionally, this: https://github.com/GPII/universal/blob/master/gpii/node_modules/lifecycleManager/src/LifecycleManager.js#L1043
2019-01-11T13:19:14  <the-t-in-rtf> it's not restoring from a snapshot
2019-01-11T13:20:04  <the-t-in-rtf> so, if I'm following you, the destroy isn't happening quickly enough to avoid the second entry showing up when getActiveSessionGpiiKeys is called again?
2019-01-11T13:20:18  <the-t-in-rtf> or may not be happening quickly enough, I mean
2019-01-11T13:20:37  <the-t-in-rtf>  something like that?
2019-01-11T13:22:46  <the-t-in-rtf> hmm, that processStop event is never hit
2019-01-11T13:25:45  *** jhung <jhung!~Adium@CPE54a0505a5e09-CMa84e3f431590.cpe.net.cable.rogers.com> has joined #fluid-work
2019-01-11T13:32:13  *** cindyli <cindyli!~Adium@198.52.177.167> has joined #fluid-work
2019-01-11T13:37:08  <the-t-in-rtf> it's called when the same tests are run in master
2019-01-11T13:44:31  <the-t-in-rtf> I just double-checked that it isn't related to my view fixes, master still passes with those.
2019-01-11T13:44:37  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has quit IRC (Remote host closed the connection)
2019-01-11T13:45:14  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has joined #fluid-work
2019-01-11T13:49:41  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has quit IRC (Ping timeout: 244 seconds)
2019-01-11T13:54:11  <the-t-in-rtf> anyway, @Bosmon or @cindyli, what's the ETA on simplifying the dynamic session components?
2019-01-11T13:57:29  <cindyli> the-t-in-rtf: if you meant this jira - https://issues.gpii.net/browse/GPII-3594, i should be able to send a pull request in a couple of days.
2019-01-11T13:58:01  <the-t-in-rtf> great
2019-01-11T14:00:58  <Justin_o> Bosmon: I've done some modifications to the auxiliary schema so that it can take in an alias. When an alias is provided, the model value will be stored at both the modified type and the alias. so for example if we have {type: "fluid.prefs.localization", alias: "locale", ...} the model will end up having both. {"fluid_prefs_localization": "en-CA", "locale": "en-CA"}.
2019-01-11T14:01:22  <Justin_o> https://github.com/jobara/infusion/commit/7543d17c43fb200cb3082625d96e03768d4b2b0d
2019-01-11T14:03:18  <Justin_o> Bosmon: however I'm finding that this has some problems when passing through a prefs editor that has the alias and one that doesn't. For example if you use the UIO demo, it stores at both locations. If you then open the prefs editor using grades demo things work fine, but taking a change that has only been stored in the one location (in this case it's the same as the aliased model path) to the UIO demo, the preferences
2019-01-11T14:03:18  <Justin_o> model path is lost when the panel opens and everything is reset.
2019-01-11T14:03:37  <Justin_o> i'm not exactly sure why that is happening, maybe a conflict with the implicit model relay?
2019-01-11T14:04:24  <Bosmon> Justin_o - what do you mean by "passing through"?
2019-01-11T14:04:27  <Justin_o> I'm also wondering if storing at both paths is wrong.. maybe when an alias is provided, only that model path should be stored. If that's the case, then alias may be the wrong name.. maybe it should just be name or soething
2019-01-11T14:04:44  <Justin_o> I mean using, i guess.
2019-01-11T14:04:50  <Justin_o> Both the demo and the example use the same cookie
2019-01-11T14:04:58  <Bosmon> Justin_o - I think it is reasonable to store at both paths, just so that the expectations of different people looking at the component are still met
2019-01-11T14:05:00  <Justin_o> so you are saving preferences into the same storage location
2019-01-11T14:05:03  <Bosmon> ah I see
2019-01-11T14:05:11  <Bosmon> That could be a bit awkward
2019-01-11T14:05:37  <Bosmon> Although you'd expect the setup to be robust to missing values in storage
2019-01-11T14:05:57  <Justin_o> i'm not getting any errors or anything, so i'm not actually sure what's happening
2019-01-11T14:06:23  <Bosmon> The model relay system never propagates absent values ordinarily
2019-01-11T14:07:19  <Justin_o> Bosmon: i suppose there are two cases, although they are causing the same issue so it may just be one really.. however 1) change  different preferences 2) change the same preference..
2019-01-11T14:07:39  <Bosmon> Justin_o - I think we need to be careful about how things are persisted in the cookie - it may not be correct to just blindly persist everything that is in the model
2019-01-11T14:07:56  <Bosmon> But we've had such issues before, for example, whether to persist any values which differ from the schema defaults
2019-01-11T14:08:03  <Justin_o> Bosmon: but wouldn't we have to persist all the preferences at least
2019-01-11T14:08:07  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has joined #fluid-work
2019-01-11T14:08:10  <Bosmon> Justin_o - right
2019-01-11T14:08:29  <Justin_o> Bosmon: well we don't persist the defaults still in UIO, but I could see how that could be an issue across systems
2019-01-11T14:09:08  <Justin_o> Bosmon: so yes, this is an issue of persisting all of the preferences
2019-01-11T14:09:42  <Justin_o> Bosmon: i was hoping that this work will fix this issue https://issues.fluidproject.org/browse/FLUID-5928
2019-01-11T14:10:12  <Bosmon> Justin_o - yes, this is certainly a significant problem
2019-01-11T14:10:47  <Bosmon> The "grade version of the preference framework" sounds like a strange thing : P
2019-01-11T14:10:51  <Bosmon> I'm not entirely sure why we have it
2019-01-11T14:11:08  <Bosmon> Do you mean the "starter grades" system?
2019-01-11T14:11:37  <Justin_o> yes, starter grades
2019-01-11T14:11:42  <Justin_o> as opposed to schema
2019-01-11T14:12:01  <Justin_o> should maybe be non-schema version
2019-01-11T14:12:05  <Bosmon> Justin_o - doesn't the starter grades system still have the schema grade references available within it?
2019-01-11T14:12:09  <Bosmon> I'm really forgetting how it worked
2019-01-11T14:12:28  *** kokoja <kokoja!~kokoja@vpngate.shutterfly.com> has quit IRC (Ping timeout: 246 seconds)
2019-01-11T14:12:33  <Justin_o> Bosmon: no, i mean they'd have to be hard coded
2019-01-11T14:13:05  <Justin_o> Bosmon: https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/StarterGrades.js#L23-L40
2019-01-11T14:13:26  <Justin_o> the starter grades don't use the prefs maps at all
2019-01-11T14:13:39  <Bosmon> Justin_o - ok
2019-01-11T14:13:45  <Bosmon> Do we still recall why we retained this...?
2019-01-11T14:13:55  <Bosmon> Other than that it can load a bit faster
2019-01-11T14:14:27  <Justin_o> i don't remember why we initially retained, but the loading time would be the only argument I can think of for keeping it, at the moment.
2019-01-11T14:14:27  <Bosmon> We've got a significant problem in that the contents of the model of a "starter grades" editor are essentially uninterpretable
2019-01-11T14:14:35  <Bosmon> This reflects some pretty old thinking and implementation
2019-01-11T14:14:40  <Justin_o> yep
2019-01-11T14:14:42  <Bosmon> My best sense at the moment is that we should just axe it
2019-01-11T14:14:56  <Bosmon> It's unextensible and uninterpretable
2019-01-11T14:15:13  <Bosmon> And lugging the extra complexity of it around with us is costing us
2019-01-11T14:15:36  <Bosmon> Or is it perhaps the case that we were always halfway through a refactoring of it?
2019-01-11T14:15:41  <Justin_o> we might have already diverged in support for some of our new features.. i'm not really sure how good we have been at keeping it up-to-date
2019-01-11T14:15:55  <Justin_o> not sure about the refactoring bit
2019-01-11T14:16:21  <Bosmon> Justin_o - isn't there a relationship between StarterGrades.js and StarterSchemas.js?
2019-01-11T14:16:58  *** kasparnet <kasparnet!~kasper@ip-5-186-120-225.cgn.fibianet.dk> has joined #fluid-work
2019-01-11T14:17:06  <Justin_o> only in the sense that they include the same base set of preferences, but i don't think one is needed for the other to work
2019-01-11T14:17:15  *** kasparnet <kasparnet!~kasper@ip-5-186-120-225.cgn.fibianet.dk> has quit IRC (Remote host closed the connection)
2019-01-11T14:17:24  <Bosmon> Justin_o - right - it is seeming like it is just a kind of unfortunate coincidence in naming
2019-01-11T14:17:36  <Bosmon> Justin_o - well, it's a shame you are off in a week or so
2019-01-11T14:17:36  <Justin_o> Bosmon: the various builders take care of making most of the connections that we have to manually wire up in the starter grades
2019-01-11T14:17:58  <Bosmon> Since in about a month or so it would have been time to start having a far-reaching review of all of this wrt the new framework and how we really want it to work
2019-01-11T14:18:11  <Justin_o> yes.. i'll be off for a while after next friday morning
2019-01-11T14:18:19  <Justin_o> :(
2019-01-11T14:18:22  <Bosmon> In the 10 years since we designed this we've put lots of things together in ways which retrospectively seem pretty crufty
2019-01-11T14:18:30  <Bosmon> One of the few things we did right was the "primary schema" system
2019-01-11T14:18:47  <Bosmon> And the "auxiliary schema" system is reasonable in outline but hard to use in practice
2019-01-11T14:18:56  <Justin_o> i can't completely argue with that.. every time i go to add something i feel like we need to do some major changes
2019-01-11T14:19:04  <Bosmon> Under the new system, people will just return to authoring ordinary Infusion component trees again
2019-01-11T14:19:13  <Justin_o> I think there is a bit of a problem with the primary schema as well though
2019-01-11T14:19:15  <Bosmon> And the "Builder" system will just be axed completely
2019-01-11T14:19:16  <Justin_o> or maybe in how it is used
2019-01-11T14:19:53  <Justin_o> Bosmon: if the primary schema differs from the defaults you want your system to have, it's problematic. and same for the range of values
2019-01-11T14:19:57  <Bosmon> We only had "Builders" because the Infusion instantiation machinery wasn't smart enough to make all the relevant decisions "just in time" and had to have a huge amount of stuff precomputed
2019-01-11T14:20:06  <Justin_o> so take language for example, what would be a valid primary schema for that
2019-01-11T14:20:13  <Bosmon> Justin_o - yes, defaults are certainly awkward, and we have exactly the same issue in the GPII
2019-01-11T14:20:38  <Bosmon> This doesn't mean that we need to remove "defaults" from the schema, but in practice we need sources of secondary (and even tertiary, etc. ) defaults
2019-01-11T14:20:44  <Bosmon> But then this is just how Infusion has always worked
2019-01-11T14:20:51  <Bosmon> It's why we called our main primitive fluid.defaults : P
2019-01-11T14:21:40  <Justin_o> haha, true
2019-01-11T14:21:49  <Justin_o> yes a way to extend the primary schema would be great
2019-01-11T14:22:04  <Bosmon> So yes, the "new prefs framework" will be far-reachingly different, and also far-reachingly more simple to use than the old one
2019-01-11T14:22:22  <Bosmon> Probably by the end of Feb I'll have enough of the new framework scaffolded that it could be possible to see how it might look
2019-01-11T14:22:56  <Bosmon> But a key goal is to avoid the authoring of oddly-structured new JSON dialects
2019-01-11T14:23:02  <Bosmon> This was a blunder we have made again and again and again
2019-01-11T14:23:12  <Bosmon> Starting with the creation of "original renderer component trees"
2019-01-11T14:23:23  <Bosmon> And then the "IoC Testing Framework sequences" etc.
2019-01-11T14:23:32  <Justin_o> yes please.. i'm pretty sure no one knows what to expect to work in the aux schema with regard to typical component structures
2019-01-11T14:23:37  <Bosmon> And so the "aux schema" and builders are just another of these
2019-01-11T14:23:45  *** clown <clown!clown@nat/ocadu/x-teqbpweenlzvydli> has joined #fluid-work
2019-01-11T14:24:01  <Bosmon> The whole of framework development is towards centralising on standard Infusion component trees as the basic medium of authoring everything
2019-01-11T14:24:22  <Bosmon> And then the-t-in-rtf JSON schema support for those will scaffold the authoring tools that people will use to validate and author these
2019-01-11T14:26:12  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-kzvwbsuonpamxvxb> has joined #fluid-work
2019-01-11T14:30:31  <Justin_o> Bosmon: that sounds really good
2019-01-11T14:31:14  <Justin_o> Bosmon: not entirely sure what to do for my situation now, should we just drop the starter grades instead of trying to fix FLUID-5928?
2019-01-11T14:31:36  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has joined #fluid-work
2019-01-11T14:31:45  <Justin_o> I have to drop offline now.. but i might be back online later today and over the weekend. thanks
2019-01-11T14:56:48  <the-t-in-rtf> @Bosmon and @cindyli, I put in a temporary fix to strip duplicate session data so I can continue my work.
2019-01-11T14:57:46  <the-t-in-rtf> @bosmon it looks like your theory was correct, thanks for the input earlier.
2019-01-11T15:17:44  *** jhung is now known as jhung_away
2019-01-11T15:25:27  <Bosmon> the-t-in-rtf - what did you find?
2019-01-11T15:25:47  <the-t-in-rtf> lots and lots of working tests
2019-01-11T15:25:59  <Bosmon> Justin_o - dropping the starter grades seems like the simplest solution, there's noone in our communities that we're aware of that uses them, right?
2019-01-11T15:26:10  <the-t-in-rtf> but seriously, there was always a noUser session that was left over
2019-01-11T15:26:25  <the-t-in-rtf> I just added a filter with a TODO and link to the ticket Cindy's working on.
2019-01-11T15:26:28  <Bosmon> the-t-in-rtf - what was the race condition?
2019-01-11T15:26:46  <the-t-in-rtf> I assume the logout of noUser failing before the logout of the next user
2019-01-11T15:27:14  <Bosmon> the-t-in-rtf - do you have any insight into why this was triggered in your branch?
2019-01-11T15:29:21  <the-t-in-rtf> dunno at the moment, I was running with your theory
2019-01-11T15:30:03  <the-t-in-rtf> some combination of using couch or the new test environments
2019-01-11T15:31:00  <the-t-in-rtf> I mean, CouchDB in Docker takes longer to spin up, but may be faster than Pouch for subsequent responses, there may have been an intermediate lookup that took long enough with PouchDB to mask the problem.
2019-01-11T15:47:46  *** jhung_away is now known as jhung
2019-01-11T16:05:42  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has joined #fluid-work
2019-01-11T16:10:17  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has quit IRC (Ping timeout: 258 seconds)
2019-01-11T16:45:49  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-kzvwbsuonpamxvxb> has quit IRC (Quit: Leaving.)
2019-01-11T16:59:24  *** jhung is now known as jhung_away
2019-01-11T17:14:44  <cindyli> sgithens: do you have a doc that record the changes you made to the data model for PPT?
2019-01-11T17:15:09  <cindyli> sort of rmb you have a webpage for that
2019-01-11T17:42:59  <sgithens> cindyli
2019-01-11T17:43:01  <sgithens> hey
2019-01-11T17:43:07  <cindyli> hi
2019-01-11T17:43:08  <sgithens> yeah, it's in my pull request I think
2019-01-11T17:43:30  <sgithens> which I should send back over to you.  I think there was maybe one last outstanding unit test for it or something
2019-01-11T17:43:41  <sgithens> but if you actually just want to give it another review that
2019-01-11T17:43:43  <sgithens> d be great
2019-01-11T17:43:49  <sgithens> let me look it up quick
2019-01-11T17:44:58  <cindyli> sgithens: this one? https://github.com/GPII/universal/blob/ca60fb5aedb00afab4794c6dd35de300e4c59e6a/documentation/DataModel.md
2019-01-11T17:45:43  <cindyli> just wanna refresh my memory before the data model meeting
2019-01-11T17:47:06  *** jhung_away is now known as jhung
2019-01-11T17:47:11  <sgithens> cindyli! Yes that's it
2019-01-11T17:47:24  <sgithens> and you can look at the code and test data
2019-01-11T17:47:29  <sgithens> they should all be in there
2019-01-11T17:48:02  <cindyli> sgithens: is the pull request ready for another review? all comments addressed?
2019-01-11T17:48:48  <sgithens> I addressed all the comments yeah.  I'm tryign to see why the build is failing, but in general it's likely a smaller fail somewere after merging things up
2019-01-11T17:49:04  <sgithens> If you have time today to give it another once over that'd be great
2019-01-11T17:49:15  <sgithens> I might be able to finish it before our meeting then
2019-01-11T17:49:37  <cindyli> sure. thanks, sgithens
2019-01-11T17:49:45  <sgithens> cindyli: Thank you!
2019-01-11T17:51:16  <sgithens> Bosmon the-t-in-rtf  You might also want to check out the markdown link cindyli posted above before our meeting to see what I've already done in my branch
2019-01-11T18:13:20  <Bosmon> Hi there bryan_ - sorry not to have checked in before, I've been a bit ill in the week
2019-01-11T18:13:25  <Bosmon> How have you been getting on?
2019-01-11T18:23:19  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-jcsgffrqqgoupmle> has joined #fluid-work
2019-01-11T18:28:45  *** simonjb <simonjb!simonjb@nat/ocadu/x-jpujgvtpokjsgfyl> has joined #fluid-work
2019-01-11T18:40:23  <bryan_> I'm good...wrapping up that PR for 3596
2019-01-11T19:00:59  <bryan_> I rebased on the latest upstream master so I have to fix a few things
2019-01-11T19:04:14  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has quit IRC (Quit: sepidehshahi)
2019-01-11T19:17:14  <sgithens> the-t-in-rtf: I've added a `gpii.handlebars.i18n.messageLoader` to my express app, and I can look at it, and verify it's loaded my json files, but I'm still seeing a `[Message string for key wow-dude not found] ` when it renders.  Looking at the docs I'm not exactly sure what I need to do in order for the component to be picked up by all gpii.handlebars.dispatcherMiddleware instances I have.
2019-01-11T19:17:55  <sgithens> https://github.com/GPII/gpii-handlebars/blob/master/docs/i18n.md#node-usage
2019-01-11T19:32:18  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has joined #fluid-work
2019-01-11T19:45:31  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has joined #fluid-work
2019-01-11T19:49:54  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has quit IRC (Ping timeout: 250 seconds)
2019-01-11T19:57:35  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has joined #fluid-work
2019-01-11T20:01:38  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has quit IRC (Ping timeout: 246 seconds)
2019-01-11T20:32:52  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has left #fluid-work
2019-01-11T20:38:39  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has joined #fluid-work
2019-01-11T20:38:43  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has left #fluid-work
2019-01-11T21:04:20  *** simonjb <simonjb!simonjb@nat/ocadu/x-jpujgvtpokjsgfyl> has quit IRC (Quit: Leaving)
2019-01-11T21:20:19  *** jhung <jhung!~Adium@CPE54a0505a5e09-CMa84e3f431590.cpe.net.cable.rogers.com> has quit IRC (Quit: Leaving.)
2019-01-11T21:40:12  *** cindyli <cindyli!~Adium@198.52.177.167> has quit IRC (Quit: Leaving.)
2019-01-11T21:52:29  *** clown <clown!clown@nat/ocadu/x-teqbpweenlzvydli> has quit IRC (Quit: Leaving.)
2019-01-11T22:07:43  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e55:d000:9dc5:4fb1:2508:34f8> has quit IRC (Remote host closed the connection)
2019-01-11T22:08:54  *** jhernandez <jhernandez!~jhernande@129.53-136-217.adsl-dyn.isp.belgacom.be> has joined #fluid-work
2019-01-11T22:12:04  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-jcsgffrqqgoupmle> has quit IRC (Quit: Leaving.)
2019-01-11T22:32:06  *** jhernandez <jhernandez!~jhernande@129.53-136-217.adsl-dyn.isp.belgacom.be> has quit IRC (Remote host closed the connection)
2019-01-11T23:38:56  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e55:d000:2c9b:52b1:f5d9:8aff> has joined #fluid-work
2019-01-11T23:45:49  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has joined #fluid-work
2019-01-11T23:50:22  *** kokoja <kokoja!~kokoja@87-116-79-195.ip.btc-net.bg> has quit IRC (Ping timeout: 268 seconds)

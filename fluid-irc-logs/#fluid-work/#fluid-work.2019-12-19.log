2019-12-19T00:38:24  *** danayo <danayo!~danayo@d207-81-8-63.bchsia.telus.net> has joined #fluid-work
2019-12-19T01:10:34  *** danayo <danayo!~danayo@d207-81-8-63.bchsia.telus.net> has quit IRC (Quit: danayo)
2019-12-19T01:23:55  *** lliskovoi__ <lliskovoi__!uid367571@gateway/web/irccloud.com/x-fwqixpksmebtfqzo> has quit IRC (Quit: Connection closed for inactivity)
2019-12-19T01:35:34  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2019-12-19T01:45:48  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2019-12-19T02:11:05  *** danayo <danayo!~danayo@d207-81-8-63.bchsia.telus.net> has joined #fluid-work
2019-12-19T04:35:10  *** danayo <danayo!~danayo@d207-81-8-63.bchsia.telus.net> has quit IRC (Quit: danayo)
2019-12-19T05:19:08  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T05:48:33  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Quit: Leaving.)
2019-12-19T06:00:16  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T06:41:48  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Quit: Leaving.)
2019-12-19T08:37:08  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T09:05:34  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2019-12-19T09:38:19  *** jhernandez <jhernandez!~jhernande@2a02:a03f:6189:e000:d600:afb2:8af2:1a83> has joined #fluid-work
2019-12-19T10:02:43  *** jhernandez <jhernandez!~jhernande@2a02:a03f:6189:e000:d600:afb2:8af2:1a83> has quit IRC (Quit: jhernandez)
2019-12-19T10:44:41  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 265 seconds)
2019-12-19T11:11:56  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Quit: Leaving.)
2019-12-19T11:24:11  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2019-12-19T11:31:40  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T11:33:05  *** Teddy_ <Teddy_!uid407930@gateway/web/irccloud.com/x-bekvuejhfghshcdx> has quit IRC (Quit: Connection closed for inactivity)
2019-12-19T12:13:14  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-eldwxijtrypxkhwt> has joined #fluid-work
2019-12-19T12:27:03  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Quit: Leaving.)
2019-12-19T12:57:55  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T13:21:08  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 248 seconds)
2019-12-19T13:29:55  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2019-12-19T13:47:06  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-12-19T13:48:01  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2019-12-19T13:50:46  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 265 seconds)
2019-12-19T13:53:10  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2019-12-19T13:54:23  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Quit: Leaving.)
2019-12-19T13:55:14  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 240 seconds)
2019-12-19T13:55:20  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-12-19T14:00:20  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has joined #fluid-work
2019-12-19T14:02:21  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-12-19T14:06:00  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2019-12-19T14:08:31  *** simonjb <simonjb!~simonjb@198.178.118.18> has joined #fluid-work
2019-12-19T14:15:14  *** jhernandez <jhernandez!~jhernande@109.131.217.102> has joined #fluid-work
2019-12-19T14:20:53  *** avtar <avtar!~avtar@ip-45-3-6-187.user.start.ca> has joined #fluid-work
2019-12-19T14:21:19  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2019-12-19T14:31:44  *** alanharnum <alanharnum!uid363993@gateway/web/irccloud.com/x-zxnbrcinmpxmzsvg> has joined #fluid-work
2019-12-19T14:54:50  *** jhung is now known as jhung_away
2019-12-19T15:05:21  <Justin_o> Bosmon: hello, anymore feedback about the UIO+ task list?
2019-12-19T15:13:49  *** michelled <michelled!~Adium@135-23-104-71.cpe.pppoe.ca> has joined #fluid-work
2019-12-19T15:17:45  *** michelled <michelled!~Adium@135-23-104-71.cpe.pppoe.ca> has quit IRC (Client Quit)
2019-12-19T15:23:39  *** michelled <michelled!~Adium@135-23-104-71.cpe.pppoe.ca> has joined #fluid-work
2019-12-19T15:28:41  *** jhung_away is now known as jhung_mtg
2019-12-19T15:40:01  *** michelled <michelled!~Adium@135-23-104-71.cpe.pppoe.ca> has quit IRC (Quit: Leaving.)
2019-12-19T15:40:49  *** clown <clown!clown@nat/ocadu/x-klsdgskijfujhsfr> has joined #fluid-work
2019-12-19T15:41:09  *** michelled <michelled!~Adium@135-23-104-71.cpe.pppoe.ca> has joined #fluid-work
2019-12-19T15:58:11  <Bosmon> Hi Justin_o - I'll write up that JIRA now
2019-12-19T15:58:28  <Bosmon> I have made an interesting innovation in our promise algorithms - https://github.com/amb26/infusion/commit/2a4b536c50b351fc5a77637b3b88ed7cdedd6286#diff-8485f8db97b02a90ffdb5f2c75a02cf4L120
2019-12-19T15:58:39  <Bosmon> The change to fluid.promise.follow is particularly interesting
2019-12-19T15:59:28  <Justin_o> is the is the first addition of cancellable promises, or did you add that before?
2019-12-19T16:00:24  <Bosmon> Justin_o - we introduced cancellable promises several months ago
2019-12-19T16:00:32  <Bosmon> It's just that I hadn't grasped all of the implications of them
2019-12-19T16:00:49  <Bosmon> I found in fixing that relocalisation bug for you and gmoss that I had introduced a subtle and quite rare race condition
2019-12-19T16:01:05  <Bosmon> It probably was biting about 1 time in 10 or 1 in 20, which is why it slipped through CI until now
2019-12-19T16:01:34  <Bosmon> But the whole purpose of the new test was to check what happens if you attempt to relocalise a component the very moment after it tries to fetch the resources for its old locale
2019-12-19T16:02:26  <Justin_o> Bosmon: It is interesting that the cancel bubbles back up the chain
2019-12-19T16:02:32  <Bosmon> The fix for gmoss [Object object] rending problem involved making sure that the side-effect of updating that.resources happens at just the right moment
2019-12-19T16:02:55  <Bosmon> But the problem is, what if the transform chain for the old locale is still active at the moment that the side-effect happens?
2019-12-19T16:03:23  <Bosmon> I felt sure that cancellable promises were essential at the time, and this issue only confirms it
2019-12-19T16:04:01  <Bosmon> But it's interesting how few of the several still competing promise libraries have implemented cancellation so far
2019-12-19T16:05:34  <Bosmon> You'll remember the sad story of how they got axed from the spec: https://github.com/tc39/proposal-cancelable-promises/issues/70
2019-12-19T16:06:52  <Bosmon> I particularly liked this HN reference: "Monads: there was a very vocal faction on TC-39 that really wanted a Promises to be monadic and very much emphasized mathematical purity over usefulness and any attempt to discuss things tended to get side tracked into a discussion about monads"
2019-12-19T16:08:24  <Bosmon> This one is also interesting: "So cancelable promises reignite all the old debates plus there's no obvious right way to do it, like should it be a 3rd state which could cause compatibility issues and would add complexity, or should cancellations just be a sort of forced rejection, which would be a lot more backwards compatibility but with less features"
2019-12-19T16:09:00  <Bosmon> To me, there very obviously is a more right way to do it, indeed as a 3rd state - and this fact that cancellations propagate through chains in the opposite direction to rejections shows how obviously wrong an implementation as a forced rejection would be
2019-12-19T16:09:02  *** danayo <danayo!~danayo@d207-81-8-63.bchsia.telus.net> has joined #fluid-work
2019-12-19T16:09:56  <Bosmon> But I'm particularly happy about the fact that we didn't do this in advance, ideologically, but simply waited for bugs to emerge and then think about the best way to resolve them
2019-12-19T16:12:46  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2019-12-19T16:13:09  <Justin_o> Bosmon: I remember reading through that thread a bit before. It's quite a sad way to actually drop a feature from the spec
2019-12-19T16:13:53  <Justin_o> Bosmon: I probably haven't read far enough yet, but why do cancellations need to go back up the chain?
2019-12-19T16:14:11  <Justin_o> wouldn't the previous promise already have been resolved/rejected by then
2019-12-19T16:14:36  <Justin_o> previous meaning, source
2019-12-19T16:16:43  *** simonjb <simonjb!~simonjb@198.178.118.18> has quit IRC ()
2019-12-19T16:16:59  *** Teddy_ <Teddy_!uid407930@gateway/web/irccloud.com/x-ahhzyfbfdjxsfpst> has joined #fluid-work
2019-12-19T16:19:41  <Bosmon> Justin_o - well, the notion behind cancellation is that if anything is cancelled, any of the prerequisites of the thing must be cancelled too
2019-12-19T16:20:10  <Bosmon> In this case, we had a chain of several promises, of which the one a few levels back was about to cause a side-effect when it resolved
2019-12-19T16:20:34  <Bosmon> And we needed to make sure that it absolutely didn't, since at that moment we had set off a new chain of I/O whose purpose was to completely replace any of the effects of the previous I/O
2019-12-19T16:21:00  <Bosmon> Now, all we had to work with was the single output promise, and it should be perfectly sufficient to signal our intention to cancel just that one
2019-12-19T16:21:35  <Bosmon> So then there is the actual sequencer promise one level back, which it had been attached to via fluid.promise.follow - so this implies that the cancellation needs to propagate backwards over that
2019-12-19T16:21:52  <Bosmon> And then finally there are the actual elements of the sequence, one of which is about to have the side-effect of writing to that.resources
2019-12-19T16:22:28  <Bosmon> So this implies that cancelling the output promise of a sequence should immediately cancel all outstanding promises in the chain, as well as halting the action of the sequencer in resolving fresh ones
2019-12-19T16:23:14  <Bosmon> The thing is, that the output end of the promise can have no idea about all of this internal structure and whether, indeed, any of the intervening promises have been resolved or rejected
2019-12-19T16:23:47  <Bosmon> But nonetheless it needs to be able to make absolutely sure that any of them that are still in the air, wherever they may be, will land as a no-op when they do
2019-12-19T16:24:33  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T16:24:38  <Bosmon> This is sort of the idiom that the framework already implements internally, with its component destruction model, which immediately "neuters" any invokers and events that may be partway through firing
2019-12-19T16:26:09  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Client Quit)
2019-12-19T16:26:17  <Justin_o> Bosmon: okay, so if a promise has resolved/rejected, the cancellation will have no effect on them.
2019-12-19T16:28:00  <Bosmon> Justin_o - right
2019-12-19T16:28:18  <Justin_o> Bosmon: what about the case where we have a promise that is being used by multiple sibling components.. and one of them is axed but the others aren't. I guess something like the way the port binding had worked for UIO+ that is you may have many dynamically created components that could in theory follow the same promise from the parent
2019-12-19T16:28:47  *** clown is now known as clown_mtg
2019-12-19T16:28:48  <Justin_o> the example above didn't use promises but, just to give an idea of something.
2019-12-19T16:29:34  <Justin_o> Bosmon: I guess what I mean, if you have multiple branches off the same link in a chain, won't cancelling in any o the branches affect all of them
2019-12-19T16:29:40  <Justin_o> or potentially affect all of them
2019-12-19T16:30:02  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T16:30:21  <Justin_o> also how will something following know if a parent link has been cancelled
2019-12-19T16:31:02  <Bosmon> Justin_o - that's a good point, and I think it implies a central weakness in the promise model as such, in that they are inherently "placeless values" with no built-in notion of ownership
2019-12-19T16:31:25  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2019-12-19T16:32:03  <Bosmon> This improvement in the promises algorithm is just a stopgap until we have better support in the core framework for that "thing" that is going to replace invokers and events with something structurally similar to our promise sequence algorithm
2019-12-19T16:32:33  <Bosmon> Once the "things" are attached to components with places in the tree, it becomes much clearer WHAT exactly it is that the user might want to cancel/destroy because they can talk about the place of it
2019-12-19T16:34:17  <Bosmon> It would certainly be awkward if any downstream consumer of I/O could reach arbitrarily far backwards into the chain of things which had led to that I/O and perhaps end up cancelling some of those prerequisites that it had no responsibility for
2019-12-19T16:35:01  <Bosmon> In this case all of the relevant promises are private in the old-fashioned way and "owned" by the ResourceLoader component itself, so there is no risk of unwanted cancellation propagating out into the wider world
2019-12-19T16:35:32  <Bosmon> But the problem you've highlighted is certainly a risk in a design where promises are used as a more widespread public design-structuring device
2019-12-19T16:40:34  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 258 seconds)
2019-12-19T16:40:49  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Quit: Leaving.)
2019-12-19T16:41:34  <Bosmon> Justin_o - new release with these changes for testing: 3.0.0-dev.20191219T155607Z.32876d29c.FLUID-6145
2019-12-19T16:42:10  <Justin_o> Bosmon: should I be using the FLUID-6145 or FLIUD-6148 branch for the FLUID-6420 work
2019-12-19T16:42:40  *** simonjb <simonjb!~simonjb@205.211.168.103> has joined #fluid-work
2019-12-19T16:53:54  *** jhung_mtg is now known as jhung
2019-12-19T16:55:36  *** clown_mtg is now known as clown
2019-12-19T17:15:39  *** clown1 <clown1!clown@nat/ocadu/x-poomviljwgjrcovn> has joined #fluid-work
2019-12-19T17:19:14  *** clown <clown!clown@nat/ocadu/x-klsdgskijfujhsfr> has quit IRC (Ping timeout: 240 seconds)
2019-12-19T17:20:03  *** clown1 <clown1!clown@nat/ocadu/x-poomviljwgjrcovn> has quit IRC (Ping timeout: 258 seconds)
2019-12-19T17:23:18  <Bosmon> Justin_o - FLUID-6145 now has more fixes
2019-12-19T17:23:29  <Bosmon> I think we are pretty definitively going with it
2019-12-19T17:26:31  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2019-12-19T17:28:11  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2019-12-19T17:32:12  *** clown <clown!clown@nat/ocadu/x-slixxbblpdnwdevu> has joined #fluid-work
2019-12-19T17:33:32  <Justin_o> Bosmon: okay thanks, I'll switch over to that after my next commit
2019-12-19T17:43:02  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T17:58:22  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Quit: Leaving.)
2019-12-19T18:01:56  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has joined #fluid-work
2019-12-19T18:06:30  <michelled> Teddy_, greatislander, Justin_o: I've put in a recurring meeting for us in the new year. let's meet on Mondays and Thursdays at 3:30 eastern for a wecount tech checkin
2019-12-19T18:06:43  <greatislander> sounds good, thanks michelled
2019-12-19T18:07:14  <Teddy_> Okay,  sounds good
2019-12-19T18:07:44  <Justin_o> michelled: thanks
2019-12-19T18:11:28  <gmoss> michelled: a few tests failed and the sequence failed to complete, but the cookieStore tests seemed to pass just fine
2019-12-19T18:11:41  <gmoss> *the sequence = the entire battery of all tests
2019-12-19T18:11:46  <michelled> a few of the infusion tests failed?
2019-12-19T18:11:51  <gmoss> yeah
2019-12-19T18:12:13  <michelled> Justin_o: is this something we should expect? gmoss is seeing failures in the infusion tests
2019-12-19T18:12:18  <gmoss> michelled: oops, scratch that, it's moving again. stopped for two whole minutes before contiuing
2019-12-19T18:13:10  <michelled> gmoss, cindyli: I moved our storytelling checkin in the new year to 4:00 eastern and I won't be able to make it on the Wednesdays
2019-12-19T18:13:10  <Justin_o> gmoss: that does seem long though
2019-12-19T18:13:23  <gmoss> michelled: sounds good
2019-12-19T18:13:26  <michelled> which tests failed gmoss?
2019-12-19T18:13:34  <gmoss> Justin_o: it may have been because i kept taking focus away from the browser
2019-12-19T18:13:39  <gmoss> michelled: let me check
2019-12-19T18:14:44  <gmoss> Framework Tests: /tests/framework-tests/core/html/FluidView-test.html: Fluid View Tests: Dead man's blur test - nonExcluded component one: nonExcluded component one - Blur handler has not executed
2019-12-19T18:14:44  <gmoss> Framework Tests: /tests/framework-tests/core/html/Keyboard-a11y-test.html
2019-12-19T18:14:44  <gmoss> and at least two others
2019-12-19T18:15:00  <gmoss> michelled: while I was trying to copy the failed tests, it started running them again and i lost the log
2019-12-19T18:15:15  <Justin_o> gmoss: yah, the infusion tests need focus
2019-12-19T18:15:30  <gmoss> Justin_o: I'll run them again and see what comes up
2019-12-19T18:15:46  <Justin_o> gmoss: thanks, let me know how that goes
2019-12-19T18:15:55  <gmoss> Justin_o: will do. AFK while running those
2019-12-19T18:19:40  <greatislander> Teddy_ I had a thought about the data research you were mentioning earlier, quick chat?
2019-12-19T18:22:29  *** avtar <avtar!~avtar@ip-45-3-6-187.user.start.ca> has quit IRC (Quit: Quit)
2019-12-19T18:22:58  *** avtar <avtar!~avtar@ip-45-3-6-187.user.start.ca> has joined #fluid-work
2019-12-19T18:24:27  *** avtar_ <avtar_!~avtar@ip-45-3-6-187.user.start.ca> has joined #fluid-work
2019-12-19T18:27:52  <Teddy_> Okay,
2019-12-19T18:28:01  <Teddy_> which room zoom room?
2019-12-19T18:28:11  <greatislander> https://zoom.us/j/2703544716
2019-12-19T18:33:30  <gmoss> Justin_o: how long should I expect infusion browser tests to take? It's stuck running the Firefox ones. It hung for 12 minutes running the imageReorderer tests and it's still going (sending this from my phone)
2019-12-19T18:33:45  *** avtar_ <avtar_!~avtar@ip-45-3-6-187.user.start.ca> has quit IRC (Remote host closed the connection)
2019-12-19T18:34:27  <gmoss> *the imageReorderer tests took that long, but others have run since and it's hanging now on the uploaderCompatibility suite
2019-12-19T18:34:52  <gmoss> 20 mins and counting for just Firefox, though
2019-12-19T18:51:25  <gmoss> Justin_o: 30 mins is way too long. I've closed Firefox, but here are the other tests that failed in that browser:
2019-12-19T18:51:25  <gmoss> keyboard-a11y: Leaving container: onLeaveContainer: On leave is called when tabbing out of the selectables container.
2019-12-19T18:51:25  <gmoss> keyboard-a11y: Leaving container: onUnselect: When onLeaveContainer is not specified, onUnselect should be called instead when tabbing out of the selectables container.
2019-12-19T18:51:25  <gmoss> Pager tooltip tests: almost all of them
2019-12-19T18:52:38  <Justin_o> gmoss: sorry missed your earlier message. They shouldn't take that long.
2019-12-19T18:53:22  <Justin_o> they do require focus though. Did the tests, that stalled for a while and came back, pass?
2019-12-19T18:53:24  <Justin_o> gmoss: ^
2019-12-19T18:54:54  <Justin_o> also which branch are you running the tests from?
2019-12-19T18:55:43  <gmoss> Justin_o: I gave them focus the whole time this time, and the one that stalled for 12 mins did pick up eventually. It seemed like Firefox tests had completed but it didn't automatically switch to the next browser. When I closed FF it ran IE it didn't keep rolling on account of a "new features since updating" tab, so I closed IE. Chrome is running now and passing fine so far
2019-12-19T18:56:07  <gmoss> Justin_o: I'm running from Bosmon's FLUID-6145 branch
2019-12-19T18:56:23  *** jhung is now known as jhung_away
2019-12-19T18:56:24  <Justin_o> gmoss: ah okay, and you're running through testem
2019-12-19T18:56:30  <gmoss> Yeah
2019-12-19T18:56:37  <Justin_o> gmoss: can you also try running these with vagrant
2019-12-19T18:56:45  <Justin_o> "npm run test:vagrant"
2019-12-19T18:57:41  <gmoss> Justin_o: I didn't want to fiddle with setting up vagrant and disabling docker and such, since I just wanted to see the cookie results haha.. but I can try
2019-12-19T18:58:01  <gmoss> Justin_o: they should pass through testem as well, though, right? or am I missing some deps
2019-12-19T18:58:09  <Justin_o> I'm trying to run in vagrant myself.. I'll let you know how that works for me
2019-12-19T18:58:40  <Justin_o> gmoss: well the vagrant setup also uses testem.. they should basically be the same except the environment it's run in
2019-12-19T18:59:12  <Justin_o> with vagrant though you can keep doing other things on the host system. The tests take a while, but not nearly as long as you've seen
2019-12-19T18:59:26  <greatislander> michelled: Teddy_ and I were just chatting about the list of AI tools he's making and I think it ought to be on a Fluid Wiki page under WeCount so it can be shared with others while the site is still under development. I don't think there's a WeCount project page there yet, and I expect Teddy_ will need an account on the wiki. I can't remember who sets those up but thought I'd touch base with you about it.
2019-12-19T18:59:58  <Justin_o> greatislander, Teddy_: you can sign up for your own wiki account.
2019-12-19T19:00:11  <greatislander> thanks Justin_o!
2019-12-19T19:00:28  <michelled> cool, so Teddy_ you'll create a wiki landing page for wecount and then put the list in there?
2019-12-19T19:00:28  <gmoss> Justin_o: right, and running in vagrant would give you a relatively consistent testing environment, which I appreciate. I think running it in my non-ideal circumstances is also a valuable test :)
2019-12-19T19:00:45  <gmoss> edge cases and all that (pun not intended)
2019-12-19T19:01:08  <Justin_o> gmoss: yah, i tend to to check things in vagrant but also in a windows vm and on my local machine as needed
2019-12-19T19:01:11  <gmoss> Justin_o: would there be value in seeing my log from the run? either the console log or the logfile?
2019-12-19T19:02:35  <Justin_o> gmoss: hmm.. not sure maybe.. maybe we can screen share in a bit too.. I just want to let the tests finish in vagrant, then I'll run them locally and see if anything hangs for me
2019-12-19T19:03:05  <gmoss> Justin_o: okay that sounds good
2019-12-19T19:03:17  <michelled> Teddy_: there's a 'Projects Template' type when you create a page in the wiki which you can use to create the WeCount landing page
2019-12-19T19:03:23  <gmoss> Justin_o: I'll try to get vagrant up and running here too, not sure I've done that on this install, yet
2019-12-19T19:07:18  <Teddy_> Okay was adding the list to https://wiki.fluidproject.org/display/fluid/Labor+Platform+Horizon+Scan
2019-12-19T19:07:44  <Teddy_> but I'll go ahead a make a separate page for the We Count tools
2019-12-19T19:07:55  <Teddy_> where in the wiki should this page be located?
2019-12-19T19:08:09  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2019-12-19T19:10:05  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2019-12-19T19:11:16  <Teddy_> I'll put the wiki page for We Count here for now "Fluid Dashboard  /Fluid Project /Wiki Platform Cooperative Development Kit /Platform Coops - Research and Notes Labor Platform Horizon Scan /We Count"
2019-12-19T19:11:26  <Teddy_> It can always be moved later
2019-12-19T19:11:47  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-kbuqzvkmtdcibwsw> has joined #fluid-work
2019-12-19T19:13:00  <greatislander> Teddy_ that is for the Platform Co-op project, your list should go in its own place
2019-12-19T19:15:42  <michelled> Teddy_: I made a landing page for you https://wiki.fluidproject.org/display/fluid/WeCount
2019-12-19T19:15:53  <michelled> please fill it in to the best of your ability with the project information
2019-12-19T19:16:00  <michelled> and then add your new page as a child to it
2019-12-19T19:16:26  <Teddy_> Thanks michelled
2019-12-19T19:16:34  <michelled> np!
2019-12-19T19:16:41  <Teddy_> how do you go about deleting pages you made
2019-12-19T19:16:55  <michelled> I think you can just move it - change the parent
2019-12-19T19:16:57  <Teddy_> made one in the wrong location
2019-12-19T19:17:20  <Teddy_> okay there's two now though. Made one in the wrong location
2019-12-19T19:18:15  <michelled> when you're logged in , there should be a '…' after at the end of the line with the 'Edit' link - under there is a delete
2019-12-19T19:19:06  <michelled> let me know if you don't find it - it's possible I have some extra privileges
2019-12-19T19:20:07  <Teddy_> There are move and copy options but no delete
2019-12-19T19:20:28  <Teddy_> here is the page I created and want to get rid of https://wiki.fluidproject.org/display/fluid/Test+Page
2019-12-19T19:22:28  <Bosmon> gmoss - unfortunately the Firefox not closing bug is well-known
2019-12-19T19:22:31  <Bosmon> I think the-t-in-rtf has filed it upstream
2019-12-19T19:22:58  <Bosmon> gmoss - all the test failures you have reported are the ones expected if the browser doesn't have focus
2019-12-19T19:23:31  <gmoss> Bosmon: curious, maybe focus wasn't automatically switched from PowerShell to FF
2019-12-19T19:24:52  <Justin_o> gmoss: I just ran locally and that is what happened to me. When I ran the tests, Firefox opened but focus was still on my terminal
2019-12-19T19:25:06  <Justin_o> I re-ran and explicitly put focus on Firefox and the tests ran
2019-12-19T19:25:16  <Bosmon> Unfortunately it seems there are quite a few interactional bugs wrt testem and Firefox on Windows
2019-12-19T19:25:48  <gmoss> Justin_o Bosmon: I've run them again, clicked focus into FF myself this time
2019-12-19T19:26:52  <Justin_o> Bosmon, gmoss: not sure if you had this problem but testem crashed for me.. the tests may have all completed though
2019-12-19T19:28:13  <gmoss> Justin_o: it's stuck after finishing the uploaderCompatibility test suite, but all FF tests seem to have passed this time
2019-12-19T19:28:43  <gmoss> Justin_o: I'll keep an eye out for testem crashing, I don't believe it did last time, though I did see an error message
2019-12-19T19:30:03  <Justin_o> gmoss: okay, I'm re-running my npm install again, although I did that before.. but will see if that helps with the testem crash.
2019-12-19T19:30:44  <Justin_o> I'm going to be away from my computer for a bit, but I'll run the tests in the meantime and see how it goes
2019-12-19T19:31:04  <gmoss> Justin_o: sounds good :)
2019-12-19T19:32:42  *** clown1 <clown1!clown@nat/ocadu/x-rjwzvvvkmlncetsp> has joined #fluid-work
2019-12-19T19:35:38  <gmoss> Chrome tests passed without issue (so the cookieStore should be fine), but testem did end with an error https://www.irccloud.com/pastebin/kgDXjRNa/
2019-12-19T19:36:25  <gmoss> Justin_o Bosmon ^
2019-12-19T19:36:46  <gmoss> the 1 fail is from IE. curiously, testem didn't try to run Edge
2019-12-19T19:36:50  *** clown <clown!clown@nat/ocadu/x-slixxbblpdnwdevu> has quit IRC (Ping timeout: 265 seconds)
2019-12-19T19:37:06  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:a5d1:b52d:1257:29db> has quit IRC (Quit: Leaving.)
2019-12-19T19:37:30  <gmoss> anyway, I've found the information I was looking for, what a yak shaving session this has been haha
2019-12-19T19:37:33  *** clown <clown!clown@nat/ocadu/x-qywtrjjebyhtkvqr> has joined #fluid-work
2019-12-19T19:40:52  <gmoss> Justin_o: curiously, the ST tests are no longer waiting for the cookieStore event. the tests complete and I'm back to where I was yesterday with the cookie removal-via-expiry not working
2019-12-19T19:40:52  *** clown1 <clown1!clown@nat/ocadu/x-rjwzvvvkmlncetsp> has quit IRC (Ping timeout: 248 seconds)
2019-12-19T19:51:08  *** jhernandez <jhernandez!~jhernande@109.131.217.102> has quit IRC (Quit: jhernandez)
2019-12-19T20:00:29  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-12-19T20:10:39  *** jhung_away <jhung_away!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Quit: Leaving)
2019-12-19T20:15:00  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2019-12-19T20:26:58  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has quit IRC (Excess Flood)
2019-12-19T20:27:19  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has joined #fluid-work
2019-12-19T20:28:39  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has quit IRC (Excess Flood)
2019-12-19T20:28:59  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has joined #fluid-work
2019-12-19T20:34:19  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-12-19T20:44:02  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2019-12-19T20:48:26  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2019-12-19T20:48:57  *** colinclark <colinclark!~colinclar@CPEbc3e0737d1c3-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Client Quit)
2019-12-19T21:17:13  <Justin_o> gmoss: just getting back now.. so you made a full trip back around eh
2019-12-19T21:17:28  <Justin_o> gmoss: regarding testem and edge, I don't think testem has an edge launcher
2019-12-19T21:18:56  <gmoss> Justin_o: that would explain it :)
2019-12-19T21:20:12  <gmoss> Justin_o: I'm noticing the cookie issue is still happening, along with another error message, but it's all intermittent, which would imply a race condition. I think it might be related to how I've defined onUioReady, but until FLUID-6443 is addressed I'm not sure what else I should be doing about that
2019-12-19T21:21:39  <gmoss> Justin_o: either way, I discovered that my cookie deletion code does work, but that the update to my page's model based on the cookie is not happening, and my test is checking the model, hence the failure
2019-12-19T21:22:43  *** clown1 <clown1!clown@nat/ocadu/x-lcxqxfyqcjgrykfz> has joined #fluid-work
2019-12-19T21:22:53  <Justin_o> gmoss: is there somewhere I can see the code?
2019-12-19T21:24:03  <gmoss> Justin_o: yep, i'll send you the link
2019-12-19T21:24:11  <Justin_o> thanks
2019-12-19T21:25:34  <gmoss> Justin_o: this is the relevant branch: https://github.com/BlueSlug/sjrk-story-telling/tree/SJRK-255
2019-12-19T21:25:34  <gmoss> and the errors are happening in this test sequence https://github.com/BlueSlug/sjrk-story-telling/blob/9c340565c0593f6d23de39a0fa575520c33a0abb/tests/ui/js/base-pageTests.js#L174-L219
2019-12-19T21:25:56  *** clown <clown!clown@nat/ocadu/x-qywtrjjebyhtkvqr> has quit IRC (Ping timeout: 248 seconds)
2019-12-19T21:26:24  <gmoss> Justin_o: if you run the node server, this is the URL for that test page: http://localhost:8081/tests/html/base-page-Tests.html
2019-12-19T21:26:49  <gmoss> *node server = kettle server node app :)
2019-12-19T21:27:34  <Justin_o> gmoss: okay, I'll take a look at those
2019-12-19T21:27:36  *** clown <clown!clown@nat/ocadu/x-jaotxpwcenfiuolk> has joined #fluid-work
2019-12-19T21:27:39  <gmoss> Justin_o: thanks!
2019-12-19T21:28:58  *** simonjb <simonjb!~simonjb@205.211.168.103> has quit IRC ()
2019-12-19T21:29:38  <gmoss> Justin_o: this is the event escalation that I added to get the tests to run at all (previously the onUioReady event depended on an different event fired in a function. that function no longer exists because all it did was modify an option which of course is no longer the done thing. https://github.com/BlueSlug/sjrk-story-telling/blob/9c340565c0593f6d23de39a0fa575520c33a0abb/src/ui/UIOMultilingualDemo.js#L28
2019-12-19T21:29:48  *** clown1 <clown1!clown@nat/ocadu/x-lcxqxfyqcjgrykfz> has quit IRC (Ping timeout: 260 seconds)
2019-12-19T21:29:57  <gmoss> so that may be a part of the issue
2019-12-19T21:40:27  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2019-12-19T21:40:49  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-12-19T21:40:50  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 240 seconds)
2019-12-19T21:47:14  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 258 seconds)
2019-12-19T21:51:54  *** michelled <michelled!~Adium@135-23-104-71.cpe.pppoe.ca> has quit IRC (Quit: Leaving.)
2019-12-19T21:53:56  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has quit IRC (Quit: Leaving.)
2019-12-19T21:56:07  <Justin_o> gmoss: I wonder if this is the problem https://github.com/BlueSlug/sjrk-story-telling/blob/SJRK-255/src/ui/base-page.js#L140
2019-12-19T21:56:19  *** clown <clown!clown@nat/ocadu/x-jaotxpwcenfiuolk> has quit IRC (Quit: Leaving.)
2019-12-19T21:56:25  <gmoss> Justin_o: i was just looking into that
2019-12-19T21:56:40  <gmoss> Justin_o: so previously, even if the cookie was empty, it must have given a response that wasn't undef
2019-12-19T21:56:54  <gmoss> but now it is. I'm looking at the PR to see what might have changed: https://github.com/fluid-project/infusion/pull/972
2019-12-19T21:56:54  <Justin_o> gmoss: when the cookie doesn't exist, it returns undefined.
2019-12-19T21:57:11  <gmoss> Justin_o: but that must not have been the case previously, right? otherwise this test never would have worked
2019-12-19T21:57:21  <gmoss> I suppose that's easy enough to confirm...
2019-12-19T21:57:31  <gmoss> brb reverting to an older branch to verify
2019-12-19T21:58:07  <Justin_o> gmoss: looking at Infusion master it looks like it should have always returned undefined https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/Store.js#L96-L118
2019-12-19T21:58:39  <gmoss> Justin_o: odd... maybe another case of something that never should have worked but did, and is now behaving properly
2019-12-19T21:58:52  <Justin_o> haha possibly
2019-12-19T21:59:01  <Justin_o> it's hard to know
2019-12-19T21:59:06  <gmoss> yeah
2019-12-19T22:00:50  *** michelled <michelled!~Adium@135-23-104-71.cpe.pppoe.ca> has joined #fluid-work
2019-12-19T22:02:19  *** michelled <michelled!~Adium@135-23-104-71.cpe.pppoe.ca> has quit IRC (Client Quit)
2019-12-19T22:02:48  <Justin_o> gmoss: by the way for https://github.com/BlueSlug/sjrk-story-telling/blob/SJRK-255/src/ui/base-page.js#L140 if the response is a subset of what's already in the model, it won't remove the extra parts.
2019-12-19T22:03:49  <Justin_o> that is if the model is {a: "a", b: "b"} and the response is {b: "B", c: "C"}, the components model will be {a: "a", b: "B", c: "C"}
2019-12-19T22:06:40  <gmoss> Justin_o:
2019-12-19T22:06:40  <gmoss> https://github.com/BlueSlug/sjrk-story-telling/blame/9c340565c0593f6d23de39a0fa575520c33a0abb/src/ui/base-page.js#L139
2019-12-19T22:06:52  <gmoss> the old code never worried about undefined
2019-12-19T22:07:05  <gmoss> so it was passing undef to the change applier
2019-12-19T22:07:11  <gmoss> thereby clearing out the model
2019-12-19T22:07:35  <gmoss> Bosmon: do you recall if this change was necessary to get things working, somehow?
2019-12-19T22:08:34  <Bosmon> gmoss, yes this was a serious bug : P
2019-12-19T22:09:01  <Bosmon> "undefined" should never be interpreted by the ChangeApplier as any value at all, or representing any change at all
2019-12-19T22:09:17  <gmoss> Bosmon: that seems reasonable
2019-12-19T22:09:18  <Justin_o> gmoss: you may want to do something like this https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/PrefsEditor.js#L417-L423
2019-12-19T22:09:30  <Bosmon> Justin_o - thanks beat me to it :)
2019-12-19T22:10:00  <Justin_o> :)
2019-12-19T22:15:05  <Justin_o> Bosmon: I'm working bit later tonight so I may not be online tomorrow. Sandra would like to have the list of UIO+ tasks this week. Do you think we can sort that out tonight or would you mind to send it to her tomorrow?
2019-12-19T22:18:19  *** danayo <danayo!~danayo@d207-81-8-63.bchsia.telus.net> has quit IRC (Quit: danayo)
2019-12-19T22:20:21  <gmoss> Bosmon: I'll be rejigging the test and/or the dropCookie function to reflect the change you made, though regardless of the semantics it seems the changeApplier will still clear out a model if passed `undefined` (the test passes if i comment out the check)
2019-12-19T22:20:27  <Bosmon> gmoss - it's odd though, the only site where this got influenced is here: https://github.com/fluid-project/infusion/pull/824/files#diff-7b2289f7ae3bef94abff61f13f79f9a3R510
2019-12-19T22:20:37  <Bosmon> Which affects the meaning of an initial model whose value is undefined
2019-12-19T22:21:06  <Bosmon> Whilst the current behaviour you're describing is correct, I can't yet see the change in the branch which is responsible for implementing it
2019-12-19T22:21:10  <Bosmon> I guess I'd better write some more tests
2019-12-19T22:21:18  <gmoss> Bosmon: sorry haha
2019-12-19T22:21:52  <Bosmon> Justin_o - I can write up that JIRA now
2019-12-19T22:21:58  <Justin_o> Bosmon: thanks
2019-12-19T22:22:10  <Justin_o> Bosmon: also if you have any feedback to my other questions/comments too
2019-12-19T22:23:26  <Bosmon> gmoss - actually, the mere fact that this check is necessary suggests that the behaviour hasn't been changed
2019-12-19T22:23:36  <Bosmon> gmoss - ok now I read your comment more carefully I see you're reporting that it hasn't
2019-12-19T22:23:46  <Bosmon> "it seems the changeApplier will still clear out a model if passed `undefined`"
2019-12-19T22:24:23  <Bosmon> Can you tell me again the change you are seeing?
2019-12-19T22:24:59  <Bosmon> What Justin_o said at 17:02 was also true of both the old and the new frameworks
2019-12-19T22:28:41  <gmoss> Bosmon: so the sequence immediately preceding that test is "delete the cookie", "when the cookie is deleted, get the preferences from the cookie" (the cookie is gone), "when the cookie is loaded, make sure the model is empty/undefined". previously, because there wasn't that check for an undefined response from cookieStore.get(), the changeApplier was called and passed in `undefined` to the root model path (""), which
2019-12-19T22:28:41  <gmoss> then made the contents of that path empty (i.e. the whole model). now, with your check added in, the changeApplier is not called when the cookieStore.get() response is empty and therefore is not cleared out. If i comment out that check, the model is cleared and the test passes. This is, of course, at odds with the semantics you described of the changeApplier interpreting "undefined" as "don't change anything"
2019-12-19T22:28:51  <gmoss> I'm not sure I'm answering your question haha
2019-12-19T22:33:59  <gmoss> Bosmon: I'm not sure this test is entirely necessary, as it's only meant to ensure that the cookie was indeed cleared out. it's not terribly important what's in this exact component's model at that point
2019-12-19T22:34:25  <gmoss> Justin_o ^ (thoughts?)
2019-12-19T22:34:26  <Bosmon> I think I had decided that the compatibility risks of changing the meaning of applying undefined at the root were too horrid to get into
2019-12-19T22:34:38  <Bosmon> But you say "with your check added in"
2019-12-19T22:35:21  <Bosmon> Oh I see
2019-12-19T22:35:25  <Bosmon> That is my change in your branch!
2019-12-19T22:35:36  <gmoss> Bosmon: yes, sorry I should have been more clear about that
2019-12-19T22:37:14  <Bosmon> I must have been partway through evaluating whether there should be this change in semantic
2019-12-19T22:37:39  <Bosmon> And should really have motivated that change better
2019-12-19T22:37:58  <Bosmon> Contrary to appearances, I was really trying to keep the number of unnecessary breaking changes in this branch to a minimum : P
2019-12-19T22:39:53  <Bosmon> It's conceivable that I tried to implement the change in semantic and then backed it out because it broke too much other stuff
2019-12-19T22:42:02  <gmoss> Bosmon: quite a reasonable course of action :) I wonder how I should proceed at this point... I could undo the check for undefined (easy!) or I could think more carefully about the meaning of the test and implement a more meaningful reset and check (harder), or I could simply remove the test altogether (easiest)
2019-12-19T22:42:02  <Bosmon> In any case, yes, you should fix up this site where I meddled with your code to include a sequence similar to the one that Justin_o linked to
2019-12-19T22:42:34  <Bosmon> You can't really get away without a dedicated DELETE
2019-12-19T22:43:00  <gmoss> Bosmon: I intend to keep the delete code, it's more about how I'm ensuring it happened
2019-12-19T22:43:14  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-kbuqzvkmtdcibwsw> has quit IRC (Ping timeout: 240 seconds)
2019-12-19T22:43:48  <gmoss> Bosmon: I'll give this some thought :) thanks for your help, and Justin_o same thing. I have to pack up and drive for a couple of hours now. Will address this tomorrow
2019-12-19T23:08:53  <Justin_o> gmoss: good luck
2019-12-19T23:29:20  *** avtar <avtar!~avtar@ip-45-3-6-187.user.start.ca> has quit IRC (Remote host closed the connection)
2019-12-19T23:32:52  *** jhernandez <jhernandez!~jhernande@2a02:a03f:6189:e000:d600:afb2:8af2:1a83> has joined #fluid-work

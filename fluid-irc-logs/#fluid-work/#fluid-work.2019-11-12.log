2019-11-12T00:19:39  *** yzen <yzen!~yzen@2607:f2c0:e352:6b:48dd:60a8:1e4:d555> has joined #fluid-work
2019-11-12T00:42:21  *** yzen <yzen!~yzen@2607:f2c0:e352:6b:48dd:60a8:1e4:d555> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-12T01:00:17  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-smskofkjvvblxwtn> has quit IRC (Quit: Connection closed for inactivity)
2019-11-12T01:01:54  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has joined #fluid-work
2019-11-12T01:03:31  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has quit IRC (Client Quit)
2019-11-12T01:03:51  *** yzen <yzen!~yzen@2607:f2c0:e352:6b:48dd:60a8:1e4:d555> has joined #fluid-work
2019-11-12T01:57:41  *** yzen <yzen!~yzen@2607:f2c0:e352:6b:48dd:60a8:1e4:d555> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-12T04:33:40  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-11-12T05:15:52  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-11-12T05:34:47  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-11-12T05:40:08  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-11-12T06:28:39  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:6d63:32c5:ea3d:5cdf> has joined #fluid-work
2019-11-12T09:48:07  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has joined #fluid-work
2019-11-12T12:39:15  *** javjarfer[m] <javjarfer[m]!javjarferm@gateway/shell/matrix.org/x-tlzndlcqpmenfzly> has quit IRC (Write error: Connection reset by peer)
2019-11-12T12:45:24  *** Bosmon3 <Bosmon3!~Bosmon3@82-71-9-15.dsl.in-addr.zen.co.uk> has joined #fluid-work
2019-11-12T13:31:29  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e72:c800:afce:ea01:d362:3594> has joined #fluid-work
2019-11-12T13:38:30  *** javjarfer[m] <javjarfer[m]!javjarferm@gateway/shell/matrix.org/x-hwneibbqcqdkdxjw> has joined #fluid-work
2019-11-12T13:48:04  *** sepidehshahi <sepidehshahi!~sepidehsh@CPEe0553d68e035-CM64777d56f120.cpe.net.cable.rogers.com> has joined #fluid-work
2019-11-12T13:51:17  *** Bosmon3 <Bosmon3!~Bosmon3@82-71-9-15.dsl.in-addr.zen.co.uk> has quit IRC (Ping timeout: 265 seconds)
2019-11-12T13:52:08  *** danielcho <danielcho!~Adium@hmtnon1497w-lp140-07-70-27-91-37.dsl.bell.ca> has joined #fluid-work
2019-11-12T13:54:07  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-tjailvwhcnqkjtdh> has joined #fluid-work
2019-11-12T13:56:17  <Justin_o> Bosmon: can you expand on your comment about using fluid.queryIoCSelector? The composite panel needs to supply its own selectors for the sub panel containers in addition to having access to the sub panels' selectors for rendering their contents
2019-11-12T13:57:02  <Justin_o> Also it seems that fluid.queryIoCSelector works after the components have been initialized, but we need to operate on them prior to the rendering happening. Right not things render on init
2019-11-12T13:57:30  <Justin_o> although I guess I could override that, and manage the refresh a different way.
2019-11-12T14:07:00  *** jhung <jhung!~jhung@CPE18e829ac96f5-CMa84e3f431590.cpe.net.cable.rogers.com> has joined #fluid-work
2019-11-12T14:21:33  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e72:c800:afce:ea01:d362:3594> has quit IRC (Quit: jhernandez)
2019-11-12T14:28:51  *** alanharnum <alanharnum!uid363993@gateway/web/irccloud.com/x-ylveezlzsjlblahl> has joined #fluid-work
2019-11-12T14:32:29  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-12T14:46:10  *** avtar_ <avtar_!~avtar@ip-24-50-166-135.user.start.ca> has joined #fluid-work
2019-11-12T14:46:49  *** yzen <yzen!~yzen@2620:101:80f2:224:474:e0ba:24d:3198> has joined #fluid-work
2019-11-12T14:51:25  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-12T14:51:47  <Bosmon> Justin_o - well, in the new framework it is possible to query for the subcomponents before they have finished instantiating
2019-11-12T14:52:09  <Bosmon> But as we seemed to be saying yesterday, we might be looking for a stopgap that lets us hack on the remaining mutable things during onCreate
2019-11-12T14:52:17  <Justin_o> Bosmon: oh, so this is something that would have to be done in the fluid-6148 branch?
2019-11-12T14:52:17  *** avtar_ <avtar_!~avtar@ip-24-50-166-135.user.start.ca> has quit IRC ()
2019-11-12T14:52:24  <Justin_o> oh okay
2019-11-12T14:52:41  <Justin_o> Bosmon: I'm thinking of using expanders and options distributions
2019-11-12T14:52:48  <Justin_o> in the composite panel
2019-11-12T14:53:48  <Bosmon> Justin_o - yes, that was occurring to me this morning
2019-11-12T14:54:11  <Bosmon> It might be better to have an approach which works the same in both branches, but who knows
2019-11-12T14:54:27  <Bosmon> I thought we might try to review what on earth the composite panel is doing in any case : P
2019-11-12T14:54:41  <Bosmon> What use does it make of its extra selectors, in addition to just for rendering?
2019-11-12T14:56:55  <Justin_o> Bosmon: it has it's own selectors for the containers of the sub panels
2019-11-12T14:57:01  <Justin_o> kind of like how the prefs editor does I guess
2019-11-12T14:57:46  <Justin_o> and we also need to know how to hide/show the sub panels based on some other preference, which you can see in the example. https://build.fluidproject.org/infusion/examples/framework/preferences/conditionalAdjusters/
2019-11-12T14:58:56  <Bosmon> Justin_o - thanks, this is enormously helpful
2019-11-12T14:59:50  <Justin_o> Bosmon: and this example is the same but with all the preferences in a single panel https://build.fluidproject.org/infusion/examples/framework/preferences/conditionalAdjusters-singlePanel/
2019-11-12T15:00:08  <Bosmon> Justin_o - thankfully, in the upcoming framework, this is just a boolean lensed component : P
2019-11-12T15:00:10  <Bosmon> https://github.com/amb26/infusion/blob/FLUID-6148/tests/framework-tests/core/js/FluidIoCTests.js#L4010
2019-11-12T15:00:32  *** avtar_ <avtar_!~avtar@ip-24-50-166-135.user.start.ca> has joined #fluid-work
2019-11-12T15:03:06  <Bosmon> Justin_o, you know, the aux schemas for these examples aren't bad
2019-11-12T15:03:21  <Bosmon> Thankfully the horrific complexity is where it should preferably be, on our side of the fence
2019-11-12T15:03:29  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-12T15:04:57  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 240 seconds)
2019-11-12T15:06:48  <Bosmon> Justin_o - but I'm still keen to track down what use is made of the "surfaced" rendering selectors, other than in rendering ....
2019-11-12T15:09:16  <Justin_o> Bosmon: I'm not 100% sure what you mean.. but I'll try to answer.. the panels are all renderer components so pretty much everything is done through the renderer... the contrast panel and things like it do access some parts through the Dom binder directly to perform additional tasks afterwards...
2019-11-12T15:09:45  <Bosmon> Justin_o - but does the top-level composite panel need to reach down into the subpanels to do anything after rendering?
2019-11-12T15:12:00  <Justin_o> Bosmon: ah.. I don't think so, there are model relays setup from the sub panel I think
2019-11-12T15:12:02  <Justin_o> but that's probably it
2019-11-12T15:12:10  <Bosmon> OK
2019-11-12T15:12:13  <Justin_o> oh and the afterRender event is shared so that they both trigger together
2019-11-12T15:12:35  <Bosmon> So  it is possible that we can get away with only hacking the selectors in initRendererComponent rather than also the DOM binders at top level?
2019-11-12T15:13:41  <Justin_o> Bosmon: here's the sub panel grade https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/Panels.js#L92-L127
2019-11-12T15:14:38  <Bosmon> Wow, this stuff is so nutty
2019-11-12T15:14:39  * Justin_o Bosmon: here are some other bindings to the sub panels lifecycle events https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/Panels.js#L396-L447
2019-11-12T15:14:39  <Bosmon> Look at line 139
2019-11-12T15:16:01  <Justin_o> Bosmon: yah, that must be a specific work around for the separatedPanel which fires the onSignificantDOMChange event to adjust the height of the panel. This is required because the panel needs to expand down when the additional preferences are shown.
2019-11-12T15:16:21  <Bosmon> Justin_o - yes, but I suspect this could be done a little more neatly
2019-11-12T15:16:30  <Justin_o> not sure if it needs to be setup like this though.. could possibily have just shared the event
2019-11-12T15:16:36  <Bosmon> Also it has a boolean called "hasListener" which actually checks for an event
2019-11-12T15:16:37  <Justin_o> yes, exactly
2019-11-12T15:16:55  <Justin_o> that's a good point
2019-11-12T15:16:57  <Justin_o> pretty confusing
2019-11-12T15:17:36  <Justin_o> Bosmon: is there a way to distribute up, that is from a subcomponent back to the parent
2019-11-12T15:17:50  <Bosmon> Justin_o - that has worked for a long time
2019-11-12T15:18:14  <Justin_o> what's the mechanism for that?
2019-11-12T15:18:44  <Justin_o> and what is the timing of the distribution? i.e. before or after the subcomponent has instantiated
2019-11-12T15:20:35  <Bosmon> Justin_o - https://github.com/fluid-project/infusion/blob/master/src/components/reorderer/js/ModuleLayout.js#L206
2019-11-12T15:20:43  <Bosmon> Justin_o - obviously before, nothing can happen after the component has instantiated!
2019-11-12T15:21:17  *** simonjb <simonjb!~simonjb@198.178.118.18> has joined #fluid-work
2019-11-12T15:23:46  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e72:c800:afce:ea01:d362:3594> has joined #fluid-work
2019-11-12T15:24:31  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-yxwyfgrbufdpvctf> has joined #fluid-work
2019-11-12T15:25:14  <Justin_o> Bosmon: so in theory I should be able to distribute it's selectors up to the parent?
2019-11-12T15:25:53  <Justin_o> but I'll also have to do all the rebasing somehow, so will still need an expander somewhere
2019-11-12T15:26:07  <Justin_o> Bosmon: how were you thinking that the hacking of initRenderer component would work?
2019-11-12T15:34:35  <Bosmon> Justin_o - ok, well I see that this is actually a bit awkward
2019-11-12T15:34:48  <Bosmon> Since its binding onto selectors here uses Ye Oldde Clossure Scoppe: https://github.com/fluid-project/infusion/blob/master/src/framework/renderer/js/RendererUtilities.js#L86
2019-11-12T15:36:13  <Bosmon> It looks like though we could hijack the generation of "cutpoints" but this still implies somehow getting there in time with an expander or so
2019-11-12T15:38:28  <Justin_o> Bosmon: we also seem to be hijacking the cutpoint generation already https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/Panels.js#L537-L543
2019-11-12T15:38:52  <Bosmon> Justin_o - horrific
2019-11-12T15:39:05  <Bosmon> Justin_o - Ok, so I am thinking that our most promising route for this is indeed "options distribution to parent"
2019-11-12T15:39:18  <Bosmon> We know that this works more or less well on both old and new frameworks
2019-11-12T15:42:18  <Bosmon> Justin_o - I already had to hack this introspection in my branch anyway: https://github.com/amb26/infusion/blob/FLUID-6148/src/framework/preferences/js/Panels.js#L524
2019-11-12T15:42:20  <Bosmon> And it simply isn't reliable
2019-11-12T15:42:33  <Bosmon> Components may get instantiated that don't reflect the contents of options.components
2019-11-12T15:44:57  <Justin_o> Bosmon: because the options merging, expansion and etc hasn't completed at this point
2019-11-12T15:45:24  <Bosmon> Justin_o - no, because there may be any number of other options distributions which contribute fresh components or other modifications there
2019-11-12T15:45:53  <Bosmon> options.components just reflects the directives of parent grades and parent subcomponents
2019-11-12T15:46:34  <Justin_o> Bosmon: I think we tried to get around this with the prefetch that happens below, and that this was probably originally written prior to options distributions or early on at least
2019-11-12T15:46:53  <Bosmon> Justin_o - yes, this is such an endless patchwork
2019-11-12T15:46:59  <Bosmon> I can't wait for us to start destroying it : P
2019-11-12T15:47:13  <Justin_o> Bosmon: hahah me too... it's way to hard to work with as things stand
2019-11-12T15:47:20  <Bosmon> But in the meantime let's add a further patch on top of the mix out of some slightly more modern materials : P
2019-11-12T15:47:39  <Justin_o> :)
2019-11-12T15:48:07  <Justin_o> I think with the upward distributions we can get rid of some of these parts anyways.. so hopefully the more modern materials will at least supplant some of the ancient ones
2019-11-12T15:48:13  <Bosmon> Justin_o - yes
2019-11-12T15:48:27  <Bosmon> The upward distribution will be more reliable as well as less race-prone
2019-11-12T15:48:47  <Bosmon> This was sort of one of the core reasons behind wanting to make options immutable in the first place
2019-11-12T15:48:54  <Bosmon> To try to discourage people from these kinds of tinkery races
2019-11-12T15:49:10  <Bosmon> I'm glad the intention of the implementors of the framework has guided us to this better solution : P
2019-11-12T15:49:48  <Justin_o> :)
2019-11-12T15:50:45  <Bosmon> Upwards and all kinds of other directional options distributions are never going away, they will only get more powerful
2019-11-12T15:52:14  <Bosmon> Once we have smashed the old renderer completely, it will be possible to implement the QUEEN OF SHEBA ADAPTATION SYSTEM explained in section 4.4.4 of this old paper: http://www.klokmose.net/clemens/wp-content/uploads/2016/10/ppig-2016.pdf
2019-11-12T15:52:25  <Bosmon> Something that Philip who will be joining you in January is keen on
2019-11-12T15:52:33  <Justin_o> sounds good.. is it possible to make it easier to trace and follow what all these distributions are doing and where they are going?
2019-11-12T15:52:52  <Bosmon> Justin_o - well indeed, "any time soon" we will have brilliant authoring tools
2019-11-12T15:53:03  <Bosmon> But I think this will rely on the framework rewrite after the next one
2019-11-12T15:53:26  <Justin_o> the one after FLUID-6148? or two after that one?
2019-11-12T15:53:28  <Bosmon> After we have the new renderer, I need to rewrite the options merging system in order to make it easier to track the provenance of where options have come from
2019-11-12T15:54:12  <Bosmon> There are certainly things we could do in the short term to make the data structures a bit more easy to read
2019-11-12T15:58:44  <Justin_o> Bosmon: so the Queen of Sheba Adapation in reference to the renderer is so that when we re-render the content we actually destroy the renderer component and recreate it with new bindings and model state?
2019-11-12T15:58:55  <Justin_o> but that the rest of the system would behave as though it had never changed?
2019-11-12T15:59:16  <Justin_o> sorry, that it had changed, but that it had never been destroyed and recreated
2019-11-12T16:02:31  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has joined #fluid-work
2019-11-12T16:02:48  <Bosmon> Justin_o - right, it is how we would get the system to enact more extreme modifications that would require us to revisit decisions we had already made
2019-11-12T16:03:13  <Bosmon> Along with the plan to make options immutable, we need a story about what happens if someone really really wants to change one : P
2019-11-12T16:05:07  <Justin_o> ah right okay, that makes sense
2019-11-12T16:05:15  <Bosmon> And the only way out is to tear down the entire component tree, stash all the model state somewhere temporarily, and then reconstruct it all in place reflecting the new "modification"
2019-11-12T16:05:29  <Bosmon> Well, when I say "entire" I just mean the part that is affected : P
2019-11-12T16:06:03  <Justin_o> okay, I was just going to ask that
2019-11-12T16:06:25  <Justin_o> but it would include it's subcomponents or just itself
2019-11-12T16:06:31  <Bosmon> All the subcomponents
2019-11-12T16:06:38  <Bosmon> You can't destroy a component without destroying its subcomponents
2019-11-12T16:06:59  <Justin_o> okay, so it would be more costly the higher up the tree we did this type of action
2019-11-12T16:07:10  <Justin_o> would that imply that we want to have relatively flat component trees?
2019-11-12T16:07:20  <Bosmon> Well, people will have the trees they have : P
2019-11-12T16:07:36  <Bosmon> Once we have the "Infusion Compiler" we will worry about this kind of thing a lot less
2019-11-12T16:08:15  <Justin_o> what is the "Infusion Compiler"? Have we talked about that before?
2019-11-12T16:08:48  <Bosmon> https://issues.fluidproject.org/browse/FLUID-6143
2019-11-12T16:10:21  <Bosmon> Perhaps one of the first times it was talked about in a particularly directed way was during simonjb's interview.... which must be something like nearly 6 years ago now? : P
2019-11-12T16:11:09  <simonjb> :)
2019-11-12T16:12:11  <Bosmon> Btw I notice something odd seems to have happened with our JIRA.... all the blocks that it started to insist to be represented with the "{code}" tag are now just rendering these tags literally again
2019-11-12T16:12:37  <Bosmon> I remember some years back it screwed up all the formatting of any code snippets in issues and I used to go around putting the "{code}" tags in
2019-11-12T16:12:44  <Bosmon> But now it seems to want them all taken out again
2019-11-12T16:15:35  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-11-12T16:15:55  <Justin_o> Bosmon: it seems that all the rich text editing is missing from JIRA
2019-11-12T16:16:05  <Bosmon> Justin_o - yes, that is what I seemed to see
2019-11-12T16:16:43  <Justin_o> alanharnum: did we update or modify JIRA recently? or maybe one our plugins has an expired license?
2019-11-12T16:17:57  <Justin_o> ah I wonder if it has occurred from some JIRA testing that was happening last week
2019-11-12T16:18:20  <alanharnum> Justin_o: we haven't updated it recently - I don't know anything about JIRA testing last week, can you clarify?
2019-11-12T16:19:04  <Justin_o> alanharnum: Michelle was testing out some JIRA features in a test project. We'd have to check with her if anything might have changed as part of the testing.
2019-11-12T16:19:05  <Bosmon> It looks like it wasn't updated since July
2019-11-12T16:19:15  <Bosmon> And I'm sure that {code} was working at that point
2019-11-12T16:19:37  <Bosmon> I get a message that michelle has updated " 'Field Configuration' " on Nov 7th
2019-11-12T16:20:36  <Bosmon> Is it possible that she changed the type of the main issue description to plain text somehow?
2019-11-12T16:21:00  <Justin_o> ah possibly or maybe the re-indexing just needs to be run
2019-11-12T16:21:04  <Justin_o> but I'm not sure what the effect of that is
2019-11-12T16:21:53  <Bosmon> Looks like the Rich Text Editor itself is still on
2019-11-12T16:21:57  <alanharnum> Justin_o Bosmon: if it's not urgent it's better to ask michelled when she's back tomorrow about what she did
2019-11-12T16:22:22  <Justin_o> I think it's probably better wait if that's okay with you two
2019-11-12T16:22:37  <Bosmon> Sure
2019-11-12T16:25:20  *** clown <clown!clown@nat/ocadu/x-ddsfzegssqkznbqk> has joined #fluid-work
2019-11-12T16:27:13  <Bosmon> I'm sorry, I couldn't really resist, the issue seemed easy enough to fix so I have fixed it.... the "Renderer" for the "Description" field was for some reason set to "Default Text"
2019-11-12T16:27:44  <Justin_o> Bosmon: thanks for fixing it, did the issues all just fix themselves?
2019-11-12T16:27:48  <Bosmon> Yes
2019-11-12T16:28:29  <Justin_o> perfect
2019-11-12T16:52:34  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e72:c800:afce:ea01:d362:3594> has quit IRC (Quit: jhernandez)
2019-11-12T17:20:34  *** avtar_ <avtar_!~avtar@ip-24-50-166-135.user.start.ca> has quit IRC (Ping timeout: 265 seconds)
2019-11-12T17:27:04  *** jhernandez <jhernandez!~jhernande@63.2-67-87.adsl-dyn.isp.belgacom.be> has joined #fluid-work
2019-11-12T17:33:51  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has quit IRC (Quit: colinclark)
2019-11-12T17:46:57  *** jhernandez <jhernandez!~jhernande@63.2-67-87.adsl-dyn.isp.belgacom.be> has quit IRC (Quit: jhernandez)
2019-11-12T18:27:13  *** avtar <avtar!avtar@nat/ocadu/x-ifndpefegnzsrsjy> has joined #fluid-work
2019-11-12T18:36:18  *** avtar <avtar!avtar@nat/ocadu/x-ifndpefegnzsrsjy> has quit IRC ()
2019-11-12T18:36:39  *** avtar <avtar!avtar@nat/ocadu/x-ksrcnsgrpzhxkatm> has joined #fluid-work
2019-11-12T18:51:53  <jhung> fluid-everyone: the design crit will start in 10 minutes. We will be meeting here https://ocadu.zoom.us/j/727986784
2019-11-12T19:07:23  *** yzen <yzen!~yzen@2620:101:80f2:224:474:e0ba:24d:3198> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-12T19:12:09  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-yxwyfgrbufdpvctf> has quit IRC (Quit: Leaving.)
2019-11-12T19:41:12  *** simonjb <simonjb!~simonjb@198.178.118.18> has quit IRC ()
2019-11-12T19:43:56  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-vbcxakqofscwmmco> has joined #fluid-work
2019-11-12T19:44:06  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-vbcxakqofscwmmco> has quit IRC (Client Quit)
2019-11-12T19:47:23  *** Bosmon3 <Bosmon3!~Bosmon3@82-71-9-15.dsl.in-addr.zen.co.uk> has joined #fluid-work
2019-11-12T19:51:38  *** Bosmon3 <Bosmon3!~Bosmon3@82-71-9-15.dsl.in-addr.zen.co.uk> has quit IRC (Ping timeout: 240 seconds)
2019-11-12T19:53:14  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-pfazwcotdhsyhcln> has joined #fluid-work
2019-11-12T20:06:25  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-pfazwcotdhsyhcln> has left #fluid-work
2019-11-12T20:06:36  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-kbwwetjuhgsznpkz> has joined #fluid-work
2019-11-12T20:18:47  *** clown <clown!clown@nat/ocadu/x-ddsfzegssqkznbqk> has quit IRC (Ping timeout: 276 seconds)
2019-11-12T20:35:53  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-12T20:36:47  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-12T20:49:24  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-12T20:50:57  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-12T21:04:27  *** clown <clown!clown@nat/ocadu/x-olxfosrdntlhbsvk> has joined #fluid-work
2019-11-12T21:25:33  <Justin_o> Bosmon: hello, are you available. I'm having some issues with the upward distribution
2019-11-12T21:25:43  <Justin_o> the issue being that it doesn't seem to be working
2019-11-12T21:25:49  <Justin_o> so I must be doing something wrong
2019-11-12T21:26:59  <Bosmon> Justin_o - perhaps for some reason it is not winning the race to get evaluated first
2019-11-12T21:27:06  <Bosmon> Are you running with the old framework or the new?
2019-11-12T21:27:24  <Justin_o> Bosmon: old framework
2019-11-12T21:27:53  <Bosmon> Justin_o - it is possible you can't win in the old framework since in those days the DOM binder got evaluated by a special workflow in the crazy "init function" initViewComponent
2019-11-12T21:28:05  <Bosmon> Have a go with the new framework and see if it is better
2019-11-12T21:28:07  <Justin_o> I basically just took what was there and tried to distribute something up from the subPanels grade as a test.. I didn't move out any of the current pieces. could something there be interfering?
2019-11-12T21:28:40  <Justin_o> Bosmon: okay, I'll try using the fluid-6148 branch and see how that fairs
2019-11-12T21:29:04  <Bosmon> The new framework is much more orderly about eagerly evaluating all options distributions everywhere before it looks at any thing else
2019-11-12T21:29:38  <Justin_o> Bosmon: how wins in terms of merging ?
2019-11-12T21:30:20  <Bosmon> The merge priority is always the same in both frameworks
2019-11-12T21:30:27  <Bosmon> The issue is which part of the component options get evaluated first
2019-11-12T21:30:37  <Bosmon> The new framework has a pretty clear progression from one kind of options to another
2019-11-12T21:30:50  <Bosmon> Whereas the old framework got led around by the nose usually in a pretty random data-driven fashion
2019-11-12T21:31:14  <Bosmon> This is why we had horrors such as a component's model sometimes arriving before onCreate and sometimes afterwards ....
2019-11-12T21:31:52  <Justin_o> ah, because it depended on which IoC expression was encountered
2019-11-12T21:32:01  <Bosmon> But in the new framework, options distributions take priority over practically everything except for "type" and "gradeNames"
2019-11-12T21:32:08  <Bosmon> Without which you really can't evaluate anything much : P
2019-11-12T21:33:16  <Justin_o> Bosmon: okay, I'm still having the same problem
2019-11-12T21:33:20  <Justin_o> actually let me drop the cache
2019-11-12T21:33:42  <Bosmon> If it doesn't work with the new framework, please check in a failing configuration into a pull under FLUID-6426 with instructions to reproduce and I will take a look in the morning
2019-11-12T21:33:47  <Bosmon> I think I need to get an early night tonight
2019-11-12T21:35:25  <Justin_o> Bosmon: okay.. I'll try with something simpler.. I wonder if something in the current rebasing is trashing it
2019-11-12T21:35:36  <Justin_o> if not I'll check in a PR
2019-11-12T21:45:02  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-12T21:47:33  *** jhung <jhung!~jhung@CPE18e829ac96f5-CMa84e3f431590.cpe.net.cable.rogers.com> has quit IRC (Quit: Leaving)
2019-11-12T22:08:03  *** clown <clown!clown@nat/ocadu/x-olxfosrdntlhbsvk> has quit IRC (Quit: Leaving.)
2019-11-12T22:16:24  *** danielcho <danielcho!~Adium@hmtnon1497w-lp140-07-70-27-91-37.dsl.bell.ca> has quit IRC (Quit: Leaving.)
2019-11-12T22:45:42  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:6d63:32c5:ea3d:5cdf> has quit IRC (Quit: Leaving.)
2019-11-12T23:27:05  *** avtar <avtar!avtar@nat/ocadu/x-ksrcnsgrpzhxkatm> has quit IRC (Quit: Quit)
2019-11-12T23:33:49  *** cherylhjli1 <cherylhjli1!~Adium@205.211.168.105> has joined #fluid-work
2019-11-12T23:33:52  *** cherylhjli1 <cherylhjli1!~Adium@205.211.168.105> has quit IRC (Client Quit)
2019-11-12T23:37:34  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-kbwwetjuhgsznpkz> has quit IRC (Ping timeout: 265 seconds)
2019-11-12T23:46:41  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)

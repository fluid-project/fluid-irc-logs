2020-06-19T03:13:56  <sachin10101998> Github introduced Super linter
2020-06-19T03:14:06  <sachin10101998> to lint all types of files using github actions
2020-06-19T03:14:59  <sachin10101998> https://github.blog/2020-06-18-introducing-github-super-linter-one-linter-to-rule-them-all/
2020-06-19T03:15:27  <sachin10101998> Justin_o ^. isn't this what you were talking about several days back ?
2020-06-19T03:17:23  *** sachin10101998 is now known as dogeman
2020-06-19T14:08:55  *** christopher is now known as Guest26712
2020-06-19T15:54:32  <colinclark> Hey danielcho, I’m sure simonjb will have a better sense of when the timing is right for bigger refactoring…
2020-06-19T15:55:00  <colinclark> but I’m pretty sure you’ll want to introduce the Web Audio API rather than spending too much time working around Safari issues with the Audio element
2020-06-19T15:55:15  <colinclark> not yet, I’m sure
2020-06-19T15:55:17  <colinclark> but eventually
2020-06-19T15:55:29  *** sachin10101998 is now known as dogeman
2020-06-19T15:56:11  <danielcho> yeah, that sounds reasonable
2020-06-19T15:58:54  <dogeman> gmoss did you look at this ? https://github.blog/2020-06-18-introducing-github-super-linter-one-linter-to-rule-them-all/
2020-06-19T15:59:20  <simonjb> colinclark, danielcho: agreed, I think for now, we have something that works ok on iPad and longer term the next thing to do to improve the code would be to look at the Web Audio API (but not right now)
2020-06-19T15:59:29  <colinclark> yup, exactly
2020-06-19T16:00:31  <danielcho> yeah, I agree — just had a different implementation idea I wanted to try :)
2020-06-19T16:01:37  <simonjb> there are a number of issues with the current implementation that a Web Audio API solution would hopefully enable us to address: 1) responsiveness and playback control 2) control over sound data storage and in particular working offline
2020-06-19T16:02:07  <simonjb> I'm including things such as sound mixing in (1)
2020-06-19T16:05:06  <colinclark> right
2020-06-19T16:05:41  <dogeman> fluid everyone check this out https://github.blog/2020-06-18-introducing-github-super-linter-one-linter-to-rule-them-all/
2020-06-19T16:05:48  <simonjb> to address them both, we'll need more control than the Audio API provides
2020-06-19T16:05:54  <gmoss> dogeman: I did see that! it's pretty cool
2020-06-19T16:06:00  <simonjb> meaning the Audio Element API
2020-06-19T16:06:03  <colinclark> yes
2020-06-19T16:06:06  <dogeman> We can get rid of linting using grunt by shifting the linting to github actions.
2020-06-19T16:06:10  <dogeman> yeah gmoss
2020-06-19T16:06:12  <colinclark> MediaElement API, I guess
2020-06-19T16:06:16  <simonjb> yes
2020-06-19T16:06:19  <dogeman> We can incorporate it in loe and fluid as well
2020-06-19T16:06:23  <danielcho> I see
2020-06-19T16:06:25  <gmoss> dogeman: yep! i was about to suggest it
2020-06-19T16:06:26  <gmoss> :)
2020-06-19T16:06:47  <dogeman> Hmm will add it it in the boilerplate site too
2020-06-19T16:06:50  <colinclark> dogeman, gmoss: I hadn’t had much time to read more in detail about this, but don’t you still want to be able to lint your code locally?
2020-06-19T16:07:03  <colinclark> how does that work in regards to a GA-based solution?
2020-06-19T16:07:21  <gmoss> colinclark: there are some instructions for running it locally, which I haven't looked into in depth, but gtirloni shared in #fluid-tech yesterday, I'll find the link..
2020-06-19T16:07:28  <gmoss> https://github.com/github/super-linter/blob/master/docs/run-linter-locally.md
2020-06-19T16:07:29  <stegru> linters are a crutch for people who've been developing software for only a decade
2020-06-19T16:07:39  <simonjb> :P
2020-06-19T16:07:42  <colinclark> yikes
2020-06-19T16:07:49  <dogeman> it prevents broken code from beinh uploaded to master branches
2020-06-19T16:07:50  <colinclark> It requires a Docker container
2020-06-19T16:08:01  <gmoss> colinclark: yeah that part seems like a bit of a complication
2020-06-19T16:08:05  <colinclark> just for linting :(
2020-06-19T16:08:25  <colinclark> stegru: lol
2020-06-19T16:08:39  <simonjb> I would think you'd want to have your linter running locally and then the exact same thing is also run in CI
2020-06-19T16:08:53  <colinclark> yes
2020-06-19T16:09:38  <colinclark> this strikes me as a much nore compelling tool for a project that is highly multi-lingual
2020-06-19T16:12:33  <gmoss> colinclark: at first I thought you meant i18n, and I was confused, but then I realized you probably mean programming languages :) in which case yes, its broad support would be very compelling
2020-06-19T16:17:28  <colinclark> yep, exactly gmoss
2020-06-19T16:18:02  <colinclark> If you’ve got a codebase that is a blend of, say, JavaScript and Ruby and C++ (like GitHub probably does), then a “super linter” is very compelling
2020-06-19T16:18:32  <colinclark> In our case, the-t-in-rtf has built quite a good “super linter” that covers JavaScript, Markdown, doc comments, etc. all in one
2020-06-19T16:18:40  <gmoss> indeed
2020-06-19T16:18:52  <colinclark> Grunt is certainly no miracle
2020-06-19T16:19:01  <colinclark> but it’s also pretty reliable and simple
2020-06-19T16:19:06  <gmoss> life has been good in the Storytelling Tool since switching to lintAll, I will say
2020-06-19T16:19:15  <gmoss> along with my pre-commit linter hook
2020-06-19T16:19:22  <colinclark> yeah, that’s my recent experience too
2020-06-19T16:20:01  <gmoss> * credit to alanharnum for writing said linter hook :)
2020-06-19T16:22:02  <simonjb> this is going to sound like it's coming from the old coder that I am, but relying on a service 'in the cloud' that you don't also run locally makes me uneasy
2020-06-19T16:27:51  <colinclark> simonjb: +1
2020-06-19T17:15:23  <gtirloni> +1

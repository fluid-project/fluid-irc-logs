2019-11-20T00:07:58  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-11-20T00:08:09  *** cherylhjli <cherylhjli!~Adium@142.118.118.222> has quit IRC (Quit: Leaving.)
2019-11-20T00:09:14  *** michelled <michelled!~Adium@135-23-85-27.cpe.pppoe.ca> has joined #fluid-work
2019-11-20T00:12:10  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has left #fluid-work
2019-11-20T00:40:15  *** christopher <christopher!~textual@24.171.222.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-20T00:53:23  *** christopher <christopher!~textual@24.171.222.55> has joined #fluid-work
2019-11-20T00:58:02  *** michelled <michelled!~Adium@135-23-85-27.cpe.pppoe.ca> has quit IRC (Quit: Leaving.)
2019-11-20T03:55:42  *** christopher <christopher!~textual@24.171.222.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-20T03:56:36  *** christopher <christopher!~textual@24.171.222.55> has joined #fluid-work
2019-11-20T03:56:36  *** christopher <christopher!~textual@24.171.222.55> has quit IRC (Client Quit)
2019-11-20T04:23:51  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-11-20T04:40:39  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-11-20T05:09:50  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-11-20T05:25:14  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-11-20T05:59:11  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:502:fd5a:bdd8:8496> has joined #fluid-work
2019-11-20T08:20:56  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:502:fd5a:bdd8:8496> has quit IRC (Quit: Leaving.)
2019-11-20T09:14:36  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-ovonbupealokczex> has quit IRC (Quit: Connection closed for inactivity)
2019-11-20T09:15:28  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e72:c800:afce:ea01:d362:3594> has joined #fluid-work
2019-11-20T09:52:22  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2019-11-20T10:23:32  *** the-t-in-rtf <the-t-in-rtf!~Adium@ip-213-127-95-24.ip.prioritytelecom.net> has joined #fluid-work
2019-11-20T10:30:57  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 240 seconds)
2019-11-20T11:02:12  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2019-11-20T11:47:43  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Remote host closed the connection)
2019-11-20T11:47:59  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2019-11-20T12:01:38  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-klbnloijcvnueddd> has joined #fluid-work
2019-11-20T13:22:02  <Justin_o> Bosmon: for IoC references in gradeNames, can they be related to options, or can they only refer to invokers?
2019-11-20T13:22:55  <Bosmon> Justin_o - they can refer to options
2019-11-20T13:23:00  <Bosmon> Actually this just got fixed up a bit
2019-11-20T13:23:31  <Bosmon> The alternatives used to be i) a reference to any statically resolvable options, ii) reference to a nullary function returning gradeNames
2019-11-20T13:23:47  <Bosmon> In the upcoming branch you can also now supply an expander which accepts args
2019-11-20T13:24:47  <Justin_o> Bosmon: thanks... when it is resolved, will I see both the IoC expression and the resolved grade name in the gradeNames for a component?
2019-11-20T13:25:32  <Bosmon> I think both the old and new frameworks still leave behind the expression as a set of mouse droppings
2019-11-20T13:25:36  <Bosmon> But I think you shouldn't depend on this
2019-11-20T13:27:06  <Justin_o> Bosmon: thanks, I'm just trying to sort some things out for FLUID-6420
2019-11-20T13:27:32  <Justin_o> I'm getting closer to being able to combine what was fluid.prefs.create, fluid.prefs.builder and fluid.uiOptions.prefsEditor
2019-11-20T13:28:23  <Bosmon> Justin_o - that's great
2019-11-20T13:28:26  <Justin_o> The issue I'm having now is that I seem to be missing some of the supplied grades, which are provided via an IoC expression, but there may just be some misconfiguration somewhere
2019-11-20T13:28:48  <Justin_o> but I wanted to make sure that it was something that would be allowed, to make sure that wasn't the issue to begin with
2019-11-20T13:29:43  <Justin_o> Bosmon: in case you're curious here's the in progress state of the new grade.
2019-11-20T13:29:45  <Justin_o>         ],
2019-11-20T13:30:04  <Justin_o> https://www.irccloud.com/pastebin/crJ4a0xr/
2019-11-20T13:30:13  <Bosmon> Justin_o - make sure you haven't done something horribly circular like depending on configuration material which requires your grade name to already have been seen : P
2019-11-20T13:30:45  <Justin_o> and the new builder grade, which I might just make part of the previous one I pasted.
2019-11-20T13:30:52  <Bosmon> Justin_o - does your invoker get called?
2019-11-20T13:30:54  <Justin_o> https://www.irccloud.com/pastebin/Ulm6nswj/
2019-11-20T13:31:40  <Justin_o> Bosmon: "make sure you haven't done something horribly circular like depending on configuration material which requires your grade name to already have been seen" I made that mistake again the other day.
2019-11-20T13:33:18  <Justin_o> Bosmon: yes, that invoker in the fluid.uio does get called. I think it has something to do with the assembler grades. which are used by the new builder above. These grades though are mostly the same as they are currently in master with the exception of the store being separated into a separate grade.
2019-11-20T13:33:28  <Justin_o> https://www.irccloud.com/pastebin/F1OpzdQv/
2019-11-20T13:34:35  <Bosmon> Justin_o - ok, well if it is called, you should be fine ... are you not seeing the grades it returns in the final grade list?
2019-11-20T13:39:51  <Justin_o> Bosmon: I'm actually missing the prefsEditor in the prefsEditorLoader.. well actually I think I'm missing all of the prefsEditorLoader's subcomponents
2019-11-20T13:40:15  <Bosmon> Justin_o - ah
2019-11-20T13:40:24  <Justin_o> there may be similar issues for the store and enhancer as well, but haven't looked into those enough yet
2019-11-20T13:40:46  <Bosmon> Justin_o - you may well be running into: https://issues.fluidproject.org/browse/FLUID-5028
2019-11-20T13:41:01  <Bosmon> If you have started the process of evaluating subcomponents, you can't end up seeing extra ones
2019-11-20T13:41:22  <Bosmon> I was just talking to Philip about this the other day, in theory it wouldn't be too hard to fix but it would be annoying to port the fix to both old and new frameworks .....
2019-11-20T13:41:55  <Bosmon> Only a 6 yr old bug!
2019-11-20T13:45:15  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-20T13:51:39  <Justin_o> ha.. okay.. I'll have to do some more investigation I guess, but this is helpful. Thanks.
2019-11-20T13:51:57  <Justin_o> What do you think the ETA is on fluid-6148 being merged with master?
2019-11-20T13:58:05  <Bosmon> Justin_o - same answer to the question as last time :)
2019-11-20T13:58:25  <Justin_o> okay :)
2019-11-20T13:58:28  <Bosmon> We need to make sure that the same core set of 3 projects is ready
2019-11-20T13:58:43  <Bosmon> I mean, in theory we could produce a release which breaks SJRK but I think it wouldn't be polite
2019-11-20T13:59:29  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has joined #fluid-work
2019-11-20T14:00:50  <Justin_o> Bosmon: yes, probably not polite
2019-11-20T14:01:01  <Justin_o> Bosmon: is GPII all working now with the new framework?
2019-11-20T14:03:10  *** jhung <jhung!~jhung@CPE18e829ac96f5-CMa84e3f431590.cpe.net.cable.rogers.com> has joined #fluid-work
2019-11-20T14:15:01  *** simonjb <simonjb!~simonjb@198.178.118.18> has joined #fluid-work
2019-11-20T14:26:26  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 240 seconds)
2019-11-20T14:26:29  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has joined #fluid-work
2019-11-20T14:49:30  *** clown <clown!clown@nat/ocadu/x-osxaolawezxokabv> has joined #fluid-work
2019-11-20T15:03:33  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has joined #fluid-work
2019-11-20T15:04:59  <clown> Good morning Justin_o.  I'm not clear on how to join today's Community Meeting.  For those of us in the office, are we going to go to the collab room, and will it be set up to use zoom to connect to the webinar?
2019-11-20T15:05:43  <Justin_o> clown: yes, that's correct. gmoss will set things up for those local
2019-11-20T15:06:32  <clown> Thanks Justin_o
2019-11-20T15:09:13  *** cherylhjli <cherylhjli!~Adium@toroon0949w-lp130-03-65-93-18-241.dsl.bell.ca> has joined #fluid-work
2019-11-20T15:13:18  *** yanachkov__ <yanachkov__!~yanachkov@185.97.75.80> has quit IRC (Remote host closed the connection)
2019-11-20T15:13:55  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2019-11-20T15:17:58  *** michelled <michelled!~Adium@205.211.168.103> has joined #fluid-work
2019-11-20T15:31:35  *** cherylhjli <cherylhjli!~Adium@toroon0949w-lp130-03-65-93-18-241.dsl.bell.ca> has quit IRC (Quit: Leaving.)
2019-11-20T15:32:10  <Bosmon> Justin_o - well... "nearly"
2019-11-20T15:33:14  <Bosmon> https://issues.fluidproject.org/browse/FLUID-6427 was the most recent issue I found getting gpii-app fully in shape
2019-11-20T15:33:51  <Bosmon> There is at least one further issue there with the undo facility, and then possibly others if we decide to push the immutability stuff through
2019-11-20T15:36:54  *** cherylhjli <cherylhjli!~Adium@toroon0949w-lp130-03-65-93-18-241.dsl.bell.ca> has joined #fluid-work
2019-11-20T15:39:13  *** javjarfer[m] <javjarfer[m]!javjarferm@gateway/shell/matrix.org/x-jemtbmonughhateh> has quit IRC (Ping timeout: 250 seconds)
2019-11-20T15:40:45  <Justin_o> Bosmon: okay, it would be nice to enforce the immutability. Otherwise more issues will likely creep in over time
2019-11-20T15:41:17  <Justin_o> Bosmon: is it valid for an options distribution to distribute gradeNames, itself?
2019-11-20T15:41:30  <Justin_o> that is, to the same component for which the option distribution is defined?
2019-11-20T15:42:01  <Bosmon> Justin_o - no, that's currently not possible
2019-11-20T15:42:14  <Bosmon> Since gradeNames need to get fully resolved in order to determine what distributions are there
2019-11-20T15:42:23  <Bosmon> We can't currently close that circle
2019-11-20T15:42:36  <Justin_o> Bosmon: okay, so gradeNames can only be distributed down I guess
2019-11-20T15:42:38  <Bosmon> You may notice a paniced comment to that effect at that site I showed you featuring the upwards options distribution
2019-11-20T15:43:23  <Justin_o> Bosmon: yes.. I noticed that this morning
2019-11-20T15:43:29  <Bosmon> I think in practice we won't be able to distribute gradeNames upwards until we can begin the "Infusion compiler" work
2019-11-20T15:43:42  <Bosmon> Since it implies we need to totally reorganise the data structures we use for options merging and expansion
2019-11-20T15:44:08  <Bosmon> If the current system is partway through evaluating a particular "merged defaults" structure you can't get it to suddenly change horses and evaluate a different one
2019-11-20T15:44:13  <Justin_o> Bosmon: I'm thinking of reworking the grades I showed you this morning to use options distributions for the grade names.. hopefully that will work around the issue I've run into at the moment
2019-11-20T15:44:14  <Bosmon> All you can do is stuff extra blocks on the end
2019-11-20T15:44:53  <Bosmon> This goes back, again, to that very very ancient 2009 decision, to cache sets of "merged defaults" corresponding to a particular combination of typeName + gradeNames
2019-11-20T15:45:07  <Bosmon> And each one of these merged defaults becomes a single "block" at the head of the list
2019-11-20T15:45:36  <Bosmon> So it is like the foundation of a big structure, you can't whip it out once the system has started to chew on it : P
2019-11-20T15:46:16  <Bosmon> Once we have the "compiler" we can afford to break out each of the defaults from each grade definition separately again, since these will only get evaluated once per "shape" of component
2019-11-20T15:46:36  <Bosmon> Which then means we will have an idea what to do if a gradeName unexpectedly arrives partway through the process
2019-11-20T15:47:06  <Bosmon> But right now grade closure happens just once for each component, and it needs to completely finish before we go on to do anything else
2019-11-20T15:48:30  <Justin_o> Bosmon: thanks, that's all reasonable. It's really quite remarkable how well all these things work already.
2019-11-20T15:48:53  <Bosmon> Yes, it's not typical to allow the type of a component to change at all once it has begun to instantiate : P
2019-11-20T15:49:07  <Bosmon> But yes, the immutability stuff is catching an interesting collection of bugs
2019-11-20T15:49:35  <Bosmon> I think case 2 of https://issues.fluidproject.org/browse/FLUID-6428 corresponds to a bug that we have always had, it's just that noone has observed it
2019-11-20T15:50:18  <Bosmon> If you inject a set of component options into a subcomponent, any further evaluations it receives will actually corrupt it in place
2019-11-20T15:50:57  <Bosmon> I guess we've been saved generally by the fact that component options have always been at least "morally immutable" so that there weren't really any valid occasions where people tried to change them
2019-11-20T15:59:10  <Justin_o> Bosmon: I'd guess most of the places are cases where we should have been using model values or members. And maybe they are work arounds for parts that were created prior to those features
2019-11-20T16:03:49  <Justin_o> Bosmon: wondering, when we make options immutable, will the "removeSource" flag still work in distributeOptions blocks?
2019-11-20T16:03:59  <Bosmon> Justin_o, yes it will
2019-11-20T16:04:21  <Bosmon> Basically they have always been "removed before they ever arrive"
2019-11-20T16:04:30  <Justin_o> ah okay
2019-11-20T16:04:45  <Bosmon> Noone ever gets to see a view of the options structure where they are in place
2019-11-20T16:04:50  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 240 seconds)
2019-11-20T16:05:17  <Justin_o> Bosmon: because the options distributions happen before any other type of evaluation?
2019-11-20T16:05:35  <Bosmon> Justin_o well, because the evalution of options distributions is *part* of the process of options evaluation
2019-11-20T16:05:59  <Bosmon> Like mergePolicies, they affect what values are the outcome of the process before they can ever be observed
2019-11-20T16:06:20  <Justin_o> Bosmon: okay, the thing I'm always forgetting/confused about is when/where expanders and IoC expressions that are distributed, get resolved
2019-11-20T16:07:10  <Bosmon> Justin_o - well, it's a good question how much of a model of the internals a user of the framework really needs to have
2019-11-20T16:07:23  <Bosmon> Ideally, people should be able to potter on and generally see "whatever they expect to happen, happen"
2019-11-20T16:07:34  <Bosmon> But I guess you count as a pretty advanced user of the framework : P
2019-11-20T16:07:50  <Justin_o> I hope so :)
2019-11-20T16:08:08  <Bosmon> To myself, I find it hard to account for what the framework does in detail without bearing in mind the "mergeBlocks/mergeOptions" structure which is in the shadow record
2019-11-20T16:08:28  <Bosmon> As options get evaluated, the various sources of options give rise to several "mergeBlocks" structures in there
2019-11-20T16:09:01  <Bosmon> Right now there is one for every options distribution, one for every subcomponent options record, and as I mentioned before just a SINGLE one accounting for anything that comes directly from fluid.defaults for all the parent grades
2019-11-20T16:09:33  <Bosmon> Each one of those has two "snapshots" of bits of the options, called "source" which is what the user actually wrote, and "target" which has the structure after expanders and IoC references have been interpolated
2019-11-20T16:09:53  <Bosmon> Then, the overall merging process strings together "target" for each of these blocks into the OVERALL TARGET which is the actual options as they are seen
2019-11-20T16:11:10  <Bosmon> So, when there is stuff that "seems to be changing stuff" like "removeSource", options distributions, expanders or what-have-you, these all get slung into the "target" of some mergeBlock
2019-11-20T16:11:33  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-11-20T16:11:36  <Bosmon> Now in theory, each of these targets are all separately immutable, just like the overall target, although we aren't going to bother enforcing this at this point since noone can see them
2019-11-20T16:11:59  <Bosmon> But all of the stuff which looks like "mutation" is just a changing of the rules which gear each separate "source" to its "target"
2019-11-20T16:12:09  <Bosmon> Once anything arrives in a target, it is in theory fixed for all time
2019-11-20T16:13:12  <Justin_o> Bosmon: okay.. that's interesting... in a way when we have a graphical version we'd be able to peel back these layers almost like stepping through version changes in the history of a file
2019-11-20T16:13:31  <Bosmon> Justin_o - that's exactly right, yes
2019-11-20T16:14:05  <Bosmon> One of the interesting conversations that colinclark and I had with Philip and his supervisor Clemens as we were sitting at SDR in Brussels about how we would expose the options merging process (visually or otherwise) to users in end-user tools
2019-11-20T16:14:46  <Bosmon> And I suggested what we would show was a kind of "occlusion" - each options set would look as if it was a kind of coloured plate, such that when they got piled on top of each other, you would just see the bits "sticking out" of a different colour that weren't covered up by things of higher priority
2019-11-20T16:15:14  <Bosmon> But that there would be a kind of "gaps between the pixels" mode where you could turn the whole structure on its side and see the whole stack lined up and where it all came from
2019-11-20T16:15:57  <Bosmon> But in practice, any exposed bit of it you click on from the front would punch through to wherever the options (grade, distribution or whatever) had actually come from, allowing you to trace and influence it, a lot like the way the super-powered CSS inspector works in modern browsers
2019-11-20T16:15:57  <Justin_o> Mozilla used to have a view like this to see the layering of elements in the DOM I don't think it still exists though
2019-11-20T16:16:02  <Bosmon> Only a lot more end-user-y : P
2019-11-20T16:16:50  <Bosmon> This won't be too surprising, since in practice options distributions were inspired by CSS anyway
2019-11-20T16:16:54  <Justin_o> https://www.youtube.com/watch?v=zqHV625EU3E
2019-11-20T16:17:41  <Justin_o> sadly it is no longer available https://developer.mozilla.org/en-US/docs/Tools/3D_View
2019-11-20T16:19:26  <Bosmon> Justin_o wow sod, that is cool
2019-11-20T16:19:37  <Bosmon> Yes that is quite a lot like how we'd want our interface to work : P
2019-11-20T16:19:54  <Bosmon> I guess there needs to be an acceptable 2d version of it for less-powered front ends
2019-11-20T16:20:02  <Bosmon> And then of course we just need to figure out how to make it accessible : P
2019-11-20T16:20:29  <Bosmon> Thanks Justin_o this is such a great reference point
2019-11-20T16:20:48  <Bosmon> Clayton had been talking about the "gaps between the pixels" for years but we never really had much of an avatar for it
2019-11-20T16:21:31  <Bosmon> In our final authorial system, we'll then want to trace back not just the layering of the visual rendering, but all the design decisions (encoded in layers of options and their relations) that made it that way
2019-11-20T16:21:50  <Bosmon> Then you'll just be able to reach in and change the system in realtime : P
2019-11-20T16:24:43  <Justin_o> sounds amazing and very sci-fi like :)
2019-11-20T16:25:07  <Bosmon> Yes
2019-11-20T16:25:16  <Bosmon> I hope we will get to see some of this sci-fi in our lifetimes : P
2019-11-20T16:25:27  <Justin_o> in a way it's almost bringing things back to how things worked mechanically, where you could reach in a change parts and it would work differently
2019-11-20T16:25:42  <Bosmon> Today, we resolve pedestrian options merging bugs in which "undefined" undesirably appears in the middle of a structure ...........
2019-11-20T16:26:11  <Bosmon> Yes, every step in technology has taken us away from this "direct manipulation" mechanical world
2019-11-20T16:26:21  <Bosmon> Even C programming was vastly more "direct manipulation" than what we have now
2019-11-20T16:26:29  <Bosmon> In that everything had an address and everything could be tinkered with
2019-11-20T16:26:51  <Bosmon> But now we have to successively unravel all the insulating layers that 50 years of software development have put in place
2019-11-20T16:27:12  <sgithens> cindyli: Thanks for the comments, will start in on them shortly
2019-11-20T16:27:26  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-20T16:29:09  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has quit IRC (Quit: colinclark)
2019-11-20T16:31:19  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-20T16:31:29  <cindyli> thanks, sgithens
2019-11-20T16:33:32  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has joined #fluid-work
2019-11-20T16:43:25  <Justin_o> Bosmon: I'm feeling good about this :)
2019-11-20T16:43:41  <Bosmon> Justin_o - sgithens usually is too : P
2019-11-20T16:46:05  *** christopher <christopher!~textual@24.171.222.55> has joined #fluid-work
2019-11-20T16:46:44  <Bosmon> Now, if only we had a team of 50 developers and a budget of $100m as is apparently appropriate for developing a programming language ....
2019-11-20T16:47:22  *** christopher <christopher!~textual@24.171.222.55> has quit IRC (Client Quit)
2019-11-20T16:48:28  <Justin_o> Bosmon: if there weren't any 0s or letters in those numbers we'd be in good shape
2019-11-20T16:50:00  *** christopher <christopher!~textual@24.171.222.55> has joined #fluid-work
2019-11-20T16:50:16  <Bosmon> :)
2019-11-20T16:50:27  <Justin_o> Bosmon: so the problem I mentioned earlier may be resulting from the loader grades not being distributed
2019-11-20T16:51:23  <Justin_o> it's rather complicated now, because I'm trying not to change too much while I figure out how to get things to work. but this part may stay always. The auxScheme property is created via the mergePolicy that basically just copies over the expanded auxiliary schema
2019-11-20T16:51:38  <Justin_o> the options distribution then tries to distribute the loader grade from there
2019-11-20T16:52:28  <Justin_o> initially there were two distributions that were relaying this to a spot that was then using an IoC expression to add it to the prefsEditorLoader subcomponent gradeNames, but I've simplified that chain a bit. However, it still doesn't seem to be distributing anything
2019-11-20T16:52:29  *** michelled <michelled!~Adium@205.211.168.103> has quit IRC (Quit: Leaving.)
2019-11-20T16:52:51  <Justin_o> I wonder if if it's trying to do the distribution before the auxSchema option is created? is that possible?
2019-11-20T16:52:57  <Justin_o> given that it is a merge policy
2019-11-20T16:52:58  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has quit IRC (Quit: colinclark)
2019-11-20T16:53:08  <Justin_o> although one that relies on an expander running in another part of the options structure
2019-11-20T16:54:39  <sgithens> it's going to be awesome
2019-11-20T16:55:09  <Bosmon> Justin_o - if the distribution visibly reads the auxSchema option, it will cause it to be evaluated
2019-11-20T16:55:36  <Justin_o> Bosmon: can you remind me how to get access to the shadows
2019-11-20T16:55:54  <Bosmon> Justin_o - you should always have "fluid.globalInstantiator" as a watch expression in your debugger
2019-11-20T16:56:09  <Bosmon> From there, you can go into the idToShadows table, once you have worked out the id of your component
2019-11-20T16:56:23  <Bosmon> If you've forgotten the id or don't have it somehow, you can look it up in pathToComponent in there
2019-11-20T16:57:55  <Justin_o> Bosmon: is it true that from run to run the number portion of the id should always be the same, if you don't change anything in the tree?
2019-11-20T16:58:13  <Bosmon> Justin_o - yes, the number portion will be stable
2019-11-20T16:58:42  <Justin_o> Bosmon: it would be nice if we could have a way to just search for it based on that stable number, so that we could just watch it
2019-11-20T16:58:48  <Bosmon> An endsWith("-nnnn") breakpoint is a highly attested technique
2019-11-20T16:59:26  <Bosmon> That is, at some crucial juncture you can set a that.id.endsWith("-999") breakpoint to watch for some meaningful event in the lifetime of your component
2019-11-20T16:59:53  <Justin_o> ah that's a good point
2019-11-20T17:00:33  <Justin_o> Bosmon: for the merge blocks what's the order of the merge.. is it 0 to n with n being the one to expect as the last result in case of overriding?
2019-11-20T17:00:38  <Justin_o> or does it go the other way
2019-11-20T17:01:08  <Bosmon> Justin_o - the first way
2019-11-20T17:01:12  <Bosmon> The defaults block is always block 0
2019-11-20T17:03:34  <jhernandez> arch meeting time! :)
2019-11-20T17:04:32  *** cindyli1 <cindyli1!~Adium@198.52.178.16> has joined #fluid-work
2019-11-20T17:04:32  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Read error: Connection reset by peer)
2019-11-20T17:08:38  *** michelled <michelled!~Adium@205.211.168.103> has joined #fluid-work
2019-11-20T17:28:49  *** cherylhjli <cherylhjli!~Adium@toroon0949w-lp130-03-65-93-18-241.dsl.bell.ca> has quit IRC (Quit: Leaving.)
2019-11-20T17:32:06  *** jhung_2 <jhung_2!~jhung@CPE18e829ac96f5-CMa84e3f431590.cpe.net.cable.rogers.com> has joined #fluid-work
2019-11-20T17:35:14  *** jhung <jhung!~jhung@CPE18e829ac96f5-CMa84e3f431590.cpe.net.cable.rogers.com> has quit IRC (Ping timeout: 240 seconds)
2019-11-20T17:38:26  *** colinclark <colinclark!~colinclar@205.211.168.104> has joined #fluid-work
2019-11-20T17:44:57  *** cherylhjli <cherylhjli!~Adium@142.118.118.222> has joined #fluid-work
2019-11-20T17:47:52  *** jhung_2 is now known as jhung
2019-11-20T17:53:56  *** clown <clown!clown@nat/ocadu/x-osxaolawezxokabv> has quit IRC (Quit: Leaving.)
2019-11-20T17:56:14  *** cherylhjli <cherylhjli!~Adium@142.118.118.222> has quit IRC (Quit: Leaving.)
2019-11-20T17:56:31  *** cherylhjli <cherylhjli!~Adium@142.118.118.222> has joined #fluid-work
2019-11-20T17:56:38  *** clown <clown!~clown@205.211.168.103> has joined #fluid-work
2019-11-20T17:57:42  *** clown1 <clown1!~clown@205.211.168.103> has joined #fluid-work
2019-11-20T18:01:02  *** clown <clown!~clown@205.211.168.103> has quit IRC (Ping timeout: 246 seconds)
2019-11-20T18:04:18  *** michelled <michelled!~Adium@205.211.168.103> has quit IRC (Quit: Leaving.)
2019-11-20T18:06:08  *** clown1 is now known as clown
2019-11-20T18:08:33  *** christopher <christopher!~textual@24.171.222.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-20T18:14:13  *** michelled <michelled!~Adium@205.211.168.103> has joined #fluid-work
2019-11-20T18:52:02  *** michelled <michelled!~Adium@205.211.168.103> has quit IRC (Quit: Leaving.)
2019-11-20T18:52:31  *** christopher <christopher!~textual@24.171.222.55> has joined #fluid-work
2019-11-20T19:07:27  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e72:c800:afce:ea01:d362:3594> has quit IRC (Quit: jhernandez)
2019-11-20T19:08:55  *** michelled <michelled!~Adium@205.211.168.103> has joined #fluid-work
2019-11-20T19:24:19  *** christopher <christopher!~textual@24.171.222.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-20T19:38:05  *** cindyli1 <cindyli1!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-20T19:40:08  *** clown <clown!~clown@205.211.168.103> has quit IRC (Quit: Leaving.)
2019-11-20T19:40:17  *** clown <clown!~clown@205.211.168.103> has joined #fluid-work
2019-11-20T19:41:01  *** avtar <avtar!avtar@nat/ocadu/x-ugbmwaikuobxscsx> has joined #fluid-work
2019-11-20T19:53:29  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-20T20:12:00  *** clown <clown!~clown@205.211.168.103> has quit IRC (Quit: Leaving.)
2019-11-20T20:29:01  *** michelled <michelled!~Adium@205.211.168.103> has quit IRC (Quit: Leaving.)
2019-11-20T20:38:40  *** michelled <michelled!Adium@nat/ocadu/x-pjawbdqoalwwkqau> has joined #fluid-work
2019-11-20T20:43:34  *** clown <clown!clown@nat/ocadu/x-fyeawrtofjavinng> has joined #fluid-work
2019-11-20T20:45:50  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-20T20:46:24  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-20T21:20:27  *** jhung <jhung!~jhung@CPE18e829ac96f5-CMa84e3f431590.cpe.net.cable.rogers.com> has quit IRC (Quit: Leaving)
2019-11-20T21:24:09  *** the-t-in-rtf <the-t-in-rtf!~Adium@ip-213-127-95-24.ip.prioritytelecom.net> has quit IRC (Quit: Leaving.)
2019-11-20T21:24:42  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-20T21:25:30  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2019-11-20T21:45:23  <sgithens> cindyli , when you work on acceptance tests, what is your source folder layout like for that?
2019-11-20T21:45:45  <sgithens> since you're probably actively editing windows and universal files at the same time
2019-11-20T21:46:37  <sgithens> I don't think I've ever done this the correct way, and I'm almost always accidentally wiping stuff out because I just move what I'm working on in to other projects node_modules
2019-11-20T21:49:39  <cindyli> sgithens: i don't edit windows files. most integration tests in universal actually uses linux mock environment so windows repo is not required to run them
2019-11-20T21:50:05  <cindyli> in the unversal tests/ root directory, there are many integration tests
2019-11-20T21:50:20  <sgithens> cindyli : ok, so you've never had to muck with the jaws or nvda or windows settings handlers straight on
2019-11-20T21:50:30  <sgithens> Maybe I'll ask tony in the morning on our call
2019-11-20T21:50:36  <cindyli> OS specific tests are in tests/platform/ directory but i didn't write any of them
2019-11-20T21:50:52  <sgithens> I'd like to get it done the correct way for moving these JAWS and SPI settings things over
2019-11-20T21:51:01  <sgithens> instead of my wierd hacky way
2019-11-20T21:51:42  <sgithens> cindyli: one more completely random note, you use thunderbird on macOS right?
2019-11-20T21:51:49  <cindyli> sgithens: no, i never muck with jaws etc. you will need to work on files in tests/platform/windows to test jaws etc
2019-11-20T21:52:02  <cindyli> i do use thunderbird
2019-11-20T21:52:09  <sgithens> it's pretty good?
2019-11-20T21:52:23  <cindyli> so far so good
2019-11-20T21:52:30  <cindyli> Mail is great too
2019-11-20T21:52:45  <sgithens> I'm trying to start removing my dependencies to move back to linux eventually, and get one of these librem 5 phones eventually
2019-11-20T21:52:49  <cindyli> i use them both at the same time. but if you only need one, Mail should be enough
2019-11-20T21:53:14  <cindyli> i see
2019-11-20T21:53:37  <sgithens> it's been a long time
2019-11-20T22:01:22  *** clown <clown!clown@nat/ocadu/x-fyeawrtofjavinng> has quit IRC (Quit: Leaving.)
2019-11-20T22:05:10  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2019-11-20T22:05:50  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has quit IRC (Quit: Leaving.)
2019-11-20T22:12:05  *** michelled <michelled!Adium@nat/ocadu/x-pjawbdqoalwwkqau> has quit IRC (Quit: Leaving.)
2019-11-20T22:18:43  *** simonjb <simonjb!~simonjb@198.178.118.18> has quit IRC ()
2019-11-20T22:42:35  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-11-20T22:52:22  *** colinclark <colinclark!~colinclar@205.211.168.104> has quit IRC (Quit: colinclark)
2019-11-20T22:53:26  *** colinclark <colinclark!~colinclar@205.211.168.104> has joined #fluid-work
2019-11-20T22:58:09  *** cherylhjli <cherylhjli!~Adium@142.118.118.222> has quit IRC (Quit: Leaving.)
2019-11-20T23:01:22  *** avtar <avtar!avtar@nat/ocadu/x-ugbmwaikuobxscsx> has quit IRC (Quit: Quit)
2019-11-20T23:24:40  *** colinclark <colinclark!~colinclar@205.211.168.104> has quit IRC (Quit: colinclark)
2019-11-20T23:55:22  *** colinclark <colinclark!~colinclar@205.211.168.104> has joined #fluid-work

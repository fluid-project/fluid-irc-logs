2020-02-20T00:35:37  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-20T00:39:46  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Client Quit)
2020-02-20T00:42:26  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-20T00:42:26  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Client Quit)
2020-02-20T00:46:27  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-qhzignjqfjwkisbl> has quit IRC (Quit: Connection closed for inactivity)
2020-02-20T00:48:53  *** jhernandez <jhernandez!~jhernande@109.131.217.102> has quit IRC (Quit: jhernandez)
2020-02-20T00:55:31  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-20T00:55:38  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Client Quit)
2020-02-20T00:57:47  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-20T00:58:39  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-20T00:59:07  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Client Quit)
2020-02-20T00:59:40  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Client Quit)
2020-02-20T01:22:12  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-20T01:47:11  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2020-02-20T02:20:42  *** alanharnum <alanharnum!uid363993@gateway/web/irccloud.com/x-urfrhboncwcbzuln> has quit IRC (Quit: Connection closed for inactivity)
2020-02-20T02:33:08  *** Teddy__ <Teddy__!uid407930@gateway/web/irccloud.com/x-cnevcsmrhawhttmi> has quit IRC (Quit: Connection closed for inactivity)
2020-02-20T03:20:11  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-20T03:20:11  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Client Quit)
2020-02-20T03:20:32  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-20T03:38:31  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2020-02-20T03:40:02  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-20T03:41:16  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Client Quit)
2020-02-20T04:09:22  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T04:15:20  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-20T04:23:09  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-20T04:26:15  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Client Quit)
2020-02-20T04:51:54  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
2020-02-20T04:58:17  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2020-02-20T05:35:11  *** danayo <danayo!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-20T05:57:44  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Quit: Leaving.)
2020-02-20T06:10:25  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T06:51:20  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Quit: Leaving.)
2020-02-20T07:12:49  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T07:27:54  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Quit: Leaving.)
2020-02-20T07:52:32  *** Shyamal <Shyamal!uid411152@gateway/web/irccloud.com/x-xlzzhptdmwiazsfx> has joined #fluid-work
2020-02-20T08:00:57  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2020-02-20T08:34:06  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T08:42:02  <javjarfer[m]> the-t-in-rtf: good morning, do you know the reason behind this property definition https://github.com/GPII/universal/blob/master/testData/solutions/win32.json5#L4783? I don't see any necessity for it in the terms of that settingsHandler
2020-02-20T09:23:49  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 255 seconds)
2020-02-20T09:40:16  *** jhernandez <jhernandez!~jhernande@2a02:a03f:6189:e000:d600:afb2:8af2:1a83> has joined #fluid-work
2020-02-20T10:01:23  <Bosmon> jhernandez - so, what's the thinking behind the new .NET path override? : P
2020-02-20T10:02:06  <Bosmon> Looks like your gpii-app pull got exactly the same failure as cindyli's
2020-02-20T10:02:45  <the-t-in-rtf> @javjarfer[m], I don't know enough about that settings handler to comment, but I am certainly in favour of removing anything unnecessary
2020-02-20T10:03:10  <the-t-in-rtf> there are so many that use both a path and a value, perhaps someone just got carried away
2020-02-20T10:03:36  <the-t-in-rtf> but it's interesting
2020-02-20T10:03:46  <the-t-in-rtf> I'm wondering if we should be using that deep structure for other settings handlers
2020-02-20T10:07:39  <javjarfer[m]> the-t-in-rtf: but my point is that, that particular settings handler doesn't have a "path" at all as input, so why that path in the properties definitions?
2020-02-20T10:08:00  <the-t-in-rtf> just reading the code myself, but it does seem like that
2020-02-20T10:08:11  <the-t-in-rtf> just let me look at the tests briefly to make sure I understand
2020-02-20T10:09:10  <the-t-in-rtf> OK, it looks to me like the schema is incorrect and incomplete
2020-02-20T10:09:10  <the-t-in-rtf> https://github.com/GPII/windows/blob/master/gpii/node_modules/wmiSettingsHandler/test/testWmiSettingsHandler.js#L81
2020-02-20T10:09:24  <the-t-in-rtf> i.e. there has to be a value, but there can be a get, set, and namespace
2020-02-20T10:09:47  <the-t-in-rtf> the deeper structure of the get and set should also be described
2020-02-20T10:10:09  <the-t-in-rtf> ugh, there's yet another optional setting
2020-02-20T10:10:15  <the-t-in-rtf> https://github.com/GPII/windows/blob/master/gpii/node_modules/wmiSettingsHandler/test/testWmiSettingsHandler.js#L204
2020-02-20T10:11:11  <the-t-in-rtf> Anyway, you are totally correct that path is not needed, but we do need to flesh out the actual structure
2020-02-20T10:11:12  <javjarfer[m]> the-t-in-rtf, Bosmon this is something that I was thinking about yesterday, we have sifted from a validation approach of "settings" to validation of settings handler input
2020-02-20T10:11:38  <the-t-in-rtf> uh, we haven't switched
2020-02-20T10:11:52  <the-t-in-rtf> or maybe I don't understand
2020-02-20T10:12:17  <the-t-in-rtf> to this point we have usually expressed settings in terms of what the settings handler needs to see
2020-02-20T10:12:44  <the-t-in-rtf> it's only recently that we've started doing what you do, which is to have an implied simpler form of the setting that isn't written from the point of view of the settings handler
2020-02-20T10:13:08  <the-t-in-rtf> even the setting keys themselves are couched in terms of what the settings handler needs
2020-02-20T10:13:19  <the-t-in-rtf> i.e. section.subsection.settingName
2020-02-20T10:14:54  <the-t-in-rtf> all of the capabilities transforms go from "some other format" to "what the settings handler can work with"
2020-02-20T10:15:08  <the-t-in-rtf> as far as I know this has been the case for a long time
2020-02-20T10:15:15  <the-t-in-rtf> but maybe you could explain what makes it seem like a shift
2020-02-20T10:15:52  <the-t-in-rtf> like an example of how it was, and an example of how it is now
2020-02-20T10:16:55  <the-t-in-rtf> maybe you're thinking of the path/value changes?
2020-02-20T10:17:47  <the-t-in-rtf> that's a matter of making the setting we accept match what we can actually use
2020-02-20T10:18:46  <javjarfer[m]> the-t-in-rtf: mm yes, I get it, but then how this invalid setting definition has passed undetected?
2020-02-20T10:19:24  <the-t-in-rtf> we are only really actively using things that can be set using the QSS
2020-02-20T10:19:42  <the-t-in-rtf> and by our tests
2020-02-20T10:20:30  <the-t-in-rtf> we have tests that check the stuff in testData/preferences, so if you used the wrong syntax there, you'd have seen the problem
2020-02-20T10:20:51  <the-t-in-rtf> we also have validation on settings/prefs writes, so if you had tests trying to save the setting in question, you'd have seen the problem
2020-02-20T10:22:07  <the-t-in-rtf> failing that, we can still get away with this kind of thing
2020-02-20T10:22:29  <the-t-in-rtf> I am adding checks to make it harder to do, but it's certainly still possible to write settings that could never work
2020-02-20T10:23:04  <the-t-in-rtf> or that require information that's not needed
2020-02-20T10:25:22  <the-t-in-rtf> ugh, I see now
2020-02-20T10:25:34  <the-t-in-rtf> the other material is settings handler options
2020-02-20T10:25:46  <the-t-in-rtf> https://github.com/GPII/universal/blob/f0de96f0b520cd2e1782c205847e88b5d2df08ec/tests/platform/windows/windows-brightness-testSpec.js#L31
2020-02-20T10:27:35  <the-t-in-rtf> I think the checks I'm adding in my latest pull would have revealed this
2020-02-20T10:27:45  <the-t-in-rtf> i.e. the common term is used in at least on prefs set
2020-02-20T10:29:36  <the-t-in-rtf> I see
2020-02-20T10:29:47  <the-t-in-rtf> my new checks didn't catch it because they test whatever defaults are defined
2020-02-20T10:30:07  <the-t-in-rtf> and there are no defaults defined for common/screenBrightness
2020-02-20T10:30:33  <the-t-in-rtf> I can expand my tests of testData/preferences to make sure the payload is valid both before and after it's transformed
2020-02-20T10:30:40  <the-t-in-rtf> that should catch the mismatch
2020-02-20T10:31:19  <jhernandez> Bosmon: okay, I thought cindy's PR was failing due to that
2020-02-20T10:31:51  <jhernandez> but mine reports as 0 warnings/0 errors  ;P
2020-02-20T10:33:59  <jhernandez> yeah
2020-02-20T10:39:58  <jhernandez> I recommend that javjarfer[m] and/or stegru take a closer look at it - I'd say our build chain is "okay" but yet can be improved
2020-02-20T10:52:49  <javjarfer[m]> the-t-in-rtf: I executed the acceptance tests locally and I can't say any failures
2020-02-20T10:53:03  <javjarfer[m]> is validation executed during acceptance tests?
2020-02-20T10:53:10  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Quit: Leaving.)
2020-02-20T11:06:15  <Bosmon> jhernandez - in what sense is it "ok" in that nothing is working yet? : P
2020-02-20T11:07:00  <Bosmon> javjarfer[m] - there is no validation during acceptance tests, except in terms of anything written to the prefs server under test
2020-02-20T11:17:25  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has joined #fluid-work
2020-02-20T11:23:54  <jhernandez> Bosmon: maybe I'm a bit lost - what's not working?
2020-02-20T11:23:59  <jhernandez> gpii-app? it does work
2020-02-20T11:27:38  <Bosmon> it failed!
2020-02-20T11:27:41  <javjarfer[m]> Bosmon: I understand... okay, but here is the thing that worries me about this, if this scheme https://github.com/GPII/windows/blob/master/gpii/node_modules/wmiSettingsHandler/test/testWmiSettingsHandler.js#L81 is incorrect, but it's being validated because there are two prefsets for testing that funcitonality "ben.json5" and "os_win_brightness.json5" that means that validation is working with just a subset of the
2020-02-20T11:27:42  <javjarfer[m]> schema that represent the setting
2020-02-20T11:27:53  <Bosmon> Every pull fails in CI ....
2020-02-20T11:28:24  <Bosmon> javjarfer[m] - but the prefs sets and SR are validated separately as a standalone build task
2020-02-20T11:28:49  <javjarfer[m]> Bosmon: but prefset are validated against SR
2020-02-20T11:31:09  <javjarfer[m]> I think that the restrictions for this validations are very lax, because if the prefset doesn't contains all the info present in the scheme of the setting, validation should fail, just a partial match, shouldn't be enough, as could lead to schemes updates that aren't really tested, and that pass without any warning, when in reality just add needless information to the schema
2020-02-20T11:51:36  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T11:51:43  <the-t-in-rtf> yes, I figured out what's going on
2020-02-20T11:52:06  <the-t-in-rtf> so, all solution-specific settings are checked and also transformed to other solution specific settings
2020-02-20T11:52:28  <the-t-in-rtf> but because we filter down to only check per solution, we don't check that common terms transform into valid values
2020-02-20T11:52:45  <the-t-in-rtf> we do check that that value is valid for the common term's schema
2020-02-20T11:53:01  <the-t-in-rtf> we just don't check that the results of the transform are also valid
2020-02-20T11:54:14  <the-t-in-rtf> this will probably have to stay this way, otherwise we'd end up scanning the whole SR for transforms and probably take a performance penalty as a result
2020-02-20T11:54:44  <the-t-in-rtf> but I can add checks that will tell us if our test data is bad and add additional tests to show us cases in which the transform is problematic
2020-02-20T11:55:07  <the-t-in-rtf> i.e. try all possible variations on the common term in the tests, transform them to any application-specific settings, and validate.
2020-02-20T11:55:37  <the-t-in-rtf> so, actually test each value in an enum, increment through the range of values in a number/integer field
2020-02-20T11:56:09  <the-t-in-rtf> I will probably have to constrain that somewhat for large ranges with small increments, as we don't want to go from 0 to 25000 in one unit increments
2020-02-20T11:56:36  <the-t-in-rtf> but I can definitely highlight simple variations on this issue
2020-02-20T11:56:44  <the-t-in-rtf> even testing with the max/min would have been enough
2020-02-20T12:09:08  <the-t-in-rtf> @Bosmon, FYI, just describing a side effect of the "solutions filtering validation", see above
2020-02-20T12:12:37  *** Justin_o <Justin_o!uid14648@gateway/web/irccloud.com/x-rgmbtbjalfewjtni> has joined #fluid-work
2020-02-20T12:33:31  <the-t-in-rtf> @javjarfer[m], good catch and discussion
2020-02-20T12:33:35  <the-t-in-rtf> just finished a new test:
2020-02-20T12:33:36  <the-t-in-rtf> 13:32:52.849:  Error validating transformed minimum value(s) for http://registry.gpii.net/applications/com.microsoft.windows.brightness:
2020-02-20T12:33:36  <the-t-in-rtf> 13:32:52.849:    - Brightness.path -> undefined : This value is required.
2020-02-20T12:33:50  <the-t-in-rtf> it definitely catches the problem
2020-02-20T12:34:05  <the-t-in-rtf> I will clean all of them up shortly and hopefully you can pull from my work rather than fix them again
2020-02-20T12:34:19  <the-t-in-rtf> There are 22 problems like this
2020-02-20T12:35:50  <the-t-in-rtf> including a few where the transform can't actually handle the full range of inputs correctly
2020-02-20T12:36:06  <the-t-in-rtf> it's a good test that catches the problem you know you had and more
2020-02-20T13:05:32  <the-t-in-rtf> down to 4
2020-02-20T13:10:22  <the-t-in-rtf> OK, I can't really reasonably fix the last three until I get a little guidance about the range here: https://github.com/GPII/universal/blob/master/testData/ontologies/flat.json5#L815
2020-02-20T13:10:41  <the-t-in-rtf> there's no max, so it's tough to gauge the scale
2020-02-20T13:11:34  <the-t-in-rtf> I would infer it from the transform, but this is just nuts:
2020-02-20T13:11:35  <the-t-in-rtf> https://github.com/GPII/universal/blob/master/testData/solutions/win32.json5#L15558
2020-02-20T13:12:34  <the-t-in-rtf> to my eye that seems like it tries to divide the value by three if it's falsey, i.e. zero
2020-02-20T13:15:59  <the-t-in-rtf> I can see a conditional that toggles another setting if the common term is less than 390
2020-02-20T13:17:06  <the-t-in-rtf> This is more helpful: https://github.com/GPII/universal/blob/master/testData/solutions/win32.json5#L8917
2020-02-20T13:18:58  <the-t-in-rtf> or maybe not
2020-02-20T13:19:07  <the-t-in-rtf> by my reading both 150 and 450 equate to 10
2020-02-20T13:19:16  <the-t-in-rtf> 150 *.1 = 15, minus 5 = 10
2020-02-20T13:19:29  <the-t-in-rtf> 450 * 0.03333 = 15, minus 5 = 10
2020-02-20T13:19:49  <the-t-in-rtf> anything higher than 450 is 20
2020-02-20T13:22:46  <the-t-in-rtf> @bosmon, I guess I can set the range of the common term to max out at 500?
2020-02-20T13:22:55  <the-t-in-rtf> and adjust the transforms accordingly?
2020-02-20T13:23:06  <the-t-in-rtf> or was there ever a sensible range for that.
2020-02-20T13:23:08  <Bosmon> the-t-in-rtf - ah, this one :)
2020-02-20T13:23:15  <the-t-in-rtf> is it meant to be words per minute or somethhing?
2020-02-20T13:23:29  <the-t-in-rtf> https://github.com/GPII/universal/blob/master/testData/ontologies/flat.json5#L814
2020-02-20T13:25:34  <Bosmon> the-t-in-rtf - I imagine it is, you can consult this other mapping for comparison: https://github.com/GPII/universal/blob/master/testData/solutions/win32.json5#L8903
2020-02-20T13:25:43  <Bosmon> Please update the description in flat.json as well
2020-02-20T13:26:34  <the-t-in-rtf> that's the one I just pasted.
2020-02-20T13:26:38  <the-t-in-rtf> it's broken
2020-02-20T13:26:41  <the-t-in-rtf> :||
2020-02-20T13:26:54  <the-t-in-rtf> see above about 450 and 150 being equal
2020-02-20T13:27:15  <Bosmon> I'd put the max at something like 1000 if you need one, given this paper suggests that wpm of around 800 are still intelligible to some people: https://homes.cs.washington.edu/~reinecke/Publications_files/Bragg_CHI2018.pdf
2020-02-20T13:27:46  <the-t-in-rtf> yes, I was just reading about someone going for 700+
2020-02-20T13:28:18  <the-t-in-rtf> I'll set it to 1000 and simplify a lot of the transforms
2020-02-20T13:28:34  <the-t-in-rtf> most will be happy with a scale, offset and perhaps a round
2020-02-20T13:28:56  <the-t-in-rtf> rather than that nested conditional stuff that I still don't think can possibly do anything good
2020-02-20T13:29:15  <the-t-in-rtf> Anyway, thanks.
2020-02-20T13:30:35  <jhernandez> from the Cloud4all days, I think that the challenge here was that some screen readers weren't able to go over 500 and things like that because it wasn't a limitation of the AT itself but the speech engine
2020-02-20T13:31:04  <Bosmon> the-t-in-rtf - yes, looks like the linear interpolation was screwed up in that mapping
2020-02-20T13:31:14  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2020-02-20T13:31:59  <the-t-in-rtf> it's all kinds of screwed up, the bottom is also the middle
2020-02-20T13:32:06  <Bosmon> Changing the 2nd factor to 0.055555555 would make more sense
2020-02-20T13:32:09  <the-t-in-rtf> the logic in the comment is nice, I'll actually make it work that wayâ€¦ ;)
2020-02-20T13:32:26  *** cindyli1 <cindyli1!~Adium@198.52.178.16> has joined #fluid-work
2020-02-20T13:33:49  <Bosmon> And the first factor to 0.033333333
2020-02-20T13:35:59  <the-t-in-rtf> I guess I was leaning towards 0.06666 for the second
2020-02-20T13:36:00  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Ping timeout: 265 seconds)
2020-02-20T13:36:05  <the-t-in-rtf> 6bar at the end
2020-02-20T13:36:10  <the-t-in-rtf> i.e. 1/15
2020-02-20T13:36:21  <the-t-in-rtf> that way 150 is 10
2020-02-20T13:36:31  <the-t-in-rtf> and then you change the offset to -10
2020-02-20T13:36:48  <the-t-in-rtf> and that becomes the range from -10 to 0
2020-02-20T13:36:57  <the-t-in-rtf> since 150 is the midpoint, i.e. 0
2020-02-20T13:37:32  <the-t-in-rtf> ugh, right, -10 to 10 is some other value space
2020-02-20T13:38:05  <the-t-in-rtf> no offset, then, so that 150 is 10
2020-02-20T13:46:05  *** simonjb <simonjb!~simonjb@198.178.118.18> has joined #fluid-work
2020-02-20T13:55:07  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2020-02-20T13:56:16  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has joined #fluid-work
2020-02-20T14:29:25  *** avtar <avtar!~avtar@ip-45-3-4-18.user.start.ca> has joined #fluid-work
2020-02-20T14:45:10  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-20T14:51:41  *** simonjb <simonjb!~simonjb@198.178.118.18> has quit IRC (Remote host closed the connection)
2020-02-20T15:05:21  *** avtar <avtar!~avtar@ip-45-3-4-18.user.start.ca> has quit IRC (Remote host closed the connection)
2020-02-20T15:14:16  *** Shyamal <Shyamal!uid411152@gateway/web/irccloud.com/x-xlzzhptdmwiazsfx> has quit IRC (Quit: Connection closed for inactivity)
2020-02-20T15:23:41  *** simonjb <simonjb!~simonjb@205.211.168.101> has joined #fluid-work
2020-02-20T15:30:07  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has joined #fluid-work
2020-02-20T15:37:05  *** clown <clown!clown@nat/ocadu/x-oipnxzmwzaapnggc> has joined #fluid-work
2020-02-20T15:39:51  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
2020-02-20T15:57:51  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2020-02-20T16:00:06  *** cindyli1 <cindyli1!~Adium@198.52.178.16> has quit IRC (Ping timeout: 240 seconds)
2020-02-20T16:02:14  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-20T16:05:30  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Quit: Leaving.)
2020-02-20T16:07:47  *** Shyamal <Shyamal!uid411152@gateway/web/irccloud.com/x-ljmnmrfxmpiktdrv> has joined #fluid-work
2020-02-20T16:07:59  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
2020-02-20T16:08:36  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2020-02-20T16:08:54  <Justin_o> Bosmon, cindyli: does anything other than the browser channel use the websocket handler.
2020-02-20T16:09:24  <Bosmon> Justin_o - currently nothing, but shortly Morphic will use it itself
2020-02-20T16:10:49  <Justin_o> Bosmon: okay, is there a plan for how to avoid the infinite loops like we had to work around in UIO+ itself. That is I change the settings, send it across and it sends them back to me. However in between that time I've sent another change across.
2020-02-20T16:11:26  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 240 seconds)
2020-02-20T16:11:48  <Bosmon> Justin_o - why would that cause an infinite loop?
2020-02-20T16:12:25  <Justin_o> basically the changes chase each other around..
2020-02-20T16:13:08  *** jhung_2 is now known as jhung
2020-02-20T16:13:19  <Justin_o> because the server is also trying to set the clients settings
2020-02-20T16:13:46  <Justin_o> so if there is a change in between then the client's settings are different than what was sent to the server when the server sends the settings back
2020-02-20T16:14:42  <Justin_o> it's a bit confusing but this is why we had to setup the port binding to handle these cases in UIO+
2020-02-20T16:14:45  <Justin_o> maybe this will help https://github.com/GPII/gpii-chrome-extension/blob/master/extension/src/lib/portBinding.js#L19-L62
2020-02-20T16:14:56  <Bosmon> Justin_o - yes, we should certainly try to make some improvements to the protocol for issues like that
2020-02-20T16:15:21  <Bosmon> Perhaps either by encoding just diffs, or doing this implicitly by sending old and new payloads at once
2020-02-20T16:16:04  <Bosmon> I guess it would be useful to try to factor this grade of yours into some kind of standalone library
2020-02-20T16:16:57  <Justin_o> I was looking into refactoring a bit just now to see if I could use it, but realized that the contract doesn't exist on the other end anyways, so wasn't sure it would help.
2020-02-20T16:17:07  <Bosmon> I see at its core it has         return chrome.runtime.connect(options);
2020-02-20T16:17:46  <Justin_o> the message ports in the extension are similar but slightly different than websockets, listeners, arguments, and etc are bit different but the ideas are quite similar
2020-02-20T16:18:00  <Bosmon> Justin_o - yes
2020-02-20T16:18:13  <Bosmon> Perhaps we could create a somewhat portable abstraction out of this
2020-02-20T16:18:23  <Bosmon> Although it would bear reminding ourselves what kind of protocol actually got created
2020-02-20T16:18:46  *** kris_HA <kris_HA!~yanachkov@185.97.75.80> has quit IRC (Ping timeout: 258 seconds)
2020-02-20T16:18:58  <Bosmon> It looks like the portBinding bit doesn't actually handle the other part of the problem, of state rebasing
2020-02-20T16:21:00  <Justin_o> Bosmon: state rebasing?
2020-02-20T16:23:07  <Justin_o> Bosmon: maybe what you're getting at are the things that are handled by fluid.dataSource ( https://github.com/fluid-project/infusion/blob/master/src/framework/core/js/DataSource.js ) and/or fluid.remoteModel ( https://github.com/fluid-project/infusion/blob/master/src/framework/core/js/RemoteModel.js ). both of which get employed by the prefs framework
2020-02-20T16:23:32  <Justin_o> although in looking at all of this for the GPII-4218/GPII-4345 I'm finding it confusing.
2020-02-20T16:24:04  <Bosmon> Justin_o - yes, the RemoteModel stuff
2020-02-20T16:24:14  <Bosmon> Which is what I imagine is what is really responsible for avoiding infinite loops
2020-02-20T16:25:53  <Justin_o> Bosmon: I'm trying to remember but I think part of the problem is that we don't know what's happened with the message because they don't, by themselves, return responses.
2020-02-20T16:26:06  <Bosmon> Justin_o - yes, there's that too
2020-02-20T16:26:23  <Bosmon> That you don't want to notify the user that a save is complete until you get a server notification
2020-02-20T16:27:19  <Justin_o> Bosmon: yes, and the port binding keeps track of these pairs of requests/responses through an id that it sends back and forth
2020-02-20T16:28:08  <Justin_o> I'm not exactly sure how the remoteModel component would work in a one to many model
2020-02-20T16:28:16  <Justin_o> that is one local and many remotes
2020-02-20T16:28:52  <Justin_o> which would be the case on there server, or maybe not, I guess currently the web socket handle partitions it's model based on the solution id
2020-02-20T16:29:16  <Justin_o> although that's potentially problematic for UIO+ as it can now run in both MS Edge and Chrome
2020-02-20T16:29:36  <Justin_o> or you could probably have some other instance of Chrome running like one of the dev releases
2020-02-20T16:29:46  <Justin_o> all at the same tiem
2020-02-20T16:29:47  <Justin_o> time
2020-02-20T16:30:37  <Justin_o> Bosmon: ^
2020-02-20T16:32:47  <Bosmon> Justin_o - well, the solution id will still be the same, right
2020-02-20T16:37:09  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T16:38:15  <Justin_o> Bosmon: yes the solution id is the same but currently the websocket handler blocks connections from the same solution id
2020-02-20T16:39:14  <Bosmon> Justin_o - blocks connections from the same?
2020-02-20T16:41:18  <Justin_o> Bosmon: actually it's in the BrowserChannel https://github.com/GPII/universal/blob/master/gpii/node_modules/flowManager/src/BrowserChannel.js#L41
2020-02-20T16:45:06  <Bosmon> Justin_o - this implementation seems hugely faulty : P
2020-02-20T16:46:41  <Bosmon> Justin_o - no, wait
2020-02-20T16:46:43  <Bosmon> We're misreading it
2020-02-20T16:46:56  <Bosmon> All this state is on the handler, not on the browserChannel component itself
2020-02-20T16:47:33  <Bosmon> This is a Kettle requestHandler component, of which a fresh one will be created for each attempt at an HTTP connection
2020-02-20T16:48:29  <Justin_o> okay.. so each instance of UIO+ will attach to a different one of these?
2020-02-20T16:49:55  <Justin_o> fluid-everyone: just got an e-mail from GSoC, we've been accepted as a mentoring org
2020-02-20T16:50:37  <Justin_o> oops, it isn't public yet. It'll get publicly announced at 19:00 UTC
2020-02-20T16:50:54  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Quit: Leaving.)
2020-02-20T16:51:41  <Justin_o> Bosmon: so I'm a bit confused, there is a separate browserChannel handler for each request, but a single webSocket Handler for all requests?
2020-02-20T17:01:30  *** avtar <avtar!~avtar@ip-45-3-4-18.user.start.ca> has joined #fluid-work
2020-02-20T17:07:36  <gmoss> cindyli: I've updated SJRK-267, will be heading offline for a bit while I take care of an errand and head to the office
2020-02-20T17:09:32  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2020-02-20T17:11:47  *** Teddy__ <Teddy__!uid407930@gateway/web/irccloud.com/x-iamotlzdfeksoivz> has joined #fluid-work
2020-02-20T17:12:36  *** cindyli <cindyli!~Adium@198.52.178.16> has joined #fluid-work
2020-02-20T17:13:37  *** jhung is now known as jhung_away
2020-02-20T17:21:11  *** michelled <michelled!~Adium@S010688154457df65.vc.shawcable.net> has joined #fluid-work
2020-02-20T17:26:17  *** danayo <danayo!~danayo@S010688154457df65.vc.shawcable.net> has joined #fluid-work
2020-02-20T17:30:04  *** avtar <avtar!~avtar@ip-45-3-4-18.user.start.ca> has quit IRC (Ping timeout: 258 seconds)
2020-02-20T17:38:05  *** avtar <avtar!~avtar@ip-24-50-162-245.user.start.ca> has joined #fluid-work
2020-02-20T17:48:38  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2020-02-20T17:52:02  *** jhung_away <jhung_away!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 240 seconds)
2020-02-20T17:59:00  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-20T18:07:06  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 240 seconds)
2020-02-20T18:09:05  <Bosmon> Justin_o - a fresh handler is made for all requests
2020-02-20T18:09:17  <Bosmon> You can see that each one registers itself as a client of the webSocket settingsHandler
2020-02-20T18:10:06  <Justin_o> Bosmon: okay, well I can come back to that one later I guess when I get to the server side, but it sounds like things should work.
2020-02-20T18:11:25  <Justin_o> Bosmon: So at the moment I'm thinking for the abstraction of the current portBinding grade will be to have a dataSource subcomponent, that way we can run through the transforms of the request data for the various types of connections.. and make the grade itself a type of remoteModel component.
2020-02-20T18:11:37  <Justin_o> or not, maybe it doesn't need to be and something else can handle that or it can get mixed in
2020-02-20T18:11:39  <Justin_o> what do you thikn
2020-02-20T18:12:05  <Bosmon> Justin_o - that sounds broadly reasonable - but what are the transforms of the request data?
2020-02-20T18:12:43  <Justin_o> Bosmon: for example for a websocket we'll need to stringify the JSON data
2020-02-20T18:12:54  <Justin_o> before sending it across
2020-02-20T18:13:30  <Bosmon> Justin_o - the Kettle machinery mostly does that, but yes
2020-02-20T18:13:39  <Bosmon> But I'm wondering which particular problem you are addressing right now?
2020-02-20T18:14:09  <Justin_o> Bosmon: this would be for https://issues.gpii.net/browse/GPII-4218
2020-02-20T18:14:17  <Justin_o> currently we don't send anything back across the socket
2020-02-20T18:14:37  <Justin_o> other than establishing a connection UIO+ just receives messages
2020-02-20T18:15:34  <Justin_o> Bosmon: https://github.com/GPII/gpii-chrome-extension/blob/master/extension/src/lib/wsConnector.js
2020-02-20T18:16:23  <Justin_o> I'm actually not even sure why we need to have separate steps for connection and setup. I have to look into that more too
2020-02-20T18:17:59  <Bosmon> Justin_o - some of these are a result of the way WebSockets is layered on top of HTTP as a starter protocol
2020-02-20T18:22:47  <Justin_o> Bosmon: okay that's something else to consider too..
2020-02-20T18:29:21  <Bosmon> Justin_o - well, again, the Kettle wrapper mostly takes care of that
2020-02-20T18:37:27  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2020-02-20T18:37:54  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T18:37:54  <Justin_o> Bosmon: but I'll have to handle those in UIO+
2020-02-20T18:38:14  <Justin_o> that is, I'll have to call connect and send a message to initialize the connection
2020-02-20T18:38:25  *** jhung_3 <jhung_3!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2020-02-20T18:38:58  <Bosmon> Justin_o - but you do, right? Since you are already a client of this bus
2020-02-20T18:39:37  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Client Quit)
2020-02-20T18:39:40  <Justin_o> well yes, but I'm refactoring it all now, so if I make an abstraction that is shared between different types of messaging systems this case will still have to work
2020-02-20T18:40:10  <Justin_o> I'm just going through now and seeing if I can make a two way connection with the websocket that looks something a bit more like port binding.. maybe I won't use the datasource for example..
2020-02-20T18:41:36  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T18:42:08  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 258 seconds)
2020-02-20T18:44:02  *** michelled <michelled!~Adium@S010688154457df65.vc.shawcable.net> has quit IRC (Quit: Leaving.)
2020-02-20T18:47:16  *** michelled <michelled!~Adium@S010688154457df65.vc.shawcable.net> has joined #fluid-work
2020-02-20T18:55:51  *** jhung_3 is now known as jhung
2020-02-20T18:56:12  <Justin_o> cindyli: how can I test UIO+ through the windows repo. I had tested in the past with gpii-app but I think it's stuck with that .NET framework issue at the moment.
2020-02-20T18:58:02  *** jhung_2 <jhung_2!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has joined #fluid-work
2020-02-20T19:01:58  <cindyli> Justin_o: have you tried to test in the windows VM using test scripts "https://github.com/GPII/universal/blob/master/examples/pspChannelClient/pspChannelClientReadPrefs.js" or "https://github.com/GPII/universal/blob/master/examples/pspChannelClient/pspChannelClientApplyPrefs.js" and having Chome open and UIO+ enabled?
2020-02-20T19:02:19  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Ping timeout: 260 seconds)
2020-02-20T19:02:38  <Justin_o> cindyli: I haven't tried that..
2020-02-20T19:03:18  <cindyli> give a try on pspChannelClientApplyPrefs.js to see if UIO+ responds to "apply prefs", Justin_o
2020-02-20T19:03:30  *** jhung_2 is now known as jhung
2020-02-20T19:03:56  <cindyli> i think it should trigger the same flow from flow manager to UIO+
2020-02-20T19:04:26  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Quit: Leaving.)
2020-02-20T19:21:27  <Justin_o> cindyli: where is that file again?
2020-02-20T19:22:17  <cindyli> Justin_o: https://github.com/GPII/universal/blob/master/examples/pspChannelClient/pspChannelClientApplyPrefs.js
2020-02-20T19:22:44  <cindyli> you need to adjust line 45-46 to use a preference that can be consumed by UIO+
2020-02-20T19:22:58  <Justin_o> cindyli: okay, and is that in common terms or in the application specific term
2020-02-20T19:23:31  <cindyli> according to what used by gpii-app, should be common terms for UIO+
2020-02-20T19:24:33  <Justin_o> cindyli: thanks
2020-02-20T19:24:38  <cindyli> np
2020-02-20T19:28:52  <Justin_o> cindyli: do I need to have something running when I call that, or do I just call it with node directly?
2020-02-20T19:29:26  <cindyli> Justin_o: you need to have both LFM and CBFM running
2020-02-20T19:29:37  <cindyli> in a different terminal
2020-02-20T19:30:30  <cindyli> Justin_o: try this config to start GPII - https://github.com/GPII/universal/blob/master/gpii/configs/gpii.config.untrusted.development.manualTesting.json5
2020-02-20T19:36:26  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
2020-02-20T19:43:24  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has joined #fluid-work
2020-02-20T19:46:44  *** clown1 <clown1!clown@nat/ocadu/x-eydmqkufpxijsdhb> has joined #fluid-work
2020-02-20T19:50:39  *** clown <clown!clown@nat/ocadu/x-oipnxzmwzaapnggc> has quit IRC (Ping timeout: 268 seconds)
2020-02-20T19:50:48  <Justin_o> cindyli: thanks, but how do I start from a config file?
2020-02-20T19:51:33  *** clown1 <clown1!clown@nat/ocadu/x-eydmqkufpxijsdhb> has quit IRC (Ping timeout: 265 seconds)
2020-02-20T19:53:20  <cindyli> Justin_o: open a terminal in the windows VM, run
2020-02-20T19:53:21  <cindyli> cd v:
2020-02-20T19:53:29  <cindyli> node gpii.js
2020-02-20T19:54:10  <Justin_o> cindyli: thanks, so I don't need to specify the config
2020-02-20T19:54:49  <cindyli> check the console output to find if there are 2 kettle servers starting at port 8081 and 8084. If yes, you don't need to specify the config, if not, there's another set of command
2020-02-20T19:55:45  <cindyli> from my notes, to specify the config, you use:
2020-02-20T19:55:47  <cindyli> cd v:
2020-02-20T19:56:01  <cindyli> $env:GPII_TEST_COUCH_USE_EXTERNAL="TRUE"; $env:NODE_ENV="gpii.config.untrusted.development.manualTesting"; node gpii.js
2020-02-20T19:57:54  <Justin_o> I think it's working without the config file, thanks for the help
2020-02-20T20:09:49  *** raghavsharma <raghavsharma!~textual@112.196.146.131> has joined #fluid-work
2020-02-20T20:10:23  <raghavsharma> Hello Everyone!
2020-02-20T20:10:41  <Justin_o> Teddy__:  just came across this while looking at the GSoC orgs https://www.shogun.ml may be interesting to you
2020-02-20T20:10:47  <Justin_o> raghavsharma: hello
2020-02-20T20:11:34  <Justin_o> simonjb, danielcho: just saw this, might be interesting to look at related to your work https://www.catrobat.org
2020-02-20T20:12:43  *** clown <clown!clown@nat/ocadu/x-wabuacvczupxnoxh> has joined #fluid-work
2020-02-20T20:13:39  <simonjb> thanks Justin_o
2020-02-20T20:14:01  <danielcho> thanks Justin_o!
2020-02-20T20:17:22  *** jhernandez <jhernandez!~jhernande@2a02:a03f:6189:e000:d600:afb2:8af2:1a83> has quit IRC (Quit: jhernandez)
2020-02-20T20:18:36  <raghavsharma> How do we mention someone in reply?
2020-02-20T20:21:24  <Justin_o> raghavsharma: if you want to ping someone directly here, you can just mention their handle. it should ping them.
2020-02-20T20:21:55  <raghavsharma> Thank you Juston_o
2020-02-20T20:21:59  <raghavsharma> Justin_o *
2020-02-20T20:22:17  <Justin_o> np
2020-02-20T20:32:44  *** colinclark <colinclark!~colinclar@CPE0011329d5706-CMbc3e0737d1c0.cpe.net.cable.rogers.com> has quit IRC (Quit: colinclark)
2020-02-20T20:34:04  *** raghavsharma <raghavsharma!~textual@112.196.146.131> has quit IRC (Quit: Textual IRC Client: www.textualapp.com)
2020-02-20T21:02:10  *** jhernandez <jhernandez!~jhernande@109.131.217.102> has joined #fluid-work
2020-02-20T21:07:01  *** Guest70 <Guest70!~textual@112.196.146.131> has joined #fluid-work
2020-02-20T21:12:33  *** michelled <michelled!~Adium@S010688154457df65.vc.shawcable.net> has quit IRC (Quit: Leaving.)
2020-02-20T21:12:39  *** danayo <danayo!~danayo@S010688154457df65.vc.shawcable.net> has quit IRC (Quit: danayo)
2020-02-20T21:19:47  *** clown1 <clown1!clown@nat/ocadu/x-fheidphuohxebiia> has joined #fluid-work
2020-02-20T21:23:01  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:c015:9e6d:8497:ef59> has quit IRC (Quit: Leaving.)
2020-02-20T21:23:31  *** clown <clown!clown@nat/ocadu/x-wabuacvczupxnoxh> has quit IRC (Ping timeout: 258 seconds)
2020-02-20T21:30:28  *** radicalswetank <radicalswetank!radicalswe@gateway/shell/matrix.org/x-oudvxcbnmkvhlelb> has joined #fluid-work
2020-02-20T21:38:58  *** Guest70 <Guest70!~textual@112.196.146.131> has quit IRC (Quit: Textual IRC Client: www.textualapp.com)
2020-02-20T21:39:49  *** dmahajan98 <dmahajan98!uid411152@gateway/web/irccloud.com/x-midapqyizbfukaax> has joined #fluid-work
2020-02-20T21:41:30  *** clown1 is now known as clown
2020-02-20T21:48:36  *** michelled <michelled!~Adium@S010688154457df65.vc.shawcable.net> has joined #fluid-work
2020-02-20T21:52:28  *** jhung <jhung!~jhung@CPE0c473dc371c3-CM0c473dc371c0.cpe.net.fido.ca> has quit IRC (Quit: Leaving)
2020-02-20T21:58:40  *** michelled <michelled!~Adium@S010688154457df65.vc.shawcable.net> has quit IRC (Quit: Leaving.)
2020-02-20T22:00:54  *** christop_ <christop_!~textual@24.50.234.55> has joined #fluid-work
2020-02-20T22:03:31  *** michelled <michelled!~Adium@S010688154457df65.vc.shawcable.net> has joined #fluid-work
2020-02-20T22:11:13  *** clown <clown!clown@nat/ocadu/x-fheidphuohxebiia> has quit IRC (Quit: Leaving.)
2020-02-20T22:15:41  *** cindyli <cindyli!~Adium@198.52.178.16> has quit IRC (Quit: Leaving.)
2020-02-20T22:37:26  *** simonjb <simonjb!~simonjb@205.211.168.101> has quit IRC ()
2020-02-20T22:39:27  *** danielcho <danielcho!~Adium@hmtnon1497w-130-02-65-95-64-90.dsl.bell.ca> has quit IRC (Quit: Leaving.)
2020-02-20T23:00:49  *** avtar <avtar!~avtar@ip-24-50-162-245.user.start.ca> has quit IRC (Remote host closed the connection)
2020-02-20T23:12:22  *** christop_ <christop_!~textual@24.50.234.55> has quit IRC (Quit: Textual IRC Client: www.textualapp.com)
2020-02-20T23:48:04  *** jhernandez <jhernandez!~jhernande@109.131.217.102> has quit IRC (Quit: jhernandez)
2020-02-20T23:50:04  *** michelled <michelled!~Adium@S010688154457df65.vc.shawcable.net> has quit IRC (Quit: Leaving.)

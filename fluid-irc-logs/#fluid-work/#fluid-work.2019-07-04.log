2019-07-04T05:06:32  *** the-t-in-rtf <the-t-in-rtf!~Adium@2a02:a210:2142:3480:65ba:11a6:6149:9366> has joined #fluid-work
2019-07-04T07:47:46  *** Danail_Dido <Danail_Dido!~Karadalie@109.120.246.31> has joined #fluid-work
2019-07-04T08:48:55  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e5a:900:d9e0:6594:11c4:1e82> has joined #fluid-work
2019-07-04T12:19:02  *** alanharnum <alanharnum!uid363993@gateway/web/irccloud.com/x-qxxzxwkpnpnqrbve> has joined #fluid-work
2019-07-04T12:19:29  *** jhung <jhung!~jhung@CPE54a0505a5e09-CMa84e3f431590.cpe.net.cable.rogers.com> has joined #fluid-work
2019-07-04T12:26:11  *** simonjb <simonjb!~simonjb@198.178.118.18> has joined #fluid-work
2019-07-04T13:00:29  *** cindyli <cindyli!~Adium@198.52.178.28> has joined #fluid-work
2019-07-04T13:02:54  *** michelled <michelled!~Adium@205.211.168.104> has joined #fluid-work
2019-07-04T13:12:42  *** fluid-bot <fluid-bot!~limnoria@205.211.169.46> has joined #fluid-work
2019-07-04T13:31:40  <Bosmon> Hey - morning there cindyli!
2019-07-04T13:37:11  <cindyli> hi, Bosmon
2019-07-04T13:37:39  *** avtar <avtar!~avtar@ip-24-50-189-211.user.start.ca> has joined #fluid-work
2019-07-04T13:37:41  <cindyli> sorry about the problem introduced by GPII-3828 pull request. re-working on it
2019-07-04T13:37:56  <Bosmon> cindyli - we can put that one on the shelf for the time being
2019-07-04T13:38:01  <Bosmon> Since it turns out there is a new higher priority
2019-07-04T13:38:12  <cindyli> ah ha
2019-07-04T13:38:46  <Bosmon> In our meeting on Monday it emerged that Gregg would very much like https://issues.gpii.net/browse/GPII-3988 to go to the top of the list
2019-07-04T13:39:08  <Bosmon> I think unless we get some kind of deadline extension for the deployment we can't get it in, because some of HA will be on holiday for a while
2019-07-04T13:39:13  <Bosmon> But we should try to see how far we can get
2019-07-04T13:39:50  <cindyli> ok
2019-07-04T13:42:58  <Bosmon> cindyli - does the writeup seem to make sense?
2019-07-04T13:43:17  <Bosmon> I imagine this will also require a small change to stegru's service code which performs the login
2019-07-04T13:44:57  <cindyli> reading the requirement doc…
2019-07-04T13:51:36  <cindyli> yes, the writeup in the jira makes sense
2019-07-04T13:57:34  *** clown <clown!clown@nat/ocadu/x-bxhuyzwplvztznkg> has joined #fluid-work
2019-07-04T14:00:28  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-nyoygbyxxnmoykqb> has joined #fluid-work
2019-07-04T14:07:36  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has joined #fluid-work
2019-07-04T14:13:18  *** jhung_2 <jhung_2!~jhung@CPE54a0505a5e09-CMa84e3f431590.cpe.net.cable.rogers.com> has joined #fluid-work
2019-07-04T14:17:06  *** jhung <jhung!~jhung@CPE54a0505a5e09-CMa84e3f431590.cpe.net.cable.rogers.com> has quit IRC (Ping timeout: 245 seconds)
2019-07-04T14:19:03  *** simonjb <simonjb!~simonjb@198.178.118.18> has quit IRC ()
2019-07-04T14:28:51  *** jhung_2 is now known as jhung
2019-07-04T14:32:52  *** avtar <avtar!~avtar@ip-24-50-189-211.user.start.ca> has quit IRC (Read error: Connection reset by peer)
2019-07-04T14:54:21  *** simonjb <simonjb!~simonjb@205.211.168.104> has joined #fluid-work
2019-07-04T14:56:39  *** Danail_Dido <Danail_Dido!~Karadalie@109.120.246.31> has quit IRC (Quit: Leaving)
2019-07-04T15:15:22  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-07-04T15:31:34  *** michelled <michelled!~Adium@205.211.168.104> has quit IRC (Quit: Leaving.)
2019-07-04T15:35:10  *** clown <clown!clown@nat/ocadu/x-bxhuyzwplvztznkg> has quit IRC (Ping timeout: 244 seconds)
2019-07-04T15:36:45  <cindyli> Bosmon: in order to create a route whereby the app can easily trigger a re-logon, do you think if it makes sense to simulate the route for resetting that we create a special GPII key called "relogin" which can be sent in by gpii-app thru pspChannel to trigger LifecycleManager.replayEnvironmentalLogin()?
2019-07-04T15:37:17  *** jhung <jhung!~jhung@CPE54a0505a5e09-CMa84e3f431590.cpe.net.cable.rogers.com> has quit IRC (Quit: Leaving)
2019-07-04T15:52:31  *** colinclark <colinclark!~colinclar@192-0-158-138.cpe.teksavvy.com> has quit IRC (Quit: colinclark)
2019-07-04T15:55:10  <Bosmon> cindyli - yes, that sounds like a reasonable route
2019-07-04T15:55:18  <Bosmon> It would reduce the API surface which we expose to the app
2019-07-04T15:57:19  *** michelled <michelled!Adium@nat/ocadu/x-dxycyzdyctzzfdxn> has joined #fluid-work
2019-07-04T15:57:50  <Bosmon> cindyli - but actually, can the app send logins through the pspChannel?
2019-07-04T15:58:10  <Bosmon> Perhaps the direct function binding is a better route, and would lead to less special-cased code in our own infrastructure
2019-07-04T16:08:29  <cindyli> right, cannot do it thru psp channel
2019-07-04T16:10:55  <cindyli> Bosmon: so the approach is to have the app to call LifecycleManager.replayEnvironmentalLogin() directly? gpii-app is calling performLogin & performLogout anyway - https://github.com/GPII/gpii-app/blob/master/src/main/app.js#L534
2019-07-04T16:11:20  <Bosmon> cindyli - I think that is best, yes
2019-07-04T16:11:24  <cindyli> great
2019-07-04T16:11:33  <Bosmon> We should give up on the last shreds of the illusion that the app is a "thin client" : P
2019-07-04T16:12:01  <Bosmon> After all, we took care to inject the app's component right in amongst the flowManager exactly so it can get easy access to it
2019-07-04T16:12:39  <cindyli> exactly
2019-07-04T16:13:02  *** clown <clown!clown@nat/ocadu/x-mlothufadguscodo> has joined #fluid-work
2019-07-04T16:47:05  *** colinclark <colinclark!~colinclar@205.211.168.102> has joined #fluid-work
2019-07-04T16:57:21  *** jhernandez <jhernandez!~jhernande@2a02:a03f:3e5a:900:d9e0:6594:11c4:1e82> has quit IRC (Quit: jhernandez)
2019-07-04T16:59:56  *** michelled <michelled!Adium@nat/ocadu/x-dxycyzdyctzzfdxn> has quit IRC (Quit: Leaving.)
2019-07-04T17:22:13  *** michelled <michelled!~Adium@205.211.168.104> has joined #fluid-work
2019-07-04T17:22:24  *** jhung <jhung!~jhung@CPE54a0505a5e09-CMa84e3f431590.cpe.net.cable.rogers.com> has joined #fluid-work
2019-07-04T17:36:40  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-07-04T17:59:09  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-07-04T18:11:31  *** clown <clown!clown@nat/ocadu/x-mlothufadguscodo> has quit IRC (Ping timeout: 268 seconds)
2019-07-04T18:12:35  *** crystalchan <crystalchan!Adium@nat/ocadu/x-kcrzomvkxqcsynuq> has joined #fluid-work
2019-07-04T18:13:12  *** kendraf <kendraf!Adium@nat/ocadu/x-fjtzipvlbayevfzg> has joined #fluid-work
2019-07-04T18:17:10  *** crystalchan <crystalchan!Adium@nat/ocadu/x-kcrzomvkxqcsynuq> has left #fluid-work
2019-07-04T18:27:34  *** kendraf <kendraf!Adium@nat/ocadu/x-fjtzipvlbayevfzg> has left #fluid-work
2019-07-04T18:39:31  <Bosmon> cindyli....... how can you be done already? : P
2019-07-04T18:41:35  <cindyli> it's magic :)
2019-07-04T18:41:52  <Bosmon> cindyli - sounds like you are starting to take after stegru : P
2019-07-04T18:42:29  <stegru> I'd be deeply offended by that, cindyli
2019-07-04T18:44:29  <cindyli> haha
2019-07-04T19:02:14  *** kendraf <kendraf!Adium@nat/ocadu/x-fjtzipvlbayevfzg> has joined #fluid-work
2019-07-04T19:15:29  *** clown <clown!clown@nat/ocadu/x-fjnhebfjihyaewnb> has joined #fluid-work
2019-07-04T19:51:43  <cindyli> Bosmon: regarding this review comment - https://github.com/GPII/universal/pull/795#discussion_r300482882, were you thinking to restore the system to session.model.originalSettings when the active GPII key is the last environmental logon key? however, this snapshot is not usable because every setting change requested via psp channel will update this snapshot - https://github.com/GPII/universal/blob/master/gpii/node_modules/lifecycleMa
2019-07-04T19:51:43  <cindyli> nager/src/LifecycleManager.js#L712
2019-07-04T19:54:36  <Bosmon> cindyli - it updates the snapshot, but all the same the original setting value is stored
2019-07-04T19:55:46  <cindyli> checking…
2019-07-04T19:56:55  <Bosmon> cindyli - but I guess this snapshot will still be inaccurate since the user may request a "save" action
2019-07-04T19:57:06  <Bosmon> I think actually this comment at line 515 may be inaccurate now
2019-07-04T19:58:43  <Bosmon> Well, I think, in practice, maybe it is not inaccurate, but Bern might think it is inaccurate : P
2019-07-04T19:58:54  <Bosmon> Bern told me that he believes that the system does not autoSave
2019-07-04T19:59:17  <Bosmon> But I see that we have this: https://github.com/GPII/universal/blob/master/gpii/node_modules/flowManager/src/FlowManager.js#L256
2019-07-04T19:59:28  <Bosmon> In any case, the LifecycleManager cannot in general know when settings are saved to the cloud
2019-07-04T20:00:14  <Bosmon> Oh, I see
2019-07-04T20:00:20  <Bosmon> We've overridden it with a no-op
2019-07-04T20:00:21  <Bosmon> https://github.com/GPII/universal/blob/master/gpii/node_modules/flowManager/src/FlowManager.js#L268
2019-07-04T20:00:22  <Bosmon> This is crazy
2019-07-04T20:02:11  <Bosmon> And it seems that I myself approved this during the review : P
2019-07-04T20:02:12  <Bosmon> https://github.com/GPII/universal/pull/617#discussion_r200648156
2019-07-04T20:02:24  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-nyoygbyxxnmoykqb> has quit IRC (Quit: Leaving.)
2019-07-04T20:02:51  <Bosmon> So how on earth do settings ever get saved??
2019-07-04T20:04:13  <cindyli> when "pspChannel.model.saveButtonClickCount" is changed - https://github.com/GPII/universal/blob/master/gpii/node_modules/flowManager/src/PSPChannel.js#L42-L47
2019-07-04T20:05:47  <Bosmon> cindyli - to start with i) that's nuts, and ii) all that function does is call flowManager.savePreferences
2019-07-04T20:05:51  <Bosmon> Which we just established does nothing
2019-07-04T20:06:25  <Bosmon> Because all it does is call setSettings which is a noop
2019-07-04T20:06:43  <Bosmon> How on earth do user preferences ever get saved to the cloud!!
2019-07-04T20:08:27  <Bosmon> Ah, "gpii.flowManager.untrusted" overrides it
2019-07-04T20:08:50  <Bosmon> But surely that's the wrong place to override it, surely any local flowManager should save preferences in just the same way
2019-07-04T20:09:04  <cindyli> https://github.com/GPII/universal/blob/master/gpii/node_modules/flowManager/src/UntrustedFlowManager.js#L46
2019-07-04T20:09:39  <Bosmon> Yes, but why is all this material here in the UntrustedFLowManager
2019-07-04T20:09:51  <Bosmon> I can't see any reason it doesn't just go in flowManager.local
2019-07-04T20:10:17  <cindyli> not really, the trusted local flow manager doesn't go thru the settingsStore that's solely defined for the untrusted flow manager
2019-07-04T20:10:35  <Bosmon> But why doesn't every local flowManager just get a settingsStore?
2019-07-04T20:12:56  <cindyli> the trusted local flow manager has been far behind. at the moment it can only get and apply settings i believe. let me double check
2019-07-04T20:13:40  <Bosmon> Well, we don't actually have any trusted local flowManager at all, right?
2019-07-04T20:15:14  <Bosmon> I may be misunderstanding something fundamental, but I can't see any reason why the whole contents of "gpii.flowManager.untrusted" can't go into gpii.flowManager.local
2019-07-04T20:15:27  <cindyli> we do, that's why we have gpii.config.development.manualTesting.json5
2019-07-04T20:15:35  <Bosmon> Except for the stateChangeHandler bit
2019-07-04T20:16:12  <cindyli> also most integration tests have 2 versions for trusted and untrusted configs
2019-07-04T20:16:37  <Bosmon> But I don't see any trusted configs....
2019-07-04T20:17:05  <cindyli> "stateChangeHandler" you mentioned is the main difference
2019-07-04T20:17:08  <Bosmon> yes
2019-07-04T20:17:13  <Bosmon> The stateChangeHandler bit makes sense
2019-07-04T20:17:18  <Bosmon> Since that relates to where matchMaking happens
2019-07-04T20:17:47  <Bosmon> But all the rest doesn't make sense to me - every kind of flowManager will have to be able to save preferences somehow, and it would naturally do this through a "settingsDataSource"
2019-07-04T20:18:48  <Bosmon> Anyway ......
2019-07-04T20:19:01  <Bosmon> it appears that Bern is wrong and that the system does autosave preferences to the cloud on every update by the user
2019-07-04T20:19:05  <Bosmon> Doesn't this seem to be true?
2019-07-04T20:20:18  <Bosmon> ah wait!
2019-07-04T20:20:34  <Bosmon> There is even more stuff - "filterPrefsByAutoSave"
2019-07-04T20:20:35  <cindyli> no
2019-07-04T20:21:16  <cindyli> i believe it only saves when "pspChannel.model.saveButtonClickCount" is updated
2019-07-04T20:21:23  <Bosmon> Which I guess, in practice, filters out ALL the preferences
2019-07-04T20:21:48  <cindyli> what do you mean "filters out ALL the preferences"
2019-07-04T20:21:54  <Bosmon> https://github.com/GPII/universal/blob/master/gpii/node_modules/lifecycleManager/src/LifecycleManagerSession.js#L67
2019-07-04T20:21:55  <Bosmon> Look at this
2019-07-04T20:22:09  <Bosmon> Noone, of course, ever defines any metadata in their preferences that looks like this
2019-07-04T20:22:31  <cindyli> exactly
2019-07-04T20:23:02  <Bosmon> So in practice this "preferencesUserUpdated" event never fires
2019-07-04T20:23:05  <cindyli> since this metadata is not defined for any keys or prefs sets, auto save cannot kick in
2019-07-04T20:23:21  <Bosmon> This is all extremely confusing and nuts
2019-07-04T20:23:34  <Bosmon> Many of these methods are very badly named
2019-07-04T20:23:44  <Bosmon> We have a setSettings method which by default does nothing
2019-07-04T20:23:52  <Bosmon> And then we have a "preferencesUserUpdated" event which never fires
2019-07-04T20:25:07  <Bosmon> Anyway........
2019-07-04T20:25:09  <cindyli> well, if "autoSave" metadata is defined, "preferencesUserUpdated" will be fired
2019-07-04T20:25:21  <Bosmon> Yes, but that's not what the event name says!
2019-07-04T20:25:26  <cindyli> but i agree this connection is not clear
2019-07-04T20:25:34  <Bosmon> An event named "preferencesUserUpdated" should, notionally, fire whenever the user updates their preferences
2019-07-04T20:25:55  <cindyli> autosave metadata is introduced after the implemention of auto save
2019-07-04T20:25:57  <Bosmon> If this is not what the event does, it should be renamed something such as "onAutoSaveRequired"
2019-07-04T20:26:11  <cindyli> the auto save was initially created to just auto save, without looking at any metadata
2019-07-04T20:26:18  <Bosmon> Yes
2019-07-04T20:26:35  <Bosmon> This is how systems gradually evolve to be impossible to understand : P
2019-07-04T20:26:40  <cindyli> agree, the name should be adjusted when autosave metadata comes into the play
2019-07-04T20:27:01  <Bosmon> In any case, it seems that was is required to implement our feature spec fully is a new method on the flowManager
2019-07-04T20:27:14  <Bosmon> Which operates the SettingsDataSource to reread the settings, and then apply them into the LifecycleManager
2019-07-04T20:27:25  <Bosmon> But we have the silly situation that it might not have a SettingsDataSource
2019-07-04T20:27:40  <Bosmon> So I suggest we take this opportunity to move almost all of the definitions up from flowManager.untrusted
2019-07-04T20:27:48  <cindyli> the trusted flow manger reads directly from the prefs server
2019-07-04T20:28:00  <cindyli> it doesn't go thru flow manager APIs
2019-07-04T20:28:18  <Bosmon> Can you find me where it does that .......
2019-07-04T20:28:20  <cindyli> that's why the trusted version has no way to save settings
2019-07-04T20:29:17  *** michelled <michelled!~Adium@205.211.168.104> has quit IRC (Quit: Leaving.)
2019-07-04T20:29:19  <cindyli> here it is: 1. the special state change handler for trusted - https://github.com/GPII/universal/blob/master/gpii/node_modules/lifecycleManager/src/UserLogonStateChange.js#L230
2019-07-04T20:30:41  <cindyli> if you dig into "gpii.flowManager.matchMaking", https://github.com/GPII/universal/blob/master/gpii/node_modules/flowManager/src/MatchMaking.js#L183
2019-07-04T20:30:41  <Bosmon> Yes, I just got there : P
2019-07-04T20:31:03  <cindyli> https://github.com/GPII/universal/blob/master/gpii/node_modules/flowManager/src/MatchMaking.js#L138-L141
2019-07-04T20:31:07  <Bosmon> OK, this request expects there to be a thing called "prefsServerDataSource"
2019-07-04T20:31:17  <cindyli> right
2019-07-04T20:31:56  *** michelled <michelled!~Adium@205.211.168.104> has joined #fluid-work
2019-07-04T20:32:15  <Bosmon> But there never is!
2019-07-04T20:32:34  <Bosmon> The only variant of FlowManager that defines this is "gpii.flowManager.cloudBased"
2019-07-04T20:33:04  <cindyli> ya, this cloudBased is part of trusted flow manager if you look at the config file
2019-07-04T20:33:10  <Bosmon> There is no local variety of flowManager that actually has a prefsServerDataSource
2019-07-04T20:33:14  <Bosmon> This is also, completely nuts
2019-07-04T20:33:50  <cindyli> lol
2019-07-04T20:36:03  <cindyli> anyway, back to the question of whether i can use session.model.originalSettings to apply environmental re-logon, more debug shows this structure does not contain the values of the initial key-in, it actually only for restoring the system back to what it was before the key in
2019-07-04T20:36:09  <Bosmon> cindyli - right
2019-07-04T20:36:35  <Bosmon> This is why we have the requirement to actually read from the server from the FlowManager, as I was starting to say above...
2019-07-04T20:36:59  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-cgcjhmltlvtbjjkb> has joined #fluid-work
2019-07-04T20:37:21  <cindyli> ok. what i found is we can simply do a performLogin of the same key, it will do logout -> login again
2019-07-04T20:37:54  <cindyli> simple and clean. no worry about any snapshot :)
2019-07-04T20:38:45  <Bosmon> cindyli - yes, this was one of my suggestions on the ticket
2019-07-04T20:38:50  <cindyli> yes
2019-07-04T20:38:59  <cindyli> i vote for it ;)
2019-07-04T20:39:05  <Bosmon> I was just concerned that this might cause some undesirable UI state changes, but it is probably the best thing to do for now
2019-07-04T20:39:29  <Bosmon> cindyli sure, I support your vote : P
2019-07-04T20:40:00  <cindyli> YAY!
2019-07-04T20:41:08  <Bosmon> In the meantime I've written up https://issues.gpii.net/browse/GPII-4012 : P
2019-07-04T20:43:14  <cindyli> ok. the 2nd point is the easiest to fix. the 1st one needs some thinking
2019-07-04T20:44:30  *** jhung <jhung!~jhung@CPE54a0505a5e09-CMa84e3f431590.cpe.net.cable.rogers.com> has quit IRC (Quit: Leaving)
2019-07-04T20:57:23  *** colinclark <colinclark!~colinclar@205.211.168.102> has quit IRC (Quit: colinclark)
2019-07-04T20:59:19  *** kendraf <kendraf!Adium@nat/ocadu/x-fjtzipvlbayevfzg> has left #fluid-work
2019-07-04T21:05:27  *** simonjb <simonjb!~simonjb@205.211.168.104> has quit IRC ()
2019-07-04T21:09:04  *** clown <clown!clown@nat/ocadu/x-fjnhebfjihyaewnb> has quit IRC (Quit: Leaving.)
2019-07-04T21:12:12  *** cindyli <cindyli!~Adium@198.52.178.28> has quit IRC (Quit: Leaving.)
2019-07-04T21:21:01  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-07-04T21:29:44  *** michelled <michelled!~Adium@205.211.168.104> has quit IRC (Quit: Leaving.)
2019-07-04T21:29:53  *** michelled <michelled!Adium@nat/ocadu/x-oaduvptvlivqguea> has joined #fluid-work
2019-07-04T21:30:08  *** michelled <michelled!Adium@nat/ocadu/x-oaduvptvlivqguea> has quit IRC (Client Quit)
2019-07-04T21:30:39  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-07-04T21:41:53  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-07-04T21:42:59  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has joined #fluid-work
2019-07-04T22:14:49  *** danayo_ <danayo_!~danayo@S0106f81d0f5cda43.vc.shawcable.net> has quit IRC (Quit: danayo_)
2019-07-04T22:14:54  *** cherylhjli <cherylhjli!Adium@nat/ocadu/x-cgcjhmltlvtbjjkb> has quit IRC (Quit: Leaving.)
2019-07-04T23:59:24  *** alanharnum <alanharnum!uid363993@gateway/web/irccloud.com/x-qxxzxwkpnpnqrbve> has quit IRC (Quit: Connection closed for inactivity)

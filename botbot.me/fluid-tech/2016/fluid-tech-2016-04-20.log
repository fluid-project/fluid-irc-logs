b'2016-04-20T00:40:01 * kasparnet joined the channel
2016-04-20T00:45:37 * kasparnet has quit
2016-04-20T04:42:54 * kasparnet joined the channel
2016-04-20T04:47:25 * kasparnet has quit
2016-04-20T06:54:44 * kasparnet joined the channel
2016-04-20T07:13:39 * the-t-in-rtf joined the channel
2016-04-20T07:18:16 * kasparnet has quit
2016-04-20T08:09:57 * the-t-in-rtf has quit
2016-04-20T08:10:19 * the-t-in-rtf joined the channel
2016-04-20T08:11:10 * the-t-in-rtf has quit
2016-04-20T08:11:30 * the-t-in-rtf joined the channel
2016-04-20T10:16:46 <the-t-in-rtf> If anyone is interested in adding CI to their local repos (for example, to test a branch in progress before submitting a PR), you can easily do it with Travis:
2016-04-20T10:16:47 <the-t-in-rtf> https://travis-ci.org/the-t-in-rtf/
2016-04-20T10:17:49 <the-t-in-rtf> You have to create an account and give Travis permission to see your repos.
2016-04-20T10:18:07 <the-t-in-rtf> Then you just add a file like the following to your repo and push it up: https://github.com/the-t-in-rtf/gpii-express/blob/GPII-1682/.travis.yml
2016-04-20T10:18:24 <the-t-in-rtf> Assuming that npm install && npm test would be enough to run your tests, it\'ll "just work" from there.
2016-04-20T10:18:42 <the-t-in-rtf> If you look at my example, you have to click into the report, as I only have tests in the branch at the moment.
2016-04-20T10:19:07 <the-t-in-rtf> sorry, I mean, I only have test builds running against the branches because the .travis.yml file hasn\'t been merged into my master.
2016-04-20T10:19:42 <the-t-in-rtf> IMO our CI integration should be as simple as this, it is trivial to get this working across a range of repos.
2016-04-20T11:22:31 <the-t-in-rtf> @Bosmon (or anyone, really):  I\'ve  been defining all of my request components in my IoC tests as part of my caseholder, just because that\'s how I learned to do it.
2016-04-20T11:22:47 <the-t-in-rtf> I was reading tests the other day that had components in an individual test.
2016-04-20T11:22:52 <the-t-in-rtf> I was wondering if either approach was preferred.
2016-04-20T11:26:10 <Bosmon> the-t-in-rtf - the intention was that the components under test should be reusable from multiple caseholders and defined separately
2016-04-20T11:26:25 <Bosmon> But in practice, people have rarely set up test fixtures that way
2016-04-20T11:26:43 <Bosmon> In that in most cases the components under test are highly specific to the test in question
2016-04-20T11:27:08 <Bosmon> Also, in practice, there are some limitations in the way that IoC references resolve which push you towards defining components in the caseholder too
2016-04-20T11:27:59 <Bosmon> However, the intention was that they form part of the environment instead, as you can see in the example set up in the docs: http://docs.fluidproject.org/infusion/development/IoCTestingFramework.html#simple-example
2016-04-20T11:33:15 <the-t-in-rtf> Great, thanks.  I may try it in individual tests to see if I can manage it, it seems more readable to have the context next to the test.
2016-04-20T11:33:33 <the-t-in-rtf> This is for requests, which are typically only used in a single test sequence.
2016-04-20T11:49:55 <Bosmon> The issue is (as you are probably well familiar with now), in general we can only use the "single context" form of IoC references in most places
2016-04-20T11:50:15 <Bosmon> Which means that putting the component under test in a different hierarchy than the test cases often makes important parts of it inaccessible
2016-04-20T11:50:29 <Bosmon> All this, naturally, will be resolved in the upcoming BIG REWRITE.....
2016-04-20T12:01:11 * gtirloni joined the channel
2016-04-20T12:15:15 * cindyli joined the channel
2016-04-20T12:51:23 * michelled joined the channel
2016-04-20T12:51:41 * kasparnet joined the channel
2016-04-20T13:08:40 * Jess__ joined the channel
2016-04-20T13:14:27 * ewbjr has quit
2016-04-20T13:14:56 * kasparnet has quit
2016-04-20T13:37:12 <Bosmon> Thanks so much for the merge, cindyli :)
2016-04-20T13:37:28 <cindyli> no problem
2016-04-20T13:37:49 <Bosmon> There\'s another one for you to take a look at at some point, this one is a bit meatier: https://github.com/fluid-project/infusion/pull/703
2016-04-20T13:39:10 <cindyli> ok. will do
2016-04-20T13:41:11 * the-t-in-rtf has quit
2016-04-20T13:45:40 * alanharnum joined the channel
2016-04-20T13:59:39 * the-t-in-rtf joined the channel
2016-04-20T14:07:26 <Bosmon> cindyli - there\'s a matching docs pull at https://github.com/fluid-project/infusion-docs/pull/84
2016-04-20T14:07:44 <cindyli> got it. thanks, Bosmon
2016-04-20T14:08:13 <Bosmon> cindyli - I would like to merge https://github.com/cindyli/gpii-payloads/pull/1 but I don\'t see where I can merge it to
2016-04-20T14:08:21 <Bosmon> It seems to be issued against your own repository?
2016-04-20T14:09:12 <cindyli> yes, Bosmon. i\'m thinking of these steps: u leave a comment of "ready to be merged". i will merged and then figure out how to transfer the ownership to "gpii" repo
2016-04-20T14:09:44 <cindyli> i may not have previledge to transfer the ownership tho
2016-04-20T14:09:54 <Bosmon> ok
2016-04-20T14:11:18 <Bosmon> cindyli - yes, I think it is not possible, from reading this page
2016-04-20T14:11:25 <Bosmon> https://help.github.com/articles/transferring-a-repository/
2016-04-20T14:11:44 <Bosmon> I suggest what we do is I create a fresh gpii-payloads repository in the GPII org and you rebase your pull request against it
2016-04-20T14:14:09 <cindyli> sounds good, Bosmon. let me try if i can create the gpii/gpii-payloads repo. also need to figure out how to rebase the pull request :)
2016-04-20T14:14:38 <Bosmon> cindyli - ok, here it is - https://github.com/GPII/gpii-payloads
2016-04-20T14:14:50 <cindyli> cool. thanks
2016-04-20T14:14:54 <Bosmon> All you need to do is git remote rm origin on your repo and then add this instead
2016-04-20T14:15:27 <Bosmon> And then readd your own repo under another name
2016-04-20T14:16:11 <Bosmon> Oh yes, you\'ll need to delete your remote repo and then clone from this one
2016-04-20T14:16:17 <Bosmon> And then readd that one afterwards
2016-04-20T14:19:29 * the-t-in-rtf has quit
2016-04-20T14:20:11 * clown joined the channel
2016-04-20T14:29:38 * the-t-in-rtf joined the channel
2016-04-20T14:30:15 <cindyli> Bosmon: my pull request was issued against my original remote repo, if i delete it and re-clone from the new one, would my old pull request still available? if not, all comments would be lost
2016-04-20T14:30:46 <cindyli> i\'m thinking to merged the new gpii repo into my original repo, then rebase the pull request
2016-04-20T14:40:52 * simonjb joined the channel
2016-04-20T14:42:35 <cindyli> Bosmon: i added GPII/gpii-payloads as the "upstream", merged the diff into the "origin" that is cindyli/gpii-payloads, and am following the 2nd way in this article http://juanitofatas.com/2015/02/22/rebase-pull-request/ to rebase the pull request
2016-04-20T14:42:52 <cindyli> i\'m not sure its last command - git push your-forked-remote feature/your-feature-branch
2016-04-20T14:43:04 <cindyli> which seems in my case would be
2016-04-20T14:43:15 <cindyli> git push upstream origin/GPII-1646
2016-04-20T14:43:42 <cindyli> once i do that, i think my branch will be merged into the GPII/gpii-payloads instead of rebasing the pull request
2016-04-20T14:45:21 <cindyli> trying to use "GPII/gpii-payloads" as the "origin" instead of "upstream"
2016-04-20T14:49:45 * gtirloni joined the channel
2016-04-20T14:50:01 * alanharnum joined the channel
2016-04-20T15:07:39 <Bosmon> cindyli - I think you need to destroy your remote repo and regenerate it
2016-04-20T15:07:47 <Bosmon> Otherwise I imagine github will not recognise that the pull request is realted
2016-04-20T15:07:49 <Bosmon> relate
2016-04-20T15:07:51 <Bosmon> related
2016-04-20T15:08:00 <cindyli> ok
2016-04-20T15:08:09 <cindyli> trying
2016-04-20T15:08:22 * the-t-in-rtf has quit
2016-04-20T15:15:43 * the-t-in-rtf joined the channel
2016-04-20T15:16:32 <cindyli> Bosmon: seems the old pull request was lost. i re-issued a pull request against the new repo - https://github.com/GPII/gpii-payloads/pull/1
2016-04-20T15:16:44 <Bosmon> cool
2016-04-20T15:35:38 * the-t-in-rtf has quit
2016-04-20T15:52:26 * the-t-in-rtf joined the channel
2016-04-20T16:04:01 * alanharn_ joined the channel
2016-04-20T16:32:18 <the-t-in-rtf> I didn\'t mention it in the meeting, but I figured out how to get atom electron browser working in Travis CI.
2016-04-20T16:32:39 <the-t-in-rtf> https://github.com/juliangruber/electron-stream#travis
2016-04-20T16:33:03 <the-t-in-rtf> It\'s relevant to nearly any linux-based build environment, you need to set up a virtual frame buffer, see above.
2016-04-20T16:37:06 * Jess__ joined the channel
2016-04-20T16:39:27 * cindyli joined the channel
2016-04-20T16:42:11 <avtar> the-t-in-rtf: not sure if this would reduce the amount of work for you but the gpii/linux repo uses a fedora vm that provides an xorg environment
2016-04-20T16:48:51 * the-t-in-rtf has quit
2016-04-20T16:59:36 * alanharnum joined the channel
2016-04-20T17:04:27 * alanharnum joined the channel
2016-04-20T17:07:07 * jessm joined the channel
2016-04-20T17:16:12 * Jess__ joined the channel
2016-04-20T17:18:48 * cindyli joined the channel
2016-04-20T17:26:12 * simonjb joined the channel
2016-04-20T17:32:17 <Bosmon> cindyli - thanks for the pull - I committed it after a few more grammar tweaks
2016-04-20T17:32:22 <Bosmon> This is a hugely useful repo to have
2016-04-20T17:32:55 <cindyli> yay! thanks for spotting those grammar mistakes :)
2016-04-20T17:46:45 <cindyli> simonjb: the current GPII hybrid deployment deploys the flow manager and the auth server in one single node instance. I was looking at the code of "gpii.flowManager.cloudBased.oauth2" compnent as well a few places where the auth server communicates with the flow manager and the prefs server, it seems there\'s not much code change needed in order to deploy the flow manager and the auth server as separate node instances, is that correct? did I
2016-04-20T17:48:13 <cindyli> it seems all we need to do is to split this grade configuration and construct each as its own node instance - https://github.com/amb26/universal/blob/GPII-1318/gpii/node_modules/flowManager/configs/gpii.flowManager.cloudBased.config.development.json#L7
2016-04-20T17:53:54 <simonjb> yes, cindyli, I think that you are correct; the main integration point is the data store
2016-04-20T17:54:14 <simonjb> such as https://github.com/amb26/universal/blob/GPII-1318/gpii/node_modules/flowManager/src/CloudBasedFlowManager.js#L200
2016-04-20T17:54:26 <simonjb> and the retrieval of privacy settings for filtering
2016-04-20T17:57:27 <cindyli> thanks, simonjb. is "the main integration point" mean the integration of the auth server with other GPII parts?
2016-04-20T17:57:34 <cindyli> does*
2016-04-20T17:58:22 <simonjb> sorry, yes, I was meaning integration of auth server and cloud based flow manager
2016-04-20T17:58:35 <cindyli> got it. thanks, simonjb
2016-04-20T18:28:21 * simonjb has quit
2016-04-20T18:35:51 * alanharnum joined the channel
2016-04-20T18:36:35 * alanharnum joined the channel
2016-04-20T18:36:48 * alanharn_ joined the channel
2016-04-20T18:40:43 * clown joined the channel
2016-04-20T18:44:47 * cindyli joined the channel
2016-04-20T18:47:43 * Bosmon2 joined the channel
2016-04-20T19:01:00 * the-t-in-rtf joined the channel
2016-04-20T19:08:49 <the-t-in-rtf> @avtar, just saw that.  It was three lines in a config and the first hit on Google, it was trivial to get it working.
2016-04-20T19:09:12 <the-t-in-rtf> But I am only using this temporarily, I know that I need to loop in with the work on the QI infrastructure.
2016-04-20T19:09:56 <the-t-in-rtf> If "dogfooding" is working with the things you use, I consider using Travis "catfooding", which is working with similar things other people make to give yourself a basis of comparison.
2016-04-20T19:10:42 <the-t-in-rtf> I think we can learn a lot from their example, a single root-level checked-in file with clear conventions is really an easy way to set things up.
2016-04-20T19:21:08 <avtar> the-t-in-rtf: totally agree with catfooding
2016-04-20T19:22:28 <the-t-in-rtf> Anyway, we should fake food poisoning and sneak off for a few hours during the Toronto summit.
2016-04-20T19:22:46 <the-t-in-rtf> I\'ll have a lot more time (hopefully) in July and would love to get every package I have set up in the QI infrastructure.
2016-04-20T19:23:12 <avtar> that sounds good to me
2016-04-20T19:23:39 <avtar> i would like to put in work in the future that has the qi move towards using a travis-like config
2016-04-20T19:33:25 <the-t-in-rtf> One idea would be to have a file that is basically an "options" block, that fits both the travis model and ours, and has lots of options for using JSON Schema validation.
2016-04-20T19:35:37 <avtar> ah interesting
2016-04-20T19:37:18 <avtar> i\'m looking forward to food poisoning :P
2016-04-20T19:44:54 * alanharnum joined the channel
2016-04-20T19:47:00 <Bosmon> the-t-in-rtf - another possibility is to simply stuff it in a custom-named block within package.json
2016-04-20T19:47:13 <Bosmon> We\'ve often kicked such ideas around for our "future modules" system
2016-04-20T19:49:38 <the-t-in-rtf> @bosmon, sounds fine to me, although it makes the validation a bit funnier, as you\'d have to either ignore the bits that are normal for a package.json file, or have a schema that accounts for that and adds our stuff.
2016-04-20T19:51:54 * clown joined the channel
2016-04-20T20:16:14 <the-t-in-rtf> Interesting, Travis has Phantom, Chromium, and Firefox on their stock image (running the first tests that use "testem" now)
2016-04-20T20:24:25 * alanharnum joined the channel
2016-04-20T20:50:18 * the-t-in-rtf has quit
2016-04-20T20:56:07 * michelled joined the channel
2016-04-20T21:00:55 * Jess__ joined the channel
2016-04-20T21:08:44 * alanharnum joined the channel
2016-04-20T21:13:22 * kasparnet joined the channel
2016-04-20T21:15:08 * Jess__ has quit
2016-04-20T21:53:57 * kasparnet has quit
2016-04-20T23:05:11 * alanharnum joined the channel
'


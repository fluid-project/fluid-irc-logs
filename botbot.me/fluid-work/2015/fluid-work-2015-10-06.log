b'2015-10-06T22:23:33 <Bosmon> Which sadly is going to happen quite often in the next few years
2015-10-06T22:23:44 <Bosmon> And we will have no way of signalling the severity of the change
2015-10-06T22:23:47 <Bosmon> But I guess that\'s fine
2015-10-06T22:23:58 <colinclark> It\'s not great, you\'re right
2015-10-06T22:24:00 <Bosmon> SOme of the changes will, for example, change the meaning of just one configuration option in some grade
2015-10-06T22:24:07 <Bosmon> And some of them will change the structure of absolutely EVERYTHING
2015-10-06T22:24:17 <colinclark> yes
2015-10-06T22:24:23 <colinclark> those will be those "key releases"
2015-10-06T22:24:27 <Bosmon> ok
2015-10-06T22:24:54 <colinclark> and we identify versions that are something like LTS versions
2015-10-06T22:25:00 <Bosmon> ok
2015-10-06T22:25:01 <colinclark> though I can\'t imagine that we want LTS per se
2015-10-06T22:25:21 <Bosmon> Yes well, "use is support" works fine
2015-10-06T22:25:30 <Bosmon> THe reason we believed 1.4 was significant was that it was deployed in CSpace
2015-10-06T22:25:37 <colinclark> Exactly
2015-10-06T22:25:44 <colinclark> it became a point where use was high
2015-10-06T22:25:51 <colinclark> and the cost of major instability, also high
2015-10-06T22:26:02 <colinclark> this will happen again in some cases
2015-10-06T22:26:02 <Bosmon> These points can either arise through a pattern of use, or through a pattern of stability
2015-10-06T22:26:06 <Bosmon> Either way, the result is the same
2015-10-06T22:26:31 <colinclark> yes
2015-10-06T22:28:28 <colinclark> An alternative is to shift our version numbers one decimal place to the right
2015-10-06T22:28:36 <Bosmon> Yes
2015-10-06T22:28:41 <colinclark> and bask in the luxury of having never cut 1.0 by semver standards
2015-10-06T22:28:50 <Bosmon> I guess I could buy that
2015-10-06T22:28:56 <colinclark> but that brings us back to the node.js argument at some point
2015-10-06T22:29:03 <Bosmon> Yes
2015-10-06T22:29:15 <Bosmon> Personally I felt that what node.js did was perfectly responsible
2015-10-06T22:29:16 <colinclark> I do have to run
2015-10-06T22:29:23 <colinclark> Bosmon: In some ways I do too
2015-10-06T22:29:32 <Bosmon> There were numerous features of 0.12 even that didn\'t fit it to be rated as a "production" library
2015-10-06T22:29:37 <colinclark> but in other ways, it showed that the community actually helps decide these things
2015-10-06T22:29:41 <Bosmon> Yes
2015-10-06T22:29:54 <colinclark> let\'s sleep on it
2015-10-06T22:29:55 <Bosmon> ok
2015-10-06T22:30:01 <Bosmon> UNTIL THE DAY DAWNING
2015-10-06T22:30:05 <colinclark> thanks dude :)
2015-10-06T22:30:09 <Bosmon> likewise
2015-10-06T22:30:34 * colinclark joined the channel
2015-10-06T22:38:19 * alanharnum joined the channel
2015-10-06T22:38:28 <Bosmon> WAHARNUM :)
2015-10-06T22:55:53 * yzen joined the channel
2015-10-06T22:59:50 * yzen has quit
2015-10-06T23:23:33 * sgithens joined the channel
'

b'2015-10-06T22:03:13 <colinclark> it is a sort of compromise between what I\'m longing for and what Bosmon advocates
2015-10-06T22:03:18 <Bosmon> Say we publish alpha.1 today
2015-10-06T22:03:24 <colinclark> while retaining Justin_o\'s desire to be semver compatible
2015-10-06T22:03:29 <Bosmon> Will we then, after that, publish beta.2 tomorrow?
2015-10-06T22:03:34 <Bosmon> Or publish beta.1 tomorrow
2015-10-06T22:03:38 <colinclark> ah yes
2015-10-06T22:03:44 <colinclark> of course
2015-10-06T22:03:45 <Justin_o> Bosmon: i think the problem is alpha.1 beta.1 alpha?
2015-10-06T22:03:52 <Bosmon> Yes
2015-10-06T22:03:56 <colinclark> okay
2015-10-06T22:03:57 <colinclark> forget that
2015-10-06T22:04:05 <Bosmon> I think, although I like the idea of alphas, I think our previous plan was a bit more workable
2015-10-06T22:04:14 <Justin_o> Bosmon: i agree
2015-10-06T22:04:24 <colinclark> and we won\'t just ditch this idea of long-running betas?
2015-10-06T22:04:30 <colinclark> I have no traction here?
2015-10-06T22:04:32 <Bosmon> We need to be able to PREDICT, I think, what our next version is going to be
2015-10-06T22:04:47 <Bosmon> Well, I\'m trying to think of the traction again
2015-10-06T22:04:51 <Justin_o> it\'s not really possible to 100% predict these things though
2015-10-06T22:04:58 <Justin_o> as we saw with Infusion 1.9 :)
2015-10-06T22:05:19 <Bosmon> Yes sure, but we can "predict them in bounded intervals that require a significant community decision to revise"
2015-10-06T22:05:31 <Bosmon> As opposed to having them change whenever anyone pushes a temporary release : P
2015-10-06T22:05:31 <Justin_o> not sure what that means
2015-10-06T22:06:01 <Bosmon> Well, we had to have a community discussion in order to determine that we were NOT any longer working towards Infusion 1.9
2015-10-06T22:06:21 <Bosmon> Whereas all someone would need to do to ensure that we were no longer working towards beta.1 would be to push alpha.1 : P
2015-10-06T22:06:29 <Justin_o> i guess we had though it was 2.0 actually :)
2015-10-06T22:07:04 <Justin_o> so should we stick with the 2.0.0-beta.1-dev-hash then?
2015-10-06T22:07:11 <Bosmon> I guess, re traction, I still don\'t know what to do with the fact that I am COMPLETELY SURE that there will quite soon be a framework release that breaks API compatibility 100%
2015-10-06T22:07:29 <colinclark> Then it\'s version 3.0.0, and that\'s SUPER OKAY
2015-10-06T22:07:50 <Justin_o> in that case it\'s probably better to call these all alphas until we have stability
2015-10-06T22:07:54 <Justin_o> but i don\'t know if that really matters
2015-10-06T22:07:57 <colinclark> Infusion 47.0.0 will be fine
2015-10-06T22:08:07 <Justin_o> we could do 3.0 but we\'d need to get 2.0 out first :)
2015-10-06T22:08:12 <colinclark> :)
2015-10-06T22:08:48 <colinclark> I think we\'re trying to model something curious
2015-10-06T22:08:53 <colinclark> which is kind of like waves
2015-10-06T22:08:56 <Bosmon> yes
2015-10-06T22:08:59 <colinclark> being a surfer now, this metaphor is great
2015-10-06T22:09:05 <Bosmon> "big waves" are still coming
2015-10-06T22:09:10 <colinclark> when you\'re surfing, it\'s interesting because you have to sit there and wait
2015-10-06T22:09:14 <colinclark> and there are all these waves that you could surf on
2015-10-06T22:09:16 <Bosmon> In that the framework has not yet reached what I could call its "viable point"
2015-10-06T22:09:31 <colinclark> I have systems that argue otherwise
2015-10-06T22:09:37 <colinclark> This is really just an echo of the Node.js debate
2015-10-06T22:09:39 <Bosmon> That is, the point that we would honestly recommend to a 3rd party who wasn\'t working with us daily that it should be used
2015-10-06T22:09:43 <Bosmon> Yes
2015-10-06T22:10:01 <Bosmon> And I guess that trajectory showed that there were several quite divergent models of how to handle that
2015-10-06T22:10:02 <colinclark> I\'d argue that perhaps we need to describe Infusion better
2015-10-06T22:10:12 <colinclark> rather than capture it by endless betas
2015-10-06T22:11:23 <colinclark> I don\'t know
2015-10-06T22:11:28 <colinclark> I\'m trying to think this through clearly
2015-10-06T22:11:37 <colinclark> First, we have quite high quality standards
2015-10-06T22:11:45 <colinclark> Quality is one metric of how you mark a release
2015-10-06T22:11:56 <colinclark> secondly, we tend to need the flexibility to break APIs quite often
2015-10-06T22:11:56 <Bosmon> I guess frameworks quite frequently make 100% API incompatible releases
2015-10-06T22:12:07 <colinclark> Angular.js is a great example
2015-10-06T22:12:10 <colinclark> Node.js for that matter
2015-10-06T22:12:14 <Bosmon> Dojo, QUnit
2015-10-06T22:12:18 <colinclark> and sometimes people get angry, and sometimes they don\'t
2015-10-06T22:12:28 <colinclark> I\'ve been thinking about writing a new Infusion page for the Fluid site
2015-10-06T22:12:35 <colinclark> since Infusion is really badly buried in our new site
2015-10-06T22:12:37 <Bosmon> Well, I always feel that it is a pretty despicable thing to do in what one could call a "production framework"
2015-10-06T22:12:39 <colinclark> in a way I find uncomfortabke
2015-10-06T22:12:44 <Bosmon> Which is why the beta idea has appealed to me for so long
2015-10-06T22:12:52 <Bosmon> But I do see that this isn\'t in fact completely tenable
2015-10-06T22:12:58 <colinclark> Perhaps we need to publish a roadmap
2015-10-06T22:13:08 <colinclark> I used to do these regularly back in the days when we were funded
2015-10-06T22:13:14 <Bosmon> Yes
2015-10-06T22:13:26 <colinclark> And perhaps describe what Infusion is for
2015-10-06T22:13:28 <Bosmon> You even occasionally asked me for them during the days we were not funded : P
2015-10-06T22:13:31 <colinclark> I know I\'m different
2015-10-06T22:13:40 <colinclark> but I have users who are making real music with Flocking
2015-10-06T22:13:45 <colinclark> who are exhibiting installations
2015-10-06T22:13:52 <colinclark> or putting up "interactive albums"
2015-10-06T22:14:05 <colinclark> Infusion is, I believe, profoundly useful today
2015-10-06T22:14:10 <colinclark> significantly well-tested
2015-10-06T22:14:22 <colinclark> it\'s just that it is a certain kind of applied research
2015-10-06T22:14:40 <colinclark> Research in the sense that it\'s genuinely struggling with very, very difficult foundational problems in software development
2015-10-06T22:15:02 <colinclark> Applied in the sense that it needs to be used, grown, and depended on to forward its research agenda
2015-10-06T22:15:14 <colinclark> It\'s not something you should pick up and compare to Angular.js
2015-10-06T22:15:26 <Justin_o> colinclark, Bosmon: sorry to interrupt, i should probably be heading home soon
2015-10-06T22:15:30 <colinclark> yes, you should
2015-10-06T22:15:31 <colinclark> sorry
2015-10-06T22:15:32 <Justin_o> did you want to pick this up again tomorrow
2015-10-06T22:15:34 <colinclark> yes
2015-10-06T22:15:38 <Bosmon> Angular.js is "crossword puzzle-solving"
2015-10-06T22:15:39 <colinclark> we\'ll keep talking here
2015-10-06T22:15:43 <colinclark> Bosmon: yes, exactly
2015-10-06T22:15:48 <Bosmon> In the Kuhnian sense
2015-10-06T22:15:51 <Justin_o> thanks, talk to you later
2015-10-06T22:15:56 <Bosmon> Cheers Justin_o
2015-10-06T22:15:56 <colinclark> Justin_o: Should we unpublish the npm version?
2015-10-06T22:16:00 <colinclark> or just leave it for now?
2015-10-06T22:16:00 <Bosmon> Catch you tomorrow
2015-10-06T22:16:07 <colinclark> it\'s not doing any harm
2015-10-06T22:16:15 <Justin_o> colinclark: good question, i guess we can leave it for now
2015-10-06T22:16:20 <Bosmon> I imagine we should unpublish it, just so it doesn\'t cause puzzlement later
2015-10-06T22:16:20 <colinclark> ok, cool
2015-10-06T22:16:22 <Justin_o> colinclark: if you want you could add owners i guess
2015-10-06T22:16:29 <colinclark> sure
2015-10-06T22:16:31 <colinclark> go ahead and add us
2015-10-06T22:16:38 <Bosmon> And in the meantime we need to "fix" our markdown
2015-10-06T22:16:39 <colinclark> and we can talk through whether to ditch it
2015-10-06T22:16:45 <Justin_o> colinclark: i guess we need the npm usernames though
2015-10-06T22:16:51 <colinclark> Bosmon: Yep, I filed a JIRA
2015-10-06T22:16:59 <colinclark> Justin_o: I\'m colinbdclark, I believe
2015-10-06T22:17:33 <Justin_o> colinclark: you are an owner now
2015-10-06T22:17:45 <Justin_o> i\'m going to sign off, feel free to unpublish or not
2015-10-06T22:17:50 <Justin_o> i\'ll check in with you tomorrow
2015-10-06T22:17:52 <colinclark> thanks man
2015-10-06T22:17:55 <colinclark> sorry to keep you so late
2015-10-06T22:18:01 <colinclark> and thanks for thinking through it with us
2015-10-06T22:18:16 <Justin_o> thanks to you both too :)
2015-10-06T22:18:33 <colinclark> Bosmon: Our system has so many qualities of an exemplary production system
2015-10-06T22:18:47 <colinclark> It\'s just that its rate of change is out of sync in a very curious way
2015-10-06T22:19:07 <colinclark> All this stuff in EC deliverables or NASA spaceships...
2015-10-06T22:19:29 <colinclark> and we sort of suggest that it needs to be three-dimensional
2015-10-06T22:19:29 <Bosmon> Yes - it\'s just that, were we able to live by the values that we imagine that stuff worthy of the name "software" would abide by in the future -
2015-10-06T22:19:36 <colinclark> Code must leave the lab as soon as possible
2015-10-06T22:19:38 <Bosmon> we would be able to guarantee that NOTHING WILL EVER BREAK AGAIN
2015-10-06T22:19:45 <colinclark> so leaving the lab can be a metric of quality or stability
2015-10-06T22:19:54 <Bosmon> But obviously we need to put out npm releases TODAY, and not in that future
2015-10-06T22:20:02 <colinclark> When we get there, it will be Infusion VERSION INFINITY
2015-10-06T22:20:13 <Bosmon> Hopefully not
2015-10-06T22:20:38 <Bosmon> Sadly the copyright fiends axed the audio on this marvellous docudrama: https://www.youtube.com/watch?v=pGmdp0EOGeo
2015-10-06T22:20:55 <colinclark> wow
2015-10-06T22:20:57 <colinclark> muted audio
2015-10-06T22:21:01 <colinclark> Well, it sounds like I have to go the way of Justin_o
2015-10-06T22:21:03 <Bosmon> nasty eh
2015-10-06T22:21:06 <Bosmon> YOu mean, home?
2015-10-06T22:21:09 <colinclark> we\'re meeting the in-laws for dinner
2015-10-06T22:21:14 <Bosmon> ah cool
2015-10-06T22:21:14 <colinclark> rather, outside of home :)
2015-10-06T22:21:26 <colinclark> I wonder if there\'s a way we can follow semver
2015-10-06T22:21:33 <colinclark> and like we\'ve done in practice, highlight "key versions"
2015-10-06T22:21:41 <colinclark> 1.4 was one of them
2015-10-06T22:21:59 <Bosmon> Yes
2015-10-06T22:22:06 <colinclark> I guess maybe we need something like LTS
2015-10-06T22:22:07 <colinclark> but in reverse
2015-10-06T22:22:10 <Bosmon> !
2015-10-06T22:22:17 <colinclark> not necessarily marking that they\'re for long term support
2015-10-06T22:22:21 <colinclark> but for long term use :)
2015-10-06T22:22:27 <colinclark> and where there is use, there is support
2015-10-06T22:22:30 * avtar has quit
2015-10-06T22:22:32 <colinclark> or something along those lines :)
2015-10-06T22:22:32 * sgithens has quit
2015-10-06T22:22:33 <Bosmon> How is that the reverse?
2015-10-06T22:22:52 <colinclark> I don\'t know, maybe it\'s not
2015-10-06T22:23:16 <colinclark> but I guess it suggests that use demands support
2015-10-06T22:23:23 <colinclark> rather than developers defining what will get supported
2015-10-06T22:23:26 <Bosmon> Ok, so if we followed semver, we would just increment our major version whenever we believed we had "made a breaking change"
'

b'2015-10-06T21:41:00 <Justin_o> i think the beta wouldn\'t be there in this case.. it probably should be dev
2015-10-06T21:41:15 <Justin_o> because beta.1 is already the prerelease name
2015-10-06T21:41:27 <Bosmon> I see
2015-10-06T21:41:52 <Justin_o> although it would allow it with the beta there
2015-10-06T21:42:20 <Bosmon> It would be nice if we could actually tell what a release IS, by looking at its name
2015-10-06T21:42:28 <colinclark> it would
2015-10-06T21:42:31 <Bosmon> Rather than having to look up its history in a table, or whatever
2015-10-06T21:42:33 <colinclark> semver clearly makes this very hard
2015-10-06T21:43:16 <Justin_o> we could do 2.0.0-dev-0dee2e6 then
2015-10-06T21:43:28 <Bosmon> I don\'t see how I can tell what that is by looking at it :)
2015-10-06T21:43:41 <colinclark> 2.0.0-beta.1-dev-0dee2e6 :(
2015-10-06T21:43:43 <Justin_o> and then use the dist-tag to set it to "dev"
2015-10-06T21:43:44 <Bosmon> Will that come either before or after 2.0.0-beta.1 .....
2015-10-06T21:43:55 <Bosmon> What colinclark said
2015-10-06T21:43:59 <Justin_o> Bosmon: does it matter :)
2015-10-06T21:43:59 <Bosmon> I know that sgithens will laugh at us
2015-10-06T21:44:15 <Bosmon> Justin_o - are you asking whether it matters whether we can tell whether a release comes before or after another release by looking at it?
2015-10-06T21:44:35 <Justin_o> it\'s a nightly, the commit with a commit hash
2015-10-06T21:44:39 <Justin_o> but i know what you mean
2015-10-06T21:44:49 <Justin_o> anyways, we could do that but it would require another push to master
2015-10-06T21:44:57 <Justin_o> because we just set the version to 2.0.0-dev
2015-10-06T21:45:30 <Bosmon> Justin_o - I don\'t understand what you mean when you say "it would require another push to master"
2015-10-06T21:45:34 <Bosmon> What would require the push, and when?
2015-10-06T21:45:51 <colinclark> the move to your suggested versioning scheme, Bosmon
2015-10-06T21:45:53 <Justin_o> Bosmon: well the version in master is called 2.0.0-dev
2015-10-06T21:46:02 <Bosmon> Is it??
2015-10-06T21:46:04 <colinclark> we reviewed and pushed this, only very recently https://github.com/fluid-project/infusion/blob/master/package.json#L4
2015-10-06T21:46:06 <Justin_o> which we\'d need to change to 2.0.0-beat.1-dev
2015-10-06T21:46:09 <Justin_o> sorry, beta
2015-10-06T21:46:21 <Bosmon> :(
2015-10-06T21:46:26 <Bosmon> I clearly didn\'t pull my weight
2015-10-06T21:46:33 <Justin_o> lol
2015-10-06T21:46:38 <Bosmon> I was told to do something
2015-10-06T21:46:40 <Bosmon> And I didn\'t do it
2015-10-06T21:46:47 <colinclark> It\'s fine
2015-10-06T21:46:52 <Bosmon> Which was to look at this branch after I had finished gassing on about kettle.npm.ver : P
2015-10-06T21:46:59 <colinclark> I was the one who pushed it
2015-10-06T21:47:14 <colinclark> but I had assumed that we were comfortable with semver\'s notion of what a "prerelease version" is
2015-10-06T21:47:23 <Justin_o> colinclark: can you leave a comment on that JIRA and i\'ll just make another pull request
2015-10-06T21:47:37 <Bosmon> I had assumed that what would be pushed would meet our model of "the version which is in master is the version that we are working towards"
2015-10-06T21:47:42 <Justin_o> unfortunately npm isn\'t comfortable with that :(
2015-10-06T21:47:52 <Bosmon> Which bit isn\'t it comfortable with?
2015-10-06T21:48:09 <colinclark> it has no notion of "prerelease versions of prerelease versions"
2015-10-06T21:48:13 <Bosmon> It won\'t buy 2.0.0-beta.1-dev?
2015-10-06T21:48:16 <Justin_o> Bosmon: npm doesn\'t like build metadata in a version number so they strip out +metadata parts
2015-10-06T21:48:19 <colinclark> especially since it seem quite excited to strip off metadata
2015-10-06T21:48:49 <Bosmon> npm doesn\'t like build metadata in a version number......
2015-10-06T21:48:56 <Bosmon> So which bit does it count as the metadata in that version?
2015-10-06T21:49:12 <Bosmon> Everything after 2.0.0?
2015-10-06T21:49:15 <colinclark> no
2015-10-06T21:49:18 <colinclark> everything after -dev
2015-10-06T21:49:28 <colinclark> We can essentially, I think, do one of two things
2015-10-06T21:49:36 <colinclark> 1. Ditch this whole notion of betas
2015-10-06T21:49:45 <colinclark> 2. Use a constantly changing prerelease version
2015-10-06T21:49:56 <colinclark> i.e. 2.0.0-beta.1-dev-<commit hash>
2015-10-06T21:50:15 <colinclark> i belive that ^ will work
2015-10-06T21:50:29 <Bosmon> 2 seems ok to me - but couldn\'t we have an increasing integer or a daystamp rather than a commit hash?
2015-10-06T21:50:29 <colinclark> if being somewhat ambiguous with regards to semver\'s standards
2015-10-06T21:50:38 <colinclark> yes, we could
2015-10-06T21:50:41 <colinclark> we could also do
2015-10-06T21:50:48 <colinclark> 2.0.0-beta.1-dev.1
2015-10-06T21:50:49 <Bosmon> Which bit of npm\'s guts actually manufactured the bit after "dev"?
2015-10-06T21:50:49 <colinclark> I think
2015-10-06T21:50:53 <colinclark> I\'m not certain about those dots
2015-10-06T21:51:01 <Bosmon> Or do we just do it in our script?
2015-10-06T21:51:10 <Justin_o> Bosmon: currently we do it manually :)
2015-10-06T21:51:11 <Bosmon> I\'m sorry to be such a n00b
2015-10-06T21:51:13 <colinclark> Yes, our CI server will have extract it from Git
2015-10-06T21:51:19 <Bosmon> I have never released anything on npm :)
2015-10-06T21:51:21 <colinclark> and in this case, Justin did it by hand
2015-10-06T21:51:25 <Bosmon> The last thing I ever released was in 2008
2015-10-06T21:51:30 <Justin_o> git rev-parse --verify --short HEAD
2015-10-06T21:51:55 <Bosmon> I guess the commit hash is fine
2015-10-06T21:51:56 <colinclark> if we were using an incremented integer, npm would do it for us
2015-10-06T21:52:08 <colinclark> using whatever that command was I found earlier today
2015-10-06T21:52:11 <colinclark> but it really doesn\'t matter
2015-10-06T21:52:16 <Bosmon> We can find those easily enough, and it will also then be easy to clear out "garbage" of old nightlies
2015-10-06T21:52:22 <Bosmon> Although I don\'t know if this is blessed npm practice
2015-10-06T21:52:29 <Bosmon> Is the idea that nightlies just accumulate forever?
2015-10-06T21:52:36 <Justin_o> colinclark: that thing also commits the version number which may or may not be an issue
2015-10-06T21:52:50 <colinclark> I don\'t think it does
2015-10-06T21:52:57 <colinclark> it just gives you the option to do so, via npm scripts
2015-10-06T21:53:11 <colinclark> Bosmon: Yes, accumulate forever
2015-10-06T21:53:17 <Bosmon> colinclark - ok
2015-10-06T21:53:22 <colinclark> this appears to be typical of what npm itself does
2015-10-06T21:53:29 <Bosmon> I guess disk space in npm is infinite at least
2015-10-06T21:53:34 <Bosmon> It\'s not ours after all : P
2015-10-06T21:54:17 <Bosmon> Ok, so it is viable to publish all of our nightlies with versions of the kind <version we are working towards>-dev-<commit hash> ?
2015-10-06T21:55:41 <Justin_o> colinclark: it doesn\'t push but it commits
2015-10-06T21:55:52 <colinclark> ah
2015-10-06T21:55:53 <colinclark> ok
2015-10-06T21:55:54 <colinclark> well, forget that
2015-10-06T21:56:03 <colinclark> I guess I am still more confused than I thought I was
2015-10-06T21:56:09 <colinclark> or I have already forgotten things we\'ve talked about
2015-10-06T21:56:14 <Bosmon> "it doesn\'t push but it commits"
2015-10-06T21:56:22 <Bosmon> I think I\'ve already missed a huge part of this discussion
2015-10-06T21:56:32 <colinclark> yes, it seems you have Bosmon :)
2015-10-06T21:56:41 <colinclark> I guess it was probably about 3 hours ago
2015-10-06T21:56:45 <Justin_o> https://docs.npmjs.com/cli/version
2015-10-06T21:56:45 <Bosmon> ok
2015-10-06T21:56:48 <colinclark> which is fine
2015-10-06T21:56:50 <Bosmon> Let me have a look back
2015-10-06T21:56:56 <colinclark> when I do an "npm view npm versions" I don\'t actually see nightly versions or anything
2015-10-06T21:57:07 <colinclark> and Justin_o, we may have discussed that already
2015-10-06T21:57:17 <colinclark> I see a few alphas and betas
2015-10-06T21:57:30 <colinclark> but how is it that they don\'t have many many versions visible?
2015-10-06T21:58:06 <colinclark> Typescript, which was the example gtirloni gave, does seem to have their dev versions accumulating
2015-10-06T21:58:13 <colinclark> though they seem to push code at a fairly slow rate
2015-10-06T21:58:16 <Bosmon> I think it hasn\'t parsed our markdown because it is not valid markdown
2015-10-06T21:58:20 <colinclark> yes
2015-10-06T21:58:22 <Bosmon> I\'m running into this insanity a lot
2015-10-06T21:58:32 <colinclark> you can see this if you type "npm view typescript versions"
2015-10-06T21:58:32 <Justin_o> npm has version 1.2.8000
2015-10-06T21:58:55 <colinclark> 8000 minor bug fixes :P
2015-10-06T21:59:06 <Bosmon> !?
2015-10-06T21:59:16 <colinclark> I guess they had some quirky release
2015-10-06T21:59:19 <colinclark> or it\'s a mistake
2015-10-06T21:59:22 <colinclark> or something else
2015-10-06T21:59:22 <Justin_o> so typescript is by date
2015-10-06T21:59:29 <colinclark> looks like it
2015-10-06T21:59:50 <Justin_o> i think the .number part is supposed to be incremental so you know the order, but of course commit hashes are anything
2015-10-06T22:00:07 <colinclark> right
2015-10-06T22:00:10 <colinclark> they\'re also useful :)
2015-10-06T22:00:14 <colinclark> funny how that works
2015-10-06T22:00:17 <Justin_o> which is sort of why i asked if it mattered before because you couldn\'t tell by looking which one came first with the commit hash
2015-10-06T22:00:25 <Justin_o> but you could look it up to the exact commit easily
2015-10-06T22:00:46 <Justin_o> or easier anyways
2015-10-06T22:00:57 <Bosmon> Justin_o - I guess I\'m less worried about ordering if it seems we\'ll never be called upon to do any maintenance on them
2015-10-06T22:01:18 <Justin_o> Bosmon: hopefully not, but inevitably we\'ll use them :)
2015-10-06T22:01:26 <Justin_o> as we do with infusion now
2015-10-06T22:01:28 <colinclark> here\'s a crazy idea
2015-10-06T22:01:29 <Bosmon> Yes
2015-10-06T22:01:33 <Justin_o> but i guess it\'s buyer beware
2015-10-06T22:01:34 <colinclark> we don\'t do this :)
2015-10-06T22:01:35 <colinclark> but we do
2015-10-06T22:01:42 <colinclark> 1. We don\'t automatically publish on push
2015-10-06T22:01:51 <colinclark> 2. We do regularly publish "informal releases"
2015-10-06T22:01:59 <colinclark> the "informal" ones, we call alphas
2015-10-06T22:02:06 <colinclark> the tested ones, we call betas
2015-10-06T22:02:18 <Justin_o> colinclark: alphas happen whenever we need something
2015-10-06T22:02:19 <Justin_o> ?
2015-10-06T22:02:35 <Bosmon> Right
2015-10-06T22:02:37 <colinclark> pretty much whenever someone says "hey, let\'s publish this because it\'s useful"
2015-10-06T22:02:41 <Bosmon> And will we name alphas incrementally, or by hash?
2015-10-06T22:02:50 <colinclark> and when reach this rare and magical state of "stability" we publish non-beta versions
2015-10-06T22:02:52 <colinclark> incrementally
2015-10-06T22:02:57 <Bosmon> ok
2015-10-06T22:02:58 <Justin_o> Bosmon: i think we\'d tag it too
2015-10-06T22:03:02 <colinclark> sure
2015-10-06T22:03:12 <Bosmon> And will their numbers be interleaved with the beta versions, or in some wierd separate domain
'

b'2015-10-06T20:06:19 <colinclark> any minute now!
2015-10-06T20:06:42 <colinclark> Justin_o: Have you run tests on branch in Windows?
2015-10-06T20:06:48 <colinclark> I have Edge and IE 11 on this machine
2015-10-06T20:06:54 <Justin_o> colinclark: i haven\'t
2015-10-06T20:07:10 <colinclark> any chance I can get you to run them real quick in Windows FF and Chrome if it\'s easy?
2015-10-06T20:07:15 <colinclark> I\'ll do IE11 and Edge
2015-10-06T20:07:36 <colinclark> if not I can install them
2015-10-06T20:08:12 <Justin_o> colinclark: sure i\'ll see if i have them on this machine
2015-10-06T20:08:57 <simonjb> Bosmon: that modulecounts.com site is wild -- node has 346/day -- PER DAY!
2015-10-06T20:09:53 <colinclark> It\'s just astonishing how fast Safari is in comparison to both FF and Chrome when running our tests
2015-10-06T20:13:34 <Justin_o> safari is really fast
2015-10-06T20:14:27 <colinclark> Justin_o: Do you think version 9 is even faster?
2015-10-06T20:15:35 <Justin_o> i\'m not sure how it compares but i\'m running the latest on my machine
2015-10-06T20:16:26 <colinclark> Justin_o: The self-voicing enactor fails in my IE on Windows 10
2015-10-06T20:16:31 <colinclark> but I\'m pretty sure it\'s been doing this for a while
2015-10-06T20:16:35 <colinclark> so I assume it\'s expected?
2015-10-06T20:17:15 <Justin_o> colinclark: can\'t recall, does it happen on the build site too?
2015-10-06T20:17:32 <colinclark> i\'ll check
2015-10-06T20:19:20 <colinclark> Justin_o: Yes, it does fail on the build site
2015-10-06T20:19:40 <colinclark> This is IE11 on Windows
2015-10-06T20:19:57 <colinclark> it\'s interesting, I assume they\'re not actually supposed to run on IE
2015-10-06T20:19:58 <colinclark> but somehow do
2015-10-06T20:21:24 <Bosmon> simonjb - I\'m sure we\'ll soon be publishing 346 npm modules PER DAY ourselves once we start publishing npm modules that just consist of metadata about other npm modules :)
2015-10-06T20:21:59 <Justin_o> colinclark: it must be passing the feature detection somehow
2015-10-06T20:21:59 <Justin_o> and not working :(
2015-10-06T20:22:05 <colinclark> ok
2015-10-06T20:22:07 <colinclark> I\'ll file a JIRA
2015-10-06T20:22:10 <Bosmon> I imagine that the TTS feature detect just checks for Firefox...
2015-10-06T20:22:21 <colinclark> it\'d be nice to fix
2015-10-06T20:22:41 <simonjb> Bosmon: Could this really be true? "I\'m gathering counts of separate modules, so multiple versions of the same module/package/gem only count once (foo-1.2, foo-1.3 and bar-1.0 would count as 2 total)"
2015-10-06T20:23:12 <Bosmon> simonjb - I could believe that there exists a truly outrageous number of npm modules, yes
2015-10-06T20:23:56 <simonjb> so, I think it means 346 * 7 = 2422 modules are updated per week
2015-10-06T20:24:03 <simonjb> which I guess is feasible
2015-10-06T20:24:04 <colinclark> inbound cat vine, since we\'re having a productive day in the channel: https://twitter.com/EmrgencyKittens/status/651453130144661504
2015-10-06T20:25:13 <colinclark> simonjb: Especially if they\'re updated as part of CI, as Justin_o has proposed for us
2015-10-06T20:25:34 <simonjb> colinclark: yeah, for sure
2015-10-06T20:25:48 <simonjb> I\'m not sure though if the \'only count single version per module\' is for all time or per week
2015-10-06T20:26:20 <Justin_o> colinclark: chrome and ff on windows seem good
2015-10-06T20:26:26 <colinclark> awesome
2015-10-06T20:26:33 <colinclark> I took the opportunity to grab FF, which I was missing
2015-10-06T20:26:40 <colinclark> so my Windows 10 image is complete for testing now
2015-10-06T20:27:31 <Justin_o> :)
2015-10-06T20:28:36 <colinclark> Justin_o: Will the JIRA update itself now that I have pushed your changes?
2015-10-06T20:28:46 <Justin_o> eventually
2015-10-06T20:29:02 <Justin_o> but i\'m not sure how long the delay is.. i think it\'s once per hour or something like that
2015-10-06T20:29:26 <colinclark> ok, so that\'s it :)
2015-10-06T20:29:40 <colinclark> we can publish this now!
2015-10-06T20:29:51 <colinclark> to become Simon\'s 2423rd module this week
2015-10-06T20:30:34 <colinclark> man, this is so exciting
2015-10-06T20:30:43 <colinclark> Justin_o: are you going to do the honours, or would you like me to?
2015-10-06T20:35:58 * colinclark joined the channel
2015-10-06T20:40:16 * michelled joined the channel
2015-10-06T20:43:17 * sepidehshahi has left the channel
2015-10-06T20:43:44 * avtar has quit
2015-10-06T20:43:44 * sgithens has quit
2015-10-06T20:45:14 * clown joined the channel
2015-10-06T20:46:04 * simonjb joined the channel
2015-10-06T20:46:04 * avtar joined the channel
2015-10-06T20:46:04 * sgithens joined the channel
2015-10-06T20:47:12 * anvk has quit
2015-10-06T20:47:56 * the-t-in-rtf joined the channel
2015-10-06T20:48:36 <simonjb> I think it really is 346 new packages per day, and more like 2000 updates per day
2015-10-06T20:49:02 * the-t-in-rtf has quit
2015-10-06T20:49:05 <simonjb> I hadn\'t quite realised the scale of npm packages, wow
2015-10-06T20:52:53 * Nadia has left the channel
2015-10-06T21:16:15 <Justin_o> colinclark: sorry, was talking to avtar  and cindyli
2015-10-06T21:16:36 <colinclark> no worries!
2015-10-06T21:18:59 <Justin_o> colinclark: so for the version number we\'d go with 2.0.0-dev+0dee2e6
2015-10-06T21:19:08 <Justin_o> that\'s the short form of the commit hash at the end
2015-10-06T21:21:08 <colinclark> ok
2015-10-06T21:21:12 <colinclark> that seems cool to me
2015-10-06T21:22:44 <Justin_o> colinclark: is there a way to test the publish?
2015-10-06T21:22:53 <colinclark> I don\'t know of one
2015-10-06T21:23:12 <colinclark> but I typically use npm at night
2015-10-06T21:23:17 <colinclark> as a Reckless Solo Developer
2015-10-06T21:23:56 <Justin_o> ha, okay, hopefully i won\'t break anything.. at least it should be in the dev pre-release namespace
2015-10-06T21:25:19 <colinclark> yup
2015-10-06T21:25:31 <colinclark> Let me know when you\'ve cut it, and I will test it with Flocking
2015-10-06T21:26:50 <Justin_o> https://www.npmjs.com/package/infusion
2015-10-06T21:27:13 <Justin_o> but it didn\'t respect my +metadata
2015-10-06T21:27:14 <Justin_o> :(
2015-10-06T21:27:27 <Justin_o> maybe because i didn\'t save the change to the package.json file
2015-10-06T21:27:32 <colinclark> fascinating
2015-10-06T21:27:41 <colinclark> also fascinating how our markdown doesn\'t get parsed
2015-10-06T21:27:47 <colinclark> is that due to lack of spaces?
2015-10-06T21:28:08 <Justin_o> i think so
2015-10-06T21:28:15 <Justin_o> i believe it\'s supposed to have spaces, so we should fix that
2015-10-06T21:29:25 <Justin_o> colinclark: so not sure what to do about the package metadata number though :(
2015-10-06T21:29:38 <colinclark> we\'ll figure it out :)
2015-10-06T21:29:54 <colinclark> fascinatingly, in some ways it doesn\'t even really matter much
2015-10-06T21:30:53 <colinclark> I filed this: https://issues.fluidproject.org/browse/FLUID-5787
2015-10-06T21:31:00 <colinclark> now let\'s see what\'s up with our version number
2015-10-06T21:31:21 <Justin_o> colinclark: https://github.com/npm/npm/issues/6379
2015-10-06T21:31:35 <Justin_o> colinclark: thanks for the JIRA too
2015-10-06T21:31:37 <colinclark> great
2015-10-06T21:31:49 <colinclark> another case where DAD KNOWS BEST
2015-10-06T21:31:51 <colinclark> oh well
2015-10-06T21:31:53 <Justin_o> :(
2015-10-06T21:31:54 <Justin_o> yah
2015-10-06T21:31:57 <colinclark> as I say, I\'m not sure it matters :)
2015-10-06T21:32:05 <colinclark> since in the end, -dev releases are all thes ame
2015-10-06T21:32:20 <colinclark> though it would be nice to know for debugging purposes
2015-10-06T21:32:25 <Justin_o> it\'ll be an issue the next time we try to make a dev build for 2.0.0-dev as the version has already been taken
2015-10-06T21:32:37 <colinclark> I assume you can publish over an existing version
2015-10-06T21:32:40 <colinclark> though I don\'t know for sure
2015-10-06T21:32:45 <Justin_o> i don\'t think so
2015-10-06T21:32:54 <colinclark> can you unpublish the release?
2015-10-06T21:32:54 <Justin_o> https://docs.npmjs.com/cli/publish
2015-10-06T21:33:03 <Justin_o> Once a package is published with a given name and version, that specific name and version combination can never be used again, even if it is removed with npm-unpublish(1).
2015-10-06T21:33:14 <colinclark> you\'re kidding!
2015-10-06T21:33:17 <colinclark> oh well
2015-10-06T21:33:32 <Justin_o> so we\'d have to 2.0.0-dev.1 for the next one
2015-10-06T21:33:32 <colinclark> I guess we\'re going to have to actually put a suffix on our prerelease version?
2015-10-06T21:33:42 <colinclark> yep
2015-10-06T21:33:45 <colinclark> I think that\'s okay
2015-10-06T21:33:52 <Justin_o> yep, which is super annoying because we now won\'t know which version it was built from :(
2015-10-06T21:34:02 <Justin_o> but i guess we can track it back through jenkins or something else
2015-10-06T21:34:03 <colinclark> well, couldn\'t we put the commit has on the end?
2015-10-06T21:34:09 <colinclark> 2.0.0-dev-<hash>?
2015-10-06T21:34:26 <colinclark> or is that too unconventional for semver?
2015-10-06T21:34:30 <Justin_o> it probably won\'t be valid semver though
2015-10-06T21:34:40 <Justin_o> we could try or use _ i guess
2015-10-06T21:34:46 <colinclark> seems reasonable to me
2015-10-06T21:34:51 <colinclark> if npm really wants to prevent us from doing this
2015-10-06T21:35:38 <Justin_o> colinclark: according to http://semver.org point 9 it\'s probably okay
2015-10-06T21:35:56 <Justin_o> although i\'m not sure
2015-10-06T21:35:58 <colinclark> I have to admit that this is why I don\'t love semver
2015-10-06T21:36:11 <colinclark> I don\'t like this strange kind of deference
2015-10-06T21:36:46 <colinclark> ok
2015-10-06T21:36:53 <colinclark> so either we follow semver to the letter
2015-10-06T21:37:01 <Justin_o> i like have things be formal, i just don\'t understand why they have a spec and not conform to it
2015-10-06T21:38:09 <colinclark> Following semver to the letter, we just have to autoincrement some number
2015-10-06T21:38:19 <colinclark> and there\'s no connection with the commit hash from which it was generated
2015-10-06T21:38:21 <colinclark> correct?
2015-10-06T21:38:35 <colinclark> 2.0.0-dev.1, then 2.0.0-dev.2, etc.
2015-10-06T21:38:41 <Justin_o> yes, exactly...
2015-10-06T21:38:45 <Justin_o> although 2.0.0-dev-0dee2e6 does seem to work
2015-10-06T21:38:57 <colinclark> "Work," in what way?
2015-10-06T21:39:10 <Justin_o> in that case dev-0dee2e6 is the pre-release version i guess
2015-10-06T21:39:19 <colinclark> right
2015-10-06T21:39:36 <Justin_o> so you can use npm pack to test things out by the way
2015-10-06T21:39:44 <colinclark> aha
2015-10-06T21:39:45 <Justin_o> it creates a tgz file
2015-10-06T21:39:47 <colinclark> great thing to know
2015-10-06T21:40:03 <colinclark> Bosmon: Do you have an opinion about what approach to take?
2015-10-06T21:40:13 <Bosmon> Why didn\'t we go with 2.0.0-beta.1-dev.thing?
2015-10-06T21:40:32 <colinclark> oh god, this beta again
2015-10-06T21:40:40 * colinclark biting my tongue
2015-10-06T21:40:41 <colinclark> :)
2015-10-06T21:40:52 <Bosmon> I thought the pattern was "version we are working towards" + "dev.thing"
'

b'2015-10-06T19:39:59 <Bosmon> Well
2015-10-06T19:40:07 <colinclark> all for a versioning system that doesn\'t work in npm
2015-10-06T19:40:10 <Bosmon> Versioning of fluid is going to be a completely explosive issue for a while
2015-10-06T19:40:10 <colinclark> :)
2015-10-06T19:40:16 <colinclark> yup
2015-10-06T19:40:20 <Bosmon> But we may as well start to try to get our heads around it : P
2015-10-06T19:40:24 <Justin_o> Bosmon: i guess it depends on how we want our multiple versions on the client to work
2015-10-06T19:40:32 <Bosmon> Justin_o - we have no problems on the client
2015-10-06T19:40:39 <Bosmon> The problems are all on the server
2015-10-06T19:40:41 <Justin_o> i mean for the fluid_ naming
2015-10-06T19:40:56 <colinclark> this is, for the record, why I was happy to advocate for major releases instead of betas :)
2015-10-06T19:40:57 <Justin_o> especially because it only works on the client :)
2015-10-06T19:41:00 <colinclark> but I will stop bringing that up
2015-10-06T19:41:12 <Bosmon> Justin_o - yes - I imagine that anyone who has a fluid "release proper" on the client might in theory want to insulate it from other such releases
2015-10-06T19:41:31 <Bosmon> And we will simply have to ignore the issue that we have no similar scheme for insulating different Infusion releases on the server
2015-10-06T19:41:37 <Bosmon> This is a massively more complex issue than it was on the client
2015-10-06T19:41:40 <colinclark> shall we go with fluid_2_0_0_beta_1?
2015-10-06T19:41:47 <colinclark> or fluid_2_0_0_beta1?
2015-10-06T19:41:53 <Bosmon> And even solving the issue on the client took a lot of headscratching :)
2015-10-06T19:42:01 <colinclark> it sure did
2015-10-06T19:42:09 <Bosmon> colinclark - we should go for something that can be done by a simple mechanical translation of the npm version name
2015-10-06T19:42:18 <Bosmon> And I believe this will just function by converting every "." to a "_"
2015-10-06T19:42:23 <Bosmon> So beta_1 seems right
2015-10-06T19:42:34 <colinclark> and what will be the precise name for our first beta?
2015-10-06T19:42:39 <colinclark> semver, I mean
2015-10-06T19:42:49 <Justin_o> Bosmon: colinclark: what do we do for the in dev version then?
2015-10-06T19:42:50 <Bosmon> fluid-2.0.0-beta.1
2015-10-06T19:42:53 <Bosmon> I think
2015-10-06T19:42:57 <Bosmon> Well
2015-10-06T19:43:06 <Bosmon> infusion, with a version of 2.0.0-beta.1
2015-10-06T19:43:20 <Bosmon> So I guess this makes fluid_2_0_0-beta_1
2015-10-06T19:43:24 <Bosmon> What a mouthful :)
2015-10-06T19:43:36 <colinclark> Justin_o: we pin the development versions to their next stable release
2015-10-06T19:43:45 <Bosmon> Justin_o - I\'m not sure if I mentioned my plan for a thing that one might call "fluid-store" as an npm module
2015-10-06T19:43:46 <colinclark> I can\'t see that anyone running a development snapshot wants to keep it that way :)
2015-10-06T19:43:46 <Justin_o> it probably should be infusion_2_0_0-beta-1 but we an stick with fluid :)
2015-10-06T19:44:04 <colinclark> I would have loved to call our global "infusion"
2015-10-06T19:44:04 * the-t-in-rtf has quit
2015-10-06T19:44:09 <colinclark> or something super cool and terse like "inf"
2015-10-06T19:44:16 <Bosmon> This can only happen once we have had our "micromodule revolution" and already split out all the components
2015-10-06T19:44:17 <colinclark> inf.setBeanValue()
2015-10-06T19:44:18 <colinclark> :P
2015-10-06T19:44:21 <Bosmon> I guess we had talked about this a bit
2015-10-06T19:44:23 <Bosmon> shush
2015-10-06T19:44:26 <colinclark> hahaha
2015-10-06T19:44:45 <Bosmon> But once we split out all the components, the framework itself will then need to be split into (at least) 4 or so pieces
2015-10-06T19:45:04 <colinclark> I love talking about this part of the future, it\'s so exciting!
2015-10-06T19:45:10 <Justin_o> colinclark: so should the in-dev be fluid_2_0 or fluid_2_0_0 or fluid_2_0_0-dev
2015-10-06T19:45:17 <Bosmon> store, utils, dataBinding, and.... I guess....... horrifyingly, something like "vm"
2015-10-06T19:45:28 <Justin_o> vm?
2015-10-06T19:45:40 <Bosmon> I don\'t want to face the fact that Infusion really is a VM but we will have to face it someday :(
2015-10-06T19:45:41 <colinclark> Justin_o: I think it should be fluid_2_0_0-beta_1
2015-10-06T19:45:52 <Justin_o> colinclark, Bosmon: should i be updating that as part of this pull request?
2015-10-06T19:45:56 <colinclark> in other words, the dev versions always anticipate their next release
2015-10-06T19:45:57 <Bosmon> And then "view" will be a 5th piece
2015-10-06T19:46:02 <colinclark> yes, I think that would be fine
2015-10-06T19:46:16 <Bosmon> Justin_o - yes
2015-10-06T19:46:23 <Bosmon> Anticipating the next planned release seems reasonable
2015-10-06T19:46:33 <Bosmon> It\'s what we always used to do
2015-10-06T19:46:36 <colinclark> There\'s nothing wrong with contemplating Infusion as a VM
2015-10-06T19:46:39 <Bosmon> Back when we were on Maven versioning
2015-10-06T19:46:47 <colinclark> I mean, what is the difference between a framework and a VM anyway
2015-10-06T19:46:55 <Bosmon> colinclark - nothing really, other than the whole social terrain that goes with inventing VMs : P
2015-10-06T19:46:56 <colinclark> except a kind of privilege to be opaque?
2015-10-06T19:47:09 <Bosmon> Well, many frameworks, perhaps, have no kind of "runtime image"
2015-10-06T19:47:20 <Bosmon> They might be just a library of stateless functions or some such thing
2015-10-06T19:47:31 <colinclark> true
2015-10-06T19:47:35 <Bosmon> Although I guess they aren\'t much of a framework in that case
2015-10-06T19:47:48 <Bosmon> Both Spring and Hibernate had plenty of runtime state, it was just pretty hard to get at it in most cases
2015-10-06T19:48:02 <Bosmon> I\'m not sure they would agree with the designation "vm"
2015-10-06T19:48:04 <colinclark> so Justin_o, are we confirmed that 2.0.0-beta.1 will be our next milestone semver?
2015-10-06T19:48:17 <Bosmon> But especially since we have the "global instantiator", Infusion is very much more like a VM than it was before
2015-10-06T19:48:28 <colinclark> and the JS variable for it will be fluid_2_0_0_beta_1?
2015-10-06T19:48:34 <colinclark> since the dash isn\'t going to very cool
2015-10-06T19:48:36 <Justin_o> colinclark: i believe so
2015-10-06T19:48:45 <Bosmon> colinclark - you don\'t find the dash very cool? : P
2015-10-06T19:48:50 <Justin_o> colinclark: yes, because fluid_2_0_0-beta_1 seems to be invalid
2015-10-06T19:48:53 <colinclark> I love dashes
2015-10-06T19:48:54 <Justin_o> i think because of the -
2015-10-06T19:49:01 <colinclark> it\'s just that they make for tough variable names
2015-10-06T19:49:02 <Bosmon> Ah of course
2015-10-06T19:49:05 <Bosmon> Ok sure
2015-10-06T19:49:12 <Bosmon> Silly blasted language
2015-10-06T19:49:17 <Bosmon> You\'d think they didn\'t know how to write a parser
2015-10-06T19:49:26 <Bosmon> Oh whoops, they don\'t : P
2015-10-06T19:49:39 <colinclark> simonjb can happily name his variables with dashes whenever he wants!
2015-10-06T19:49:49 <Bosmon> Yes, he can!
2015-10-06T19:49:53 <colinclark> none of this extra shift keying required
2015-10-06T19:49:54 <Bosmon> But only because his language has no syntax : P
2015-10-06T19:49:58 <colinclark> HURRAY!
2015-10-06T19:50:22 <Bosmon> I guess our "forgiving JSON" will paper over this kind of issue too
2015-10-06T19:50:29 <colinclark> Generous JSON :)
2015-10-06T19:50:36 <Bosmon> Anyway, yes, the creation of "fluid-store" will be a crucial part of the solution for our versioning on the server
2015-10-06T19:50:48 <Bosmon> This will enable different node modules to share grade definitions without necessarily committing to sharing a VM
2015-10-06T19:50:56 <Justin_o> Bosmon: what is fluid-store?
2015-10-06T19:51:11 <Bosmon> Justin_o - it will consist of just the machinery necessary to run fluid.defaults() and nothing else
2015-10-06T19:51:20 <Bosmon> So, about 100 lines of code
2015-10-06T19:51:54 <Bosmon> The biggest problem that our infusion deduping is trying to get around in node.js is that grade definitions can get "lost"
2015-10-06T19:52:08 <Justin_o> Bosmon: so there would only be an issue with sharing definitions if there is a change to fluid.defaults?
2015-10-06T19:52:10 <Bosmon> If different node modules see different infusions, then their calls to fluid.defaults() all go into different places
2015-10-06T19:52:18 <Bosmon> Justin_o - right - and that almost never happens
2015-10-06T19:52:29 <Justin_o> after we re-name it i guess
2015-10-06T19:52:32 <Bosmon> So version numbers for fluid-store would increment massively more slowly than versions for vm etc.
2015-10-06T19:52:45 <Justin_o> Bosmon: that makes sense
2015-10-06T19:52:55 <Bosmon> And any vm users that could bind to compatible versions of fluid-store could share grade definitions
2015-10-06T19:52:56 <Justin_o> and the vm would depend on the store
2015-10-06T19:53:02 <Justin_o> cool
2015-10-06T19:53:37 <Bosmon> In practice, of course, our problems don\'t stop there - since, for example, different node modules in a GPII installation do INDEED expect to share access to a vm as well as a store
2015-10-06T19:53:47 <Bosmon> But that would have to be signalled by some other means
2015-10-06T19:54:25 <Bosmon> But the first thing that goes wrong with multiple infusions in a tree is that fluid.defaults() is unable to resolve a grade hierarchy - since often the parent to a grade is registered by a different module to the child
2015-10-06T19:54:41 <Bosmon> So solving the front-line problem gets us partway into the issue
2015-10-06T19:55:09 <colinclark> one step at a time
2015-10-06T19:55:28 <Bosmon> In practice, any kind of "parallelism" in node is typically intended to be resolved by firing up a completely fresh node instance anyway - since JS natively tends to frown on genuine multithreading since the Rhino days
2015-10-06T19:55:35 <Bosmon> So none of this is actually hugely urgent
2015-10-06T19:55:48 <Bosmon> Once we have the NEXUS many of these problems will have other solutions
2015-10-06T19:56:10 <Bosmon> In that it will be easy to set up dynamic model relations between infusion model components either in the same process or different processes without placing hard constraints on their infusion versions
2015-10-06T19:56:58 <Bosmon> But the biggest stumbling block that we DO have coming up is that Infusion-aware libraries do often tend to bind to "general node modules"
2015-10-06T19:57:11 <Bosmon> and at the moment, end up effacing their versioning information
2015-10-06T19:57:21 <Bosmon> Which, in theory, could only come from the npm infrastructure
2015-10-06T19:57:26 <Justin_o> colinclark, Bosmon: ready for more review
2015-10-06T19:57:54 <Bosmon> colinclark, Justin_o - I would like to show to you something PUZZLING AND NEW : P
2015-10-06T19:57:55 <Bosmon> https://github.com/amb26/kettle/blob/KETTLE-32/lib/KettleMiddleware.js#L20
2015-10-06T19:58:17 <colinclark> Bosmon: I will look at Justin_o\'s pull request while he looks at your code
2015-10-06T19:58:23 <colinclark> and then we\'ll switch :)
2015-10-06T19:58:23 <Bosmon> So colinclark for reasons of his own is starting to work on "dynamic micromodule architecture" based on funny things in package.json
2015-10-06T19:59:12 <Bosmon> But it\'s clear that this line harbours a kind of serious problem, in that it actually ends up committing any user of this "global" to what is in fact version "1.13.3" of body-parser in npm
2015-10-06T19:59:34 <Bosmon> Now in practice there should be a clear and declarative way of this kind of thing happening automatically, for any module that can be determined to be "compliant"
2015-10-06T19:59:48 <Bosmon> That is, the mere fact that you have included something in package.json should make globals like this available, somehow
2015-10-06T19:59:59 <Bosmon> And in a way that doesn\'t efface their version info
2015-10-06T20:00:05 <colinclark> Justin_o: Were you going to update the global variable name, too?
2015-10-06T20:00:15 <colinclark> the change to fluid.version looks good
2015-10-06T20:00:51 <Bosmon> I don\'t know, though, how we\'re going to determine that certain node modules are "compliant" - I imagine the only way is to start publishing npm modules of our own that simply consist of "metadata" about other npm modules
2015-10-06T20:01:03 <Bosmon> a SOLUTIONS REGISTRY, if you will :)
2015-10-06T20:01:06 <Bosmon> ha, ha
2015-10-06T20:01:11 <colinclark> :)
2015-10-06T20:02:24 <Bosmon> There\'s 191,000 npm modules, noone\'s going to notice a few thousand more :)
2015-10-06T20:02:29 <Justin_o> colinclark: though i pushed it up, should be there now
2015-10-06T20:02:56 <colinclark> got it, Justin_o
2015-10-06T20:03:23 <Justin_o> Bosmon:  i like the idea of it being registered in the package.json it\'s more clear that way
2015-10-06T20:03:41 <Bosmon> Justin_o - yes - a "compliant" module that knows about the metadata can put it in its own package.json
2015-10-06T20:03:51 <Bosmon> But we need a way of dealing with 3rd party modules that haven\'t opted in to our metadata system
2015-10-06T20:04:03 <Bosmon> http://www.modulecounts.com/ , for reference : P
2015-10-06T20:04:47 <simonjb> colinclark, Bosmon: sorry was away from my keyboard on a whiteboard-cleaning break
2015-10-06T20:04:53 <colinclark> :)
2015-10-06T20:04:55 <simonjb> and dashes for everyone!!!
2015-10-06T20:04:59 <colinclark> :) :)
2015-10-06T20:05:09 <Justin_o> Bosmon: npm has by far the most.. i didn\'t realize
2015-10-06T20:05:24 <Bosmon> Justin_o - "two and a half cheers for micromodules" : P
2015-10-06T20:05:30 <colinclark> you should hear what gtirloni and alanharn_ say about that in their unlogged channel ;)
2015-10-06T20:06:17 <colinclark> I can\'t wait until Infusion becomes the 191773rd module!
'

b'2015-10-06T18:50:41 <Bosmon> cindyli - it appears that the "prefs server" does indeed depend on the ontology manager, yes, although I\'m not convinced yet that it does so in the way expected: for example, https://github.com/GPII/universal/blob/master/gpii/node_modules/preferencesServer/src/preferencesPutHandler.js#L69
2015-10-06T18:50:55 <colinclark> Justin_o: I don\'t know Kasper\'s schedule
2015-10-06T18:51:03 <colinclark> But I imagine he\'s often here in the morning
2015-10-06T18:51:09 <colinclark> I figure he\'s probably super busy coding
2015-10-06T18:51:13 <colinclark> and might be hiding out a bit
2015-10-06T18:51:33 <colinclark> Justin_o: I just read your summary
2015-10-06T18:51:34 <Justin_o> colinclark: okay, thanks
2015-10-06T18:51:37 <colinclark> and it all seems correct
2015-10-06T18:51:42 <Justin_o> cool
2015-10-06T18:51:47 <Bosmon> cindyli - yes - it appears that the prefs server will read a request query parameter named "view" in order to determine the ontology: https://github.com/GPII/universal/blob/master/gpii/node_modules/preferencesServer/src/preferencesServer.js#L136
2015-10-06T18:52:06 <colinclark> I guess we\'ll need to make sure that committers all have npm accounts and are registered as having publish access
2015-10-06T18:52:16 <colinclark> I\'m not sure how that\'s done, is it just through the contributors section in package.json?
2015-10-06T18:52:30 <Justin_o> colinclark: hmm.. good question
2015-10-06T18:52:37 <colinclark> and also our CI instance will need to be given a clever and funny name
2015-10-06T18:52:42 <colinclark> so it can publish, too
2015-10-06T18:52:47 <cindyli> Bosmon: so the "view" value might be using or pointing to the new ontology document
2015-10-06T18:53:24 <Bosmon> cindyli - right
2015-10-06T18:53:38 <Bosmon> cindyli - actually it looks like KASPARDNITT has been very good and produced some extremely comprehensive test cases
2015-10-06T18:53:44 <Bosmon> So the one matching your case is here: https://github.com/GPII/universal/blob/master/gpii/node_modules/preferencesServer/test/preferencesServerTests.js#L900
2015-10-06T18:53:52 <Bosmon> So it seems that this functionality should indeed work
2015-10-06T18:54:08 <Bosmon> And I would expect all you need to do is issue a pull to universal with your ontology placed in the correct dir
2015-10-06T18:54:56 <cindyli> cool.
2015-10-06T18:55:07 <colinclark> amazing, really
2015-10-06T18:56:10 <Bosmon> Offhand I don\'t quite recall what happened to our "privacy" ontology - perhaps simonjb does
2015-10-06T18:56:21 <Bosmon> I vaguely recall that it got moved out of the ontologyManager\'s area
2015-10-06T18:56:58 <cindyli> simonjb is in a call
2015-10-06T19:01:51 <Justin_o> colinclark: i\'m looking at this https://docs.npmjs.com/cli/adduser but it doesn\'t seem to actually specify who can publish a module, it seems more a way to identify who published the module.
2015-10-06T19:02:03 <simonjb> Bosmon, cindyli: we have https://github.com/GPII/universal/blob/master/testData/ontologies/privacy-flat.json
2015-10-06T19:02:13 <simonjb> which is used during the privacy filtering
2015-10-06T19:02:26 <Bosmon> simonjb - oh yes, sorry - I must have just had a brain failure when looking at that directory :)
2015-10-06T19:02:33 <Justin_o> colinclark: here we go, i think this is what we want https://docs.npmjs.com/cli/access
2015-10-06T19:02:59 <simonjb> we transform from flat to privacy, filter in privacy, then transform back to flat and continue processing
2015-10-06T19:03:21 <Bosmon> cheers, simonjb
2015-10-06T19:03:34 <Bosmon> So yes, it does look indeed as if "ontologies were meant to be used"
2015-10-06T19:03:43 <Bosmon> Thanks to the work KASPARDNITT did in shoring up this area
2015-10-06T19:05:28 <Justin_o> colinclark: hmm that might only be for using a private registry
2015-10-06T19:05:57 <colinclark> Bosmon: So I\'m clear, you\'re suggesting that cindyli\'s contribution to this directory will be transformations going between flat and the "first discovery" ontology and vice versa?
2015-10-06T19:06:10 <colinclark> much like simonjb\'s privacy > flat transformations here
2015-10-06T19:06:56 <Justin_o> colinclark: i guess it\'s this one https://docs.npmjs.com/cli/owner
2015-10-06T19:07:00 <gtirloni> avtar: looks like after 2-3 years, nothing has changed for vboxsf: https://gist.github.com/gtirloni/b668708a74a8287c2eef
2015-10-06T19:07:24 <colinclark> ok, fascinating, Justin_o
2015-10-06T19:07:45 <colinclark> So it seems like someone is going to need to manually publish infusion first
2015-10-06T19:07:49 <Justin_o> so i guess all the committers and jenkins will need to be an owner
2015-10-06T19:07:52 <colinclark> yep
2015-10-06T19:08:12 <colinclark> Bosmon, Justin_o: Do we see any reason why we shouldn\'t publish a development snapshot now?
2015-10-06T19:08:42 <colinclark> or do we want to be somehow especially awesome and merge those new pull requests, run a short test sprint, and just publish beta1 as our first npm release?
2015-10-06T19:08:47 <Justin_o> colinclark: should be fine, if we have the version name scheme settled we should able to do that now manually
2015-10-06T19:09:05 <Justin_o> colinclark: how long do you think that will take?
2015-10-06T19:09:20 <colinclark> I\'m quite happy with only moderate awesomeness rather than awesomeness ESPECIALE
2015-10-06T19:09:28 <colinclark> Justin_o: dunno, really
2015-10-06T19:09:39 <colinclark> seems like we should just publish a dev snapshot now
2015-10-06T19:09:42 <colinclark> rather than waiting
2015-10-06T19:09:58 <Justin_o> colinclark: we could even go back in time and publish the merge of the big branch as beta 1 i guess, or beta 0 maybe
2015-10-06T19:10:21 <colinclark> I can\'t imagine it\'d be worth it, to be honest
2015-10-06T19:11:04 <Justin_o> okay, then dev snapshot :)
2015-10-06T19:11:33 <Justin_o> i was only suggesting the big branch because we did all that testing on it
2015-10-06T19:11:36 <colinclark> yep
2015-10-06T19:11:38 <Justin_o> but i guess a lot has gone in since
2015-10-06T19:11:40 <colinclark> but then it lacked several key things
2015-10-06T19:11:44 <colinclark> including the npm ignore stuff
2015-10-06T19:11:53 <Justin_o> oh right, forgot about that.. that\'s big
2015-10-06T19:11:59 <colinclark> it looks like all my libraries have frozen on a version from mid-September
2015-10-06T19:12:12 <colinclark> but not for any other reason than that I had to choose some revision number to pin against
2015-10-06T19:12:22 <colinclark> i will immediately update them all to use this snapshot
2015-10-06T19:12:27 <Justin_o> :)
2015-10-06T19:12:29 <colinclark> \x08do you want to do it, King?
2015-10-06T19:12:39 <colinclark> come up with a versioning scheme and publish it?
2015-10-06T19:12:42 <Justin_o> ha, i was going to ask you to do
2015-10-06T19:12:47 <colinclark> sure, if you want me to
2015-10-06T19:12:49 <colinclark> it\'s totally up to you
2015-10-06T19:13:14 <Justin_o> i just haven\'t published an NPM module before.. i can give it a try though
2015-10-06T19:13:30 <colinclark> it\'s really as easy as typing "npm publish" :)
2015-10-06T19:13:35 <colinclark> your call
2015-10-06T19:13:46 <Justin_o> colinclark: so you were saying we need to publish before we can add owners
2015-10-06T19:13:47 <colinclark> so what will our versioning scheme be for development releases?
2015-10-06T19:13:51 <colinclark> yes, I believe so
2015-10-06T19:14:13 <colinclark> 2.0.0-SNAPSHOT-<hash>?
2015-10-06T19:14:18 <colinclark> or 2.0.0-dev-<hash>?
2015-10-06T19:14:21 <colinclark> or something like that?
2015-10-06T19:14:34 <Justin_o> 2.0.0-SNAPSHOT+<hash> i think
2015-10-06T19:14:40 <colinclark> plus, ok
2015-10-06T19:15:02 <Justin_o> dev might might make sense, but we may want to change it in the package.json to make it easier. what do you think?
2015-10-06T19:15:14 <Justin_o> easier for the automation
2015-10-06T19:15:24 <colinclark> I think I\'d prefer "dev" to SNAPSHOT in general
2015-10-06T19:15:27 <colinclark> but I don\'t really mind
2015-10-06T19:16:06 <Justin_o> i don\'t have any preference myself, is SNAPSHOT still typical these days?
2015-10-06T19:16:14 <Bosmon> Yes, SNAPSHOT reeks too heavily of the ancient Maven days :)
2015-10-06T19:16:20 <Bosmon> I\'d go for "dev"
2015-10-06T19:16:21 <colinclark> I was just going to say :) :)
2015-10-06T19:16:44 <Justin_o> lol
2015-10-06T19:16:49 <Justin_o> someone want to file a JIRA for that
2015-10-06T19:16:55 <Justin_o> i can make the change in the package.json file
2015-10-06T19:17:01 <Justin_o> and do we want DEV or dev
2015-10-06T19:17:03 <Bosmon> I guess publishing a dev snapshot immediately could be fun
2015-10-06T19:17:05 <Bosmon> "dev"
2015-10-06T19:17:06 <colinclark> now that we don\'t have a WEB-INF directory, too :)
2015-10-06T19:17:15 <colinclark> Justin_o: I\'ll file you a JIRA
2015-10-06T19:17:16 <Bosmon> And get us limbered up and into the workflow of publishing real releases
2015-10-06T19:17:23 <colinclark> yep
2015-10-06T19:17:24 <colinclark> exactly
2015-10-06T19:17:41 <Bosmon> We can dip our toe in the water of npm repositories after our 5 years of glorious inaction :)
2015-10-06T19:17:47 <colinclark> what do you call the thing after the dash in semver terms, Justin_o?
2015-10-06T19:17:56 <colinclark> Bosmon: we are such dorks :)
2015-10-06T19:18:12 <colinclark> at least we\'ve managed to avoid bower modules
2015-10-06T19:18:15 <colinclark> which are the worst
2015-10-06T19:18:18 <Bosmon> yes
2015-10-06T19:18:37 <colinclark> I recently adjusted Flocking\'s .gitattributes
2015-10-06T19:18:57 <Justin_o> colinclark: that\'s a pre-release version
2015-10-06T19:19:19 <colinclark> I have no idea if this is wise, but I was going insane dealing with having my built assets in Git
2015-10-06T19:19:21 <colinclark> https://github.com/colinbdclark/Flocking/blob/core-refactoring/.gitattributes
2015-10-06T19:19:27 <colinclark> Justin_o: Okay, cool
2015-10-06T19:19:30 <Justin_o> i think it goes Major.Minor.Patch-prerelease+buildMetadata
2015-10-06T19:19:41 <colinclark> thank you, that\'s super helpful
2015-10-06T19:19:49 <colinclark> I will put it in the JIRA :)
2015-10-06T19:22:24 <colinclark> Justin_o: https://issues.fluidproject.org/browse/FLUID-5786
2015-10-06T19:23:36 <Justin_o> colinclark: thanks
2015-10-06T19:23:50 <colinclark> this\'ll be exciting
2015-10-06T19:26:44 <colinclark> gtirloni: In the future, if this git-lfs thing catches on for design artifacts, can you imagine that we\'d consider running an LFS server? https://github.com/github/lfs-test-server
2015-10-06T19:26:49 <colinclark> we do have a lot of hard drives :)
2015-10-06T19:27:30 <gtirloni> colinclark: that\'d be idea (and faster)
2015-10-06T19:27:34 <gtirloni> *ideal
2015-10-06T19:28:08 <colinclark> I was just thinking about it in case find Github\'s size restrictions too uncool
2015-10-06T19:28:29 <colinclark> or if--god forbid--they themselves become too uncool
2015-10-06T19:28:50 <colinclark> imagine how awful it would be for open source developers at this point if Github become evil?
2015-10-06T19:28:52 <colinclark> became
2015-10-06T19:29:44 <colinclark> I\'m just trying to figure out what kind of support Git LFS has for tracking revisions
2015-10-06T19:29:53 <colinclark> obviously it\'s a binary file, so there\'s not much you can do
2015-10-06T19:30:06 <colinclark> but does a new oid get generated for each revision of a binary file?
2015-10-06T19:30:29 <colinclark> I guess it must, otherwise what\'s the point?
2015-10-06T19:33:18 <Justin_o> colinclark: yah, i\'m guessing it saves every version of the file on their server, and updates the pointer file to point at that. But your checkout probably only comes with the latest version of the file. I\'d assume. We probably need to play around with it though, there does seem to be a bit of a lack of info right now.
2015-10-06T19:33:26 <Justin_o> colinclark: could you review this https://github.com/fluid-project/infusion/pull/641
2015-10-06T19:33:36 <colinclark> yup
2015-10-06T19:33:43 <Justin_o> thanks
2015-10-06T19:34:36 <colinclark> looks like your client made a lot of whitespace changes
2015-10-06T19:34:41 <colinclark> I guess you\'re in the same boat as me
2015-10-06T19:34:53 <colinclark> where Atom happily elides spaces on blank lines
2015-10-06T19:34:58 <Justin_o> yep :)
2015-10-06T19:35:23 <colinclark> but our linter never detects them for those of us using IDEs that don\'t support it <cough>Eclipse from 2007</cough>
2015-10-06T19:35:40 <colinclark> you also added this line, Justin_o: https://github.com/fluid-project/infusion/pull/641/files#diff-4d5aa81bf4f18104bb6ea53a8b5d1f43R32
2015-10-06T19:36:28 <Justin_o> colinclark: yah, it was complaining about that too because JSON wasn\'t defined
2015-10-06T19:37:35 <colinclark> what was complaining?
2015-10-06T19:37:48 <Justin_o> my linter at least
2015-10-06T19:38:03 <Justin_o> i cleaned it up before i ran the grunt lint task so not sure if it would have also complained
2015-10-06T19:38:03 <colinclark> ah, ok
2015-10-06T19:38:14 <colinclark> and "false" means that it\'s a read-only global
2015-10-06T19:38:22 <colinclark> what a confusing convention
2015-10-06T19:38:32 <Justin_o> yah, it is
2015-10-06T19:38:59 <Justin_o> Bosmon: regarding your comment, should fluid_2_0 be changed to fluid_2_0_0 too?
2015-10-06T19:39:42 <Bosmon> Justin_o - I imagine, yes - and if we are serious about this, I imagine it should even become fluid_2_0_0_beta_1 when we have our release
2015-10-06T19:39:49 <colinclark> zomg
'

b'2015-10-06T16:31:02 * slim_ has quit
2015-10-06T16:31:06 <avtar> one sec, catching up on channel logs
2015-10-06T16:31:11 <colinclark> take your time
2015-10-06T16:31:19 <colinclark> sorry to have been chatting so much without you!
2015-10-06T16:31:29 <gtirloni> avtar:h i! i was thinking the native virtualbox shared folders, that uses the vboxsf driver. vagrant seems to call consider it the default type, but i haven\'t checked yet
2015-10-06T16:34:00 * slim__ has quit
2015-10-06T16:36:22 <gtirloni> config.vm.synced_folder "sync-this/", "/home/vagrant/sync-this"
2015-10-06T16:36:44 <gtirloni> i didn\'t prompt me for the root pw in this case.. but with nfs it\'d for sure
2015-10-06T16:37:54 <gtirloni> This is from inside the VM: none on /home/vagrant/sync-this type vboxsf (rw,nodev,relatime)
2015-10-06T16:39:40 * sepidehshahi has quit
2015-10-06T16:40:54 * sepidehshahi joined the channel
2015-10-06T16:51:26 <Justin_o> sepidehshahi: do you have contacts who could help us with Spanish and French translations for the first discovery tool.
2015-10-06T16:53:22 <sepidehshahi> Justin_o: for French we asked Adrien to help us for the surveys. So, maybe we could talk to him to see if he has some time. For Spanish, I can ask my friend but not sure if she can do it this time.
2015-10-06T16:53:53 <Justin_o> sepidehshahi: ah okay
2015-10-06T17:01:18 * sepidehshahi joined the channel
2015-10-06T17:03:40 <colinclark> Justin_o: In general, I wouldn\'t sweat translations for the FD Tool too much
2015-10-06T17:03:49 <colinclark> if we have people who are happy to do it for us, that\'s great
2015-10-06T17:04:13 <colinclark> but if not, we can always leave the task of localizing the new screens to someone else, later
2015-10-06T17:07:22 <Justin_o> colinclark: i\'m google translating them for now. Do you think that\'s enough?
2015-10-06T17:07:39 <Justin_o> It\'s three strings
2015-10-06T17:07:44 <Justin_o> across two panels
2015-10-06T17:07:47 <colinclark> sure, as long as there is a very clear TODO comment explaning it
2015-10-06T17:08:06 <Justin_o> colinclark: they\'re in JSON files
2015-10-06T17:08:15 <colinclark> ha
2015-10-06T17:08:20 <Justin_o> i don\'t think it\'s valid to add comments there. i could add something to the readme or something
2015-10-06T17:08:21 <colinclark> file a bug about it and keep moving
2015-10-06T17:08:39 <colinclark> localization isn\'t a priority for us right now
2015-10-06T17:08:43 <Justin_o> there\'s a JIRA for the translations already, maybe i should just leave it then rather than put in something incorrect
2015-10-06T17:08:51 <colinclark> <insert dorky quilting metaphor here>
2015-10-06T17:09:02 <colinclark> <followed by sharp quip from simonjb>
2015-10-06T17:09:03 <colinclark> etc.
2015-10-06T17:10:39 * danayo joined the channel
2015-10-06T17:11:39 <Justin_o> colinclark: okay, i\'ll leave it then
2015-10-06T17:11:47 <colinclark> cool
2015-10-06T17:11:54 <Justin_o> colinclark:  by the way, what did we decide for the post install issue?
2015-10-06T17:12:04 <Justin_o> i sort of lost track of that
2015-10-06T17:12:22 <colinclark> It\'s up to you
2015-10-06T17:12:35 <Justin_o> ah, that\'s why i didn\'t know what the answer was :)
2015-10-06T17:12:45 <colinclark> were it me, I would start by creating a JavaScript file that served as a driver for installing your app
2015-10-06T17:12:55 <colinclark> i.e. a file that runs "npm install" and "grunt dedupe-infusion"
2015-10-06T17:13:16 <colinclark> a file that can be run by typing "node install.js" or something to that effect :)
2015-10-06T17:13:23 <Justin_o> colinclark: sure, so i\'ll probably do that while we get the npm build publishing working and we can switch over later
2015-10-06T17:13:31 <colinclark> yep
2015-10-06T17:14:08 <colinclark> And then I might consider the possibility of just going ahead and manually publishing a development build of Infusion
2015-10-06T17:14:22 <colinclark> it looks like I have some pull requests to review
2015-10-06T17:14:27 <colinclark> and then we should schedule a testing sprint
2015-10-06T17:14:34 <colinclark> and ship and publish 2.0.0-beta1
2015-10-06T17:14:45 <colinclark> Then we should explore automating the publishing via CI
2015-10-06T17:15:04 <colinclark> The last thing I\'m wondering about is how npm handles "the latest version"
2015-10-06T17:15:25 <colinclark> For example, here: https://www.npmjs.com/package/osc
2015-10-06T17:15:30 <Justin_o> colinclark: you mean will it pick up one of the CI builds?
2015-10-06T17:15:35 <colinclark> yes
2015-10-06T17:15:41 <colinclark> Does it just reflect the last thing published?
2015-10-06T17:15:47 <colinclark> That would really suck
2015-10-06T17:16:24 <colinclark> If that\'s not the case, I think we should go ahead and explore automated publishing of dev snapshots to npm with gtirloni and alanharn_
2015-10-06T17:16:40 <colinclark> if it is the case, we might want to think it through a bit further :)
2015-10-06T17:17:03 <colinclark> Does that seem about right to you, Justin_o?
2015-10-06T17:20:07 <Justin_o> colinclark: yep that\'s a good point... it\'s a curious question in general what one would expect to get with latest. It\'s probably latest stable, which i think means you wouldn\'t even want a beta version coming down
2015-10-06T17:20:25 <colinclark> yep
2015-10-06T17:20:31 <colinclark> but given the nature of our betas, I think we\'ll be okay
2015-10-06T17:20:40 <colinclark> I\'m more worried about development snapshots right now
2015-10-06T17:22:27 <Justin_o> this might help http://blog.npmjs.org/post/115305091285/introducing-the-npm-semantic-version-calculator
2015-10-06T17:23:24 <Bosmon> Well, that tells us about ranges, not recency
2015-10-06T17:23:29 <gtirloni> Justin_o colinclark: how some people publish nightlies: http://blogs.msdn.com/b/typescript/archive/2015/07/27/introducing-typescript-nightlies.aspx
2015-10-06T17:24:15 <gtirloni> https://www.npmjs.com/package/typescript
2015-10-06T17:25:08 <Bosmon> Yes, that\'s interesting, gtirloni
2015-10-06T17:25:22 <Bosmon> I guess it doesn\'t allow us to "publish any revision whenever we want", but it\'s quite close
2015-10-06T17:25:57 <colinclark> I\'m confused...
2015-10-06T17:26:07 <colinclark> so is it the case that typescript always publishes the same version?
2015-10-06T17:26:11 <colinclark> i.e. "next"?
2015-10-06T17:26:30 <Bosmon> So it seems
2015-10-06T17:26:32 <Bosmon> I wonder how it works
2015-10-06T17:27:33 <Bosmon> Aha
2015-10-06T17:27:34 <Bosmon> "dist-tags"
2015-10-06T17:27:55 <Bosmon> Here\'s an explanation of npm\'s similar process: http://blog.npmjs.org/post/98131109725/npm200
2015-10-06T17:29:09 <Bosmon> https://docs.npmjs.com/cli/dist-tag
2015-10-06T17:29:24 <Bosmon> What an endless morass of stuff
2015-10-06T17:29:28 <Bosmon> No wonder we never publish anything : P
2015-10-06T17:30:14 <colinclark> I guess that makes some sense
2015-10-06T17:30:23 <colinclark> only ever have one "development" version
2015-10-06T17:30:32 * anastasiac joined the channel
2015-10-06T17:31:22 <gtirloni> infusion.NEXT (tm)
2015-10-06T17:32:36 <colinclark> seems reasonable to me
2015-10-06T17:34:06 <colinclark> The whole section in this blob post about semver and ranges confirms my terror of semver
2015-10-06T17:34:22 <colinclark> and why I conservatively never do anything but name specific revisions my package.json file
2015-10-06T17:34:49 <colinclark> I think all of these ^ and ~ and whatever just shouldn\'t be used
2015-10-06T17:36:57 <colinclark> Justin_o or gtirloni: Can you assemble all the conceptual bits and pieces, based on this blog post from npm, about how we should publish automated unstable releases?
2015-10-06T17:37:01 <colinclark> I find myself slightly puzzled still
2015-10-06T17:42:22 <Justin_o> I don\'t think that pre-releases show up as latest
2015-10-06T17:42:49 <Justin_o> if you do "npm view express versions" you get a list of all versions including two 5.0 alphas.
2015-10-06T17:43:07 <Justin_o> if you do "npm view express version" you get the latest stable 4.13.3
2015-10-06T17:43:42 <Justin_o> 4.13.3 is also what shows up on https://www.npmjs.com/package/express
2015-10-06T17:54:17 <Justin_o> so i\'d take that to mean we don\'t have to worry about it. we could use the dist-tag to support the latest beta and/or latests nightly
2015-10-06T17:55:54 <Justin_o> colinclark, gtirloni, Bosmon: ^
2015-10-06T17:58:17 * Nadia joined the channel
2015-10-06T17:59:11 <colinclark> ok, cool
2015-10-06T17:59:29 <colinclark> Justin_o: Can summarize what you think the whole thing looks like?
2015-10-06T17:59:37 <colinclark> And then maybe gtirloni can put it on his list of stuff to help us with?
2015-10-06T17:59:57 <Justin_o> colinclark: i\'ll try :)
2015-10-06T18:01:33 <gtirloni> i think this looks fair. the nightly builds can have a version based on some hash/whatever and that gets tagged every day as \'nightly\' or something
2015-10-06T18:01:55 <cindyli> avtar is just wonderful in every possible way
2015-10-06T18:02:30 <cindyli> colinclark, gtirloni: https://gist.github.com/cindyli/35dad4ed88d74c633165
2015-10-06T18:02:46 <cindyli> and http://stackoverflow.com/questions/27758038/in-vagrant-is-it-possible-to-skip-a-folder-when-using-nfs/27760157#27760157
2015-10-06T18:03:56 <Justin_o> currently the build system is triggered on each merge into the repository, we could add on to this build step by having jenkins publish a CI version of the repo using the commit hash in the version name. example is from point 10 on http://semver.org. These can get tagged as "development", "snapshot" or something so some could either get the exact CI build or
2015-10-06T18:03:56 <Justin_o> the latest one. betas and stable releases will probably be published manually. betas can bet tagged as "beta" for example to get the latest beta.
2015-10-06T18:04:11 <Justin_o> gtirloni, colinclark: did that sound right, did i miss anything?
2015-10-06T18:05:29 <avtar> cindyli\'s \'first-discovery\' dependency lives in the parent directory of where her \'first-discovery-server\' project is located, along with the vagrantfile
2015-10-06T18:09:12 <avtar> a not so great option for making changes in the first-discovery working directory and making them available in her first-discovery-server vm is to point the latter\'s package.json to her own branch of first-discovery
2015-10-06T18:09:14 <Justin_o> avtar: that\'s a temporary thing for the development, or is that a change to first-discovery-server
2015-10-06T18:09:59 <avtar> which would involve committing changes and then running \'vagrant provision\' (which runs \'npm install\') each time something had to be tested
2015-10-06T18:11:11 <avtar> Justin_o: it\'s a temporary change but required if a non-first-discovery-server directory needs to be made available in the vm
2015-10-06T18:11:57 <Justin_o> avtar: okay
2015-10-06T18:13:36 <avtar> gtirloni: we moved away from native vbox shared folders when working with the gpii universal repo and file performance started deteriorating
2015-10-06T18:13:54 <avtar> this was about 2 - 3 years ago
2015-10-06T18:15:28 <avtar> that and nfs perform bi-directional syncing so node_modules changes end up being reflected on the host
2015-10-06T18:15:43 <avtar> and vice versa :/
2015-10-06T18:21:18 <colinclark> Justin_o: sorry, just in a call
2015-10-06T18:21:22 <colinclark> but i\'ll look as soon as i can
2015-10-06T18:23:23 <Justin_o> colinclark: thanks
2015-10-06T18:27:42 * yzen is now known as yzen_
2015-10-06T18:40:12 <cindyli> hi Bosmon
2015-10-06T18:41:04 <Bosmon> Hello there cindyli
2015-10-06T18:42:00 <cindyli> i\'m working on integrating the first discovery tool with the preference server. wonder if you have suggestions on where the transformation that converts the first discovery preferences model object to the prefs server accepted format should happen: 1. in the first discovery tool; or 2. use ontology at the server side
2015-10-06T18:42:43 <cindyli> or other methods, Bosmon
2015-10-06T18:43:14 <Bosmon> cindyli - our support for ontologies currently isn\'t good enough to make it easy for arbitrary 3rd parties to contribute ontologies, although we do want this to happen eventually
2015-10-06T18:43:23 <Bosmon> Well
2015-10-06T18:43:43 <Bosmon> Actually given we are moving FD to the GPII org, it would probably be a good opportunity to make more ontologies
2015-10-06T18:43:58 <Bosmon> So yes, I take that back - I think you should indeed try to make an ontology for this
2015-10-06T18:44:01 <Bosmon> What do you think, colinclark ?
2015-10-06T18:44:14 <colinclark> still on a call
2015-10-06T18:44:20 * clown joined the channel
2015-10-06T18:44:24 <colinclark> but i will respond as soon as i can coherently read :)
2015-10-06T18:44:55 <cindyli> Bosmon: sure. do we have a document about how to make an ontology?
2015-10-06T18:45:08 * yzen joined the channel
2015-10-06T18:45:35 <Bosmon> cindyli - well, we have this part of a document: https://wiki.gpii.net/w/GPII_Architecture_Overview#Ontologies_and_the_Ontology_Server
2015-10-06T18:45:47 <Bosmon> There\'s actually not much to an ontology other than a model transformation document, at present
2015-10-06T18:46:08 * michelled has quit
2015-10-06T18:46:55 <Bosmon> cindyli - as far as I see, all you need to do is add a suitably named document to this directory: https://github.com/GPII/universal/tree/master/testData/ontologies
2015-10-06T18:48:03 <Bosmon> cindyli - you can see the extremely simple implementation here: https://github.com/GPII/universal/blob/master/gpii/node_modules/ontologyHandler/src/ontologyHandler.js#L61
2015-10-06T18:48:04 <cindyli> Bosmon: that\'s nice. wonder how would the new document be hooked up to the prefs server.
2015-10-06T18:48:26 <Bosmon> cindyli - well, if the architecture works the way I believe it does, the so-called "prefs server" already has the ontology manager in front of it
2015-10-06T18:48:36 <Bosmon> But this is something we\'d need to confirm with kasparnet
2015-10-06T18:48:44 <cindyli> ok
2015-10-06T18:48:45 <Bosmon> Let me have a brief rummahge
2015-10-06T18:48:48 <Bosmon> rummage
2015-10-06T18:48:55 <colinclark> Bosmon: Yes, I think doing this as an "official registered ontology" makes sense
2015-10-06T18:49:02 <colinclark> IF it isn\'t going to be crazy onerous
2015-10-06T18:49:08 <colinclark> and hopefully kasparnet can help with htat
2015-10-06T18:49:58 <Justin_o> colinclark, Bosmon: do you know what kasparnet\'s schedule is these days?
2015-10-06T18:50:11 <Justin_o> when do you think we can expect to see him in the channel?
'

b'2015-10-06T15:03:02 <cindyli> anastasiac: the stand alone method is used outside of context of the prefs framework, in the case that users only want to use the component itself in their application.
2015-10-06T15:03:19 <colinclark> Justin_o: https://docs.npmjs.com/cli/adduser
2015-10-06T15:03:42 <cindyli> anastasiac: should be "outside of context of the first discovery tool"
2015-10-06T15:04:00 <anastasiac> cindyli: In those cases, is it likely they would probably be adding it as a subcomponent of one of the components in their application?
2015-10-06T15:04:44 <Justin_o> colinclark: too bad it doesn\'t work with ssh keys
2015-10-06T15:05:49 <cindyli> anastasiac: could be. or if they only need the functionality of that component, each component can be used on its own. So basically it follows all the ways of using an individual component
2015-10-06T15:06:51 <Justin_o> colinclark: i suppose jenkins gets a username and password that it can use to publish
2015-10-06T15:07:02 <colinclark> I guess so
2015-10-06T15:07:09 <Justin_o> https://www.npmjs.com/package/ci-npm-publish
2015-10-06T15:07:23 <Justin_o> but that suggests that jenkins can already publish to npm, so we might just need to setup the configuration
2015-10-06T15:07:46 <Justin_o> i also am not sure how we set the version number when we publish
2015-10-06T15:09:55 <colinclark> "npm version" might do what we want
2015-10-06T15:10:39 <colinclark> but the whole thing strikes me as somewhat brittle
2015-10-06T15:11:00 <colinclark> the real solution is to test, release, and publish more often :)
2015-10-06T15:13:55 <colinclark> It might be reasonable enough, to start, to increment our snapshot version and publish every time a pull request gets reviewed and pushed to the repository
2015-10-06T15:14:10 <colinclark> and then endeavour to hit regular beta-x milestones
2015-10-06T15:16:32 <colinclark> For your immediate issue, Justin_o, what\'s your plan?
2015-10-06T15:16:34 <Justin_o> colinclark: yes, i agree with that. we\'ll definitely still want beta-x milestones and real stable releases
2015-10-06T15:16:46 <colinclark> Will you make a little script of some kind to drive npm install and grunt dedupe?
2015-10-06T15:18:17 <Justin_o> colinclark: that\'s a good question. Here are the options as i see it 1) put the dedupe in ansible 2) write the script to run npm install and the dedupe 3) if it\'s not too much work start publishing infusion continuously now
2015-10-06T15:18:36 <colinclark> I don\'t want to rely on Ansible yet for developer-level tasks
2015-10-06T15:18:48 <colinclark> I think it\'s an incredibly valuable and powerful otol
2015-10-06T15:19:23 <colinclark> I\'m just not yet certain that we should be requiring someone to have Ansible on their machine just to be able to run the software :)
2015-10-06T15:19:36 <colinclark> I\'m open to the possibility
2015-10-06T15:19:46 <colinclark> but it seems like more overhead
2015-10-06T15:20:06 <colinclark> Your #3, I think, might be more complex and brittle than we want right now, too
2015-10-06T15:20:11 <colinclark> though, again, I\'m open to it
2015-10-06T15:20:16 <colinclark> and perhaps it\'s more straightforward than I think
2015-10-06T15:20:34 <colinclark> but managing versions may well become quite chaotic if it\'s done continuously
2015-10-06T15:20:46 <colinclark> I do think we should cut a beta-1 asap
2015-10-06T15:21:55 <colinclark> I dunno, maybe alanharn_ and gtirloni are sitting here thinking "automating all of this with CI is going to be a piece of cake, what\'s the big deal?"
2015-10-06T15:22:18 <Justin_o> yah, i wonder what their thoughts on it are
2015-10-06T15:22:41 <colinclark> but keeping track of these "virtual versions" seems a bit challenging to me
2015-10-06T15:23:05 <colinclark> does every published CI "release" get its own tag? does it get committed and pushed to the repo?
2015-10-06T15:23:39 <colinclark> and if not--if it\'s maintained as some piece of state on the CI server--how would we easily pick up the process if, say, the CI server gets zapped and reprovisioned?
2015-10-06T15:24:17 <Justin_o> colinclark: i think it would be named after the commit hash
2015-10-06T15:24:22 <Justin_o> so we could find it that way
2015-10-06T15:25:12 <Justin_o> In that sense it wouldn\'t be any more difficult that using the commit hash on the git end point. although not as nice as using real tagged versions.
2015-10-06T15:25:56 <colinclark> I guess the advantage of npm\'s package format is that it\'s a JSON file
2015-10-06T15:26:44 <colinclark> although, again, I think "npm version" should allow us to do it semi-automatically
2015-10-06T15:26:52 <colinclark> by specifying the commit hash as an argument to it
2015-10-06T15:27:27 <colinclark> well, maybe it\'s more straightforward than I imagine
2015-10-06T15:27:45 <colinclark> aside from having to make our CI server a collaborator on npm, which is quite funny :)
2015-10-06T15:29:32 <colinclark> So, Justin_o, I\'d say you should probably do #2 now, and we should get some feedback from alanharn_ and gtirloni about #3
2015-10-06T15:29:41 <colinclark> and we shoud set a date for that beta-1 release with Bosmon
2015-10-06T15:42:38 <gtirloni> caught up with you folks, slow down ;)
2015-10-06T15:42:56 <gtirloni> i\'d say do not worry about CI and jenkins, it can be done, other projects do it
2015-10-06T15:45:02 <Bosmon> colinclark - just before the release, could I get you to tidy up a few tiny pull reqs :)
2015-10-06T15:45:10 <colinclark> yes
2015-10-06T15:45:17 <colinclark> make me a list, Doc
2015-10-06T15:45:17 <Bosmon> https://github.com/fluid-project/infusion/pull/633
2015-10-06T15:45:20 <colinclark> and I will plow through them
2015-10-06T15:45:29 <Bosmon> https://github.com/fluid-project/infusion/pull/634
2015-10-06T15:45:38 <Bosmon> https://github.com/fluid-project/infusion/pull/638
2015-10-06T15:46:11 <Bosmon> https://github.com/fluid-project/infusion/pull/601
2015-10-06T15:46:25 <gtirloni> colinclark Justin_o: it seems a build script might be the cleanest/easiest way to work around npm\'s bug.. although npm\'s postinstall seems like the most elegant way to handle it
2015-10-06T15:46:39 <colinclark> yes
2015-10-06T15:46:47 <gtirloni> colinclark Justin_o: as for nightly and jenkins, you decide and we implement, i guess there is no big issue there to get it done
2015-10-06T15:46:53 <colinclark> hahaha
2015-10-06T15:47:00 <colinclark> shucks
2015-10-06T15:47:02 <colinclark> you rule
2015-10-06T15:48:09 <gtirloni> :) just let us know and we\'ll torture jenkins
2015-10-06T15:51:05 <Bosmon> colinclark - also https://github.com/fluid-project/infusion/pull/616 which I have just updated
2015-10-06T15:51:17 <Bosmon> FIVE
2015-10-06T15:51:17 <colinclark> ok, Bosmon
2015-10-06T15:51:19 * cindyli joined the channel
2015-10-06T15:51:21 <Bosmon> cheers!
2015-10-06T15:51:27 <colinclark> I am pasting them into my DO IT, TORONTO list
2015-10-06T15:51:44 * jhung joined the channel
2015-10-06T15:51:45 * sepidehshahi joined the channel
2015-10-06T15:51:46 * anastasiac joined the channel
2015-10-06T15:52:58 <colinclark> cindyli: You were asking about Vagrant in the ops channel
2015-10-06T15:53:30 <colinclark> I think avtar will probably respond on list about this at some point, but it was one of the problems I had when I used his development environment vagrant boxes this weekend
2015-10-06T15:54:02 <cindyli> did you have a solution for it, colinclark?
2015-10-06T15:54:02 <colinclark> And gtirloni\'s right that you\'ll want to make sure nodemon is running
2015-10-06T15:54:26 <colinclark> by enabling this flag: https://github.com/avtar/development-environments/blob/master/nodejs/provisioning/vars.yml#L30
2015-10-06T15:54:33 <colinclark> but there\'s another part to it, which I didn\'t realize
2015-10-06T15:54:57 <colinclark> Sneakily, you\'ll see that avtar mentions rsync here: https://github.com/avtar/development-environments#notable-vagrant-commands
2015-10-06T15:55:11 <gtirloni> i was thinking about nodemon... it monitors where the repository has been cloned to, the destination, right. so if you\'re doing work on your host environment... changing your local directory... nodemon isn\'t seeing that. colinclark makes sense?
2015-10-06T15:55:21 <colinclark> and if I understood him correctly yesterday, he was saying that at you have to run the vagrant rsync-autio command
2015-10-06T15:55:39 <colinclark> and that will ensure that your local development folder is automatically rsynced into the Vagrant VM
2015-10-06T15:55:58 <colinclark> gtirloni: I suspect that is the case, but I don\'t know
2015-10-06T15:56:29 <colinclark> cindyli: try "vagrant rsync-auto" and see if it works for you
2015-10-06T15:56:30 <colinclark> I\'m curious
2015-10-06T15:56:38 <colinclark> Apparently all of this rsync stuff is a bit of a hack
2015-10-06T15:56:50 <colinclark> due to the fact that Virtual Box\'s folder sharing is very, very slow
2015-10-06T15:57:10 <colinclark> Logging is still an issue as well
2015-10-06T15:57:20 <colinclark> cindyli: How are you accessing logs for your server running inside the Vagrant box?
2015-10-06T15:57:30 <Justin_o> colinclark: i was using vagrant rsync-auto before and it was working fine. for the first-discovery-server work
2015-10-06T15:57:34 <Justin_o> cindyli: ^
2015-10-06T15:57:36 <colinclark> cool
2015-10-06T15:58:23 <cindyli> colinclark, gtirloni, Justin_o, what i need to resync is a dependency - https://github.com/fluid-project/first-discovery-server/blob/master/package.json#L29
2015-10-06T15:58:30 <cindyli> would the resync command still work
2015-10-06T15:58:34 <cindyli> trying..
2015-10-06T15:58:45 <colinclark> ahhh
2015-10-06T15:58:48 <colinclark> fascinating, yes
2015-10-06T15:58:55 <colinclark> I suspect not
2015-10-06T15:59:16 <colinclark> This kind of situation is bad enough without the added indirection of Vagrant
2015-10-06T15:59:30 <Justin_o> cindyli: i believe we pulled out the node_modules directory from syncing. it would sync the change to the package.json but you\'d have to run npm install again in the vm
2015-10-06T15:59:36 <colinclark> but we\'ll need to have a good solution for it before this model of developing in a Vagrant box will be viable at all
2015-10-06T15:59:59 <colinclark> Justin_o: The issue, of course, is when you\'re actively developing the dependency
2015-10-06T16:00:08 <cindyli> Justin_o: but how would resync knows where my first-discovery source code is located?
2015-10-06T16:00:22 <colinclark> People typically either use npm link or they do it manually by doing something like "npm install ../first-discovery"
2015-10-06T16:00:43 <colinclark> and presumably we are, with our Vagrant setup, unable to do either of these things
2015-10-06T16:01:05 <Justin_o> colinclark: probably, unless you had it sitting in a sibling directory that you didn\'t merge
2015-10-06T16:01:17 <colinclark> I\'m not sure I understand
2015-10-06T16:02:27 <Justin_o> you\'d have to combine your suggestions sort of.. which is have a a directory beside node_modules in the host with the code you are developing as a dependency.. then refer to it like that, as this directory would be rsynced over
2015-10-06T16:02:57 <Justin_o> hopefully there\'d be a better solution though
2015-10-06T16:05:04 <colinclark> yes
2015-10-06T16:05:23 <colinclark> If there isn\'t, this model of developing in a vagrant box may be doomed :(
2015-10-06T16:07:27 <colinclark> Justin_o: How have you managed logging in the virtualbox?
2015-10-06T16:07:45 <colinclark> Did avtar teach you the secret Linuxy tools used to query the logs inside the VM?
2015-10-06T16:07:52 <colinclark> presumably via SSHing into the vagrant box?
2015-10-06T16:08:03 <Justin_o> colinclark:  no i haven\'t seen the logs yet
2015-10-06T16:08:09 <colinclark> ouch :)
2015-10-06T16:08:13 <Justin_o> yah :(
2015-10-06T16:08:20 <colinclark> ok
2015-10-06T16:08:23 <cindyli> the resync command seems hanging without finishing up. from the output console log so far, as you guys have predicted, not resyncing dependencies
2015-10-06T16:08:31 <colinclark> you and cindyli are totally avtar\'s guinea pigs :) :)
2015-10-06T16:08:39 <cindyli> lol
2015-10-06T16:10:00 <gtirloni> avtar is testing a way to make the logs available on your host\'s browser
2015-10-06T16:10:09 <colinclark> yep, he mentioned that yesterday
2015-10-06T16:10:12 <colinclark> it could be cool
2015-10-06T16:10:25 <gtirloni> i don\'t know a lot about the rsync or vagrant\'s sync capabilities for that matter, i\'ll have to read up on those
2015-10-06T16:10:31 <colinclark> I\'d still love them to be somehow magically redirected to the terminal where I ran "vagrant up"
2015-10-06T16:12:10 <gtirloni> something like `docker logs` but for vagrant :)
2015-10-06T16:13:48 <cindyli> i guess what i can do for now to resync this dependency is to push up the code into a github branch and modify package.json to point the dependency to use that branch. This requires a frequent push-up tho
2015-10-06T16:15:57 <cindyli> and every time destroy and re-install vagrant vm
2015-10-06T16:16:57 <gtirloni> that will take a while
2015-10-06T16:17:35 <gtirloni> colinclark: i\'m not too familiar with virtualbox\'s sharing capabilities.. i expected it to use cifs/smb and be instantaneous.
2015-10-06T16:17:56 <colinclark> What\'s docker logs, gtirloni?
2015-10-06T16:18:18 <colinclark> avtar mentioned that cifs/smb would require "elevated privileges" which is why he didn\'t use it (I think)
2015-10-06T16:18:25 <gtirloni> colinclark: `docker logs` fetches the container\'s logs.. stdout/stderr
2015-10-06T16:19:14 <gtirloni> elevated privileges inside the VM seems okay i think.. outside the VM we\'re already tapping into a kernel driver, not much more elevation from there
2015-10-06T16:19:45 <gtirloni> i\'ll check with him
2015-10-06T16:20:38 * danayo joined the channel
2015-10-06T16:23:44 <colinclark> makes sense, gtirloni
2015-10-06T16:24:23 <colinclark> And the existence of "docker logs" is one more win for Docker in my mind ;)
2015-10-06T16:28:06 <colinclark> I have this strange feeling like it might be interesting to "shadow" the Vagrant box work (which I think is awesome) with its plain Docker equivalent, just to see what it\'s like from a "developer experience" perspective, alanharn_ and gtirloni.
2015-10-06T16:28:10 <colinclark> as a point of comparison for us
2015-10-06T16:29:33 <gtirloni> it\'ll be interesting to replicate the functionality and see how it goes. if the docker base images used by the containers are the same we\'ll be using on the servers, then it achieves using the same environment
2015-10-06T16:29:39 <avtar> colinclark, gtirloni: "To configure NFS, Vagrant must modify system files on the host. Therefore, at some point during the vagrant up sequence, you may be prompted for administrative privileges (via the typical sudo program). These privileges are used to modify /etc/exports as well as to start and stop the NFS server daemon."
2015-10-06T16:29:39 <avtar> https://docs.vagrantup.com/v2/synced-folders/nfs.html
2015-10-06T16:29:44 * slim_ joined the channel
2015-10-06T16:30:15 <colinclark> avtar, you\'re here!
2015-10-06T16:30:20 <avtar> another issue that Justin_o pointed out was excluding the node_modules directory from the sync
2015-10-06T16:30:27 <colinclark> yeah
2015-10-06T16:30:32 <colinclark> cindyli, I think, is stuck now
2015-10-06T16:30:41 <colinclark> in that she is actually developing two interdependent modules
2015-10-06T16:30:51 <colinclark> and it\'s unclear how that works within this workflow
'

b'2015-10-06T02:07:52 <sgithens> Does jira seem really slow for anyone else right now?
2015-10-06T03:03:00 * colinclark joined the channel
2015-10-06T06:25:06 * the-t-in-rtf joined the channel
2015-10-06T08:58:33 * slim_ joined the channel
2015-10-06T09:03:44 * slim__ joined the channel
2015-10-06T09:57:16 * kasparnet joined the channel
2015-10-06T09:57:21 * kasparnet has quit
2015-10-06T10:03:41 * danayo joined the channel
2015-10-06T11:33:17 * danayo joined the channel
2015-10-06T11:53:12 * slim_ has quit
2015-10-06T12:06:15 * yzen joined the channel
2015-10-06T12:26:14 * alanharnum joined the channel
2015-10-06T12:26:22 * jhung joined the channel
2015-10-06T12:38:05 * Justin_o joined the channel
2015-10-06T12:41:27 * yzen joined the channel
2015-10-06T13:02:40 * gtirloni joined the channel
2015-10-06T13:02:50 * cindyli joined the channel
2015-10-06T13:03:34 * danayo joined the channel
2015-10-06T13:12:09 * sepidehshahi joined the channel
2015-10-06T13:20:59 * jessm joined the channel
2015-10-06T13:24:15 * anastasiac joined the channel
2015-10-06T13:26:42 * anvk joined the channel
2015-10-06T13:35:50 * yzen joined the channel
2015-10-06T13:37:29 * simonjb joined the channel
2015-10-06T13:45:42 * colinclark joined the channel
2015-10-06T13:48:09 * anastasiac joined the channel
2015-10-06T13:48:47 * clown joined the channel
2015-10-06T13:49:05 <colinclark> Justin_o, Bosmon, gtirloni: So where did we get with our npm issue? It is indeed a bug?
2015-10-06T13:56:37 * kasparnet joined the channel
2015-10-06T14:01:58 * kasparnet has quit
2015-10-06T14:06:58 * danayo joined the channel
2015-10-06T14:10:32 * cindyli joined the channel
2015-10-06T14:24:35 <colinclark> Bosmon: The npm ticket was very depressing
2015-10-06T14:24:46 <Bosmon> colinclark - here is the ticket: https://github.com/npm/npm/issues/4134
2015-10-06T14:24:58 <Bosmon> Yes, a depressing sample of "open source life"
2015-10-06T14:25:24 <Bosmon> That is, the usual intransigence of a project leader in the face of a user requirement that isn\'t to his taste
2015-10-06T14:26:15 <colinclark> Weirdly, I\'m sure the reason I settled on trying postinstall scripts was because of an npm, Inc. blog about how npm scripts were useful, and should be used
2015-10-06T14:26:32 <Bosmon> Yes, schizophrenia too : P
2015-10-06T14:26:40 <Bosmon> But I imagine that, in time, they actually will fix this bug
2015-10-06T14:26:46 <Bosmon> In the meantime, we are stumped
2015-10-06T14:26:49 <colinclark> yep, I\'m sure you\'re right
2015-10-06T14:26:55 <colinclark> My big concern, and I guess we can talk about it when Justin_o is back, is not putting significant toolchain requirements on our repositories
2015-10-06T14:27:07 <colinclark> I think we might want to settle on a strategy that involves pure Node.js scripts
2015-10-06T14:27:15 <colinclark> and then invoke them from more sophisticated tools such as Ansible
2015-10-06T14:27:17 <Bosmon> Yes
2015-10-06T14:27:28 <Bosmon> A question is how exactly we invoke these on Windows
2015-10-06T14:27:35 <colinclark> Node.js scripts?
2015-10-06T14:27:39 <Bosmon> yes, those
2015-10-06T14:27:41 <colinclark> oh dear
2015-10-06T14:27:43 <colinclark> what\'s the issue?
2015-10-06T14:27:49 <colinclark> I thought that was the whole point of Node.js :P
2015-10-06T14:27:52 <Bosmon> hahaha
2015-10-06T14:27:58 <Bosmon> Sure - but what actually invokes node.js?
2015-10-06T14:28:45 <colinclark> I guess we should back up a bit
2015-10-06T14:29:15 <colinclark> Justin_o sent me a fragment of the chat you had in the ops channel
2015-10-06T14:29:31 <colinclark> and I think you were suggesting that dedupe-infusion should be run by "an install script"
2015-10-06T14:29:38 <Bosmon> Yes
2015-10-06T14:29:42 <colinclark> i.e. a thing that invokes npm install and grunt dedupe-infusion
2015-10-06T14:29:55 <Bosmon> Not the most brilliantly helpful suggestion, I\'ll admit....
2015-10-06T14:29:56 <colinclark> I was suggesting that this thing should, itself, be a plain (i.e. dependency-free) Node.js script
2015-10-06T14:30:00 <Bosmon> Yes
2015-10-06T14:30:03 <Bosmon> That seems reasonable to me
2015-10-06T14:30:16 <Bosmon> Even though this doesn\'t succeed in pushing back the issue 100%, it\'s the best we can do
2015-10-06T14:31:02 <Bosmon> Although I think we\'ll find that making it dependency-free is too much of a bite
2015-10-06T14:31:11 * kasparnet joined the channel
2015-10-06T14:31:29 <colinclark> I guess we probably will
2015-10-06T14:31:36 <colinclark> and dependency-free isn\'t the crucial issue
2015-10-06T14:31:44 <colinclark> in that we know that we can control when certain things run
2015-10-06T14:31:50 <colinclark> in contrast to npm postinstall
2015-10-06T14:32:07 <Bosmon> yes
2015-10-06T14:32:25 <colinclark> It sounds like our initial plan would still work
2015-10-06T14:32:34 <Bosmon> The fact that, after node 0.12, that we have access to execSync will be a big help towards being dependency-free
2015-10-06T14:32:38 <colinclark> i.e. to port the dedupe-infusion logic into a plain JS micromodule
2015-10-06T14:32:51 <colinclark> assuming we\'re comfortable using postinstall scripts, which npm maintainers tell us we shouldn\'t
2015-10-06T14:32:53 <colinclark> :P
2015-10-06T14:33:07 <Bosmon> But I think there will be various things that we\'ll always want (smallish) dependencies for - such a walking filesystems, deleting things recursively, etc.
2015-10-06T14:33:19 <colinclark> ah, yes
2015-10-06T14:33:23 <colinclark> that makes sense
2015-10-06T14:33:24 <colinclark> So, remind me...
2015-10-06T14:33:34 <colinclark> if we publish Infusion...
2015-10-06T14:33:42 <colinclark> will this address the duplication issue?
2015-10-06T14:33:48 <colinclark> publish in npm, I mean
2015-10-06T14:33:51 <Bosmon> colinclark - yes, I believe it will
2015-10-06T14:34:55 <colinclark> I guess that we still need a workable strategy for in between, but it sounds like we should put a priority on that
2015-10-06T14:35:08 <colinclark> I know that Justin_o and gtirloni and alanharn_ have sunk a lot of time into debugging this
2015-10-06T14:35:13 <colinclark> and for that I am grateful
2015-10-06T14:35:40 * kasparnet has quit
2015-10-06T14:41:20 * michelled joined the channel
2015-10-06T14:45:52 * jhung joined the channel
2015-10-06T14:46:57 * scott_gonzalez joined the channel
2015-10-06T14:48:47 <Justin_o> colinclark, Bosmon: I\'m back and caught up
2015-10-06T14:48:52 <colinclark> cool
2015-10-06T14:49:00 <colinclark> sorry to have missed you
2015-10-06T14:49:03 <colinclark> any thoughts so far?
2015-10-06T14:49:39 <jhung> anastasiac: now that you\'ve worked with docs-template + core a little, do you think there\'s anything missing that would hold it back from being added to the fluid project space?
2015-10-06T14:50:27 <jhung> I\'ve tweaked the readme\'s a little, but more needs to be added, especially about customization (css, navigation etc)
2015-10-06T14:50:38 <anastasiac> other than the things I mentioned in my email yesterday, jhung, no. It\xe2\x80\x99s working well.
2015-10-06T14:50:47 <anastasiac> I was going to mention the css, but you beat me to it :_)
2015-10-06T14:51:32 <Justin_o> colinclark, Bosmon: my first question would be, how does publishing help solve this issue?
2015-10-06T14:51:33 <jhung> Maybe that can be a separate issue to tackle once it\'s in the Project.
2015-10-06T14:51:37 <jhung> ^anastasiac
2015-10-06T14:51:43 <anastasiac> For CSS, maybe at least just recommend that style overrides go in their own file (instead of editing the original file)
2015-10-06T14:51:50 <colinclark> Justin_o: We won\'t have duplicate instances of Infusion in the dependency tree
2015-10-06T14:51:56 <colinclark> npm will do its job properly
2015-10-06T14:51:56 <jhung> ok good point anastasiac
2015-10-06T14:52:00 <anastasiac> yes, we could certainly continue to improve it after it\xe2\x80\x99s public
2015-10-06T14:52:10 <colinclark> which it used to do for git repository hashes, but hasn\'t for a long time
2015-10-06T14:52:13 <Justin_o> colinclark: so the only reason you get duplicates is because of the git end point?
2015-10-06T14:52:21 <colinclark> Yes, that\'s the theory
2015-10-06T14:52:32 <jhung> I\'ll add a section about the important files at least - the layouts, the structure, css.
2015-10-06T14:52:33 <Justin_o> colinclark: what happens in the case where dependencies ask for a different version of a package?
2015-10-06T14:52:43 <colinclark> Then you\'ve got a problem, Justin_o
2015-10-06T14:53:09 <Justin_o> colinclark: would that be an issue with our current dedupe mechanism as well? or is it specific to how npm works?
2015-10-06T14:53:09 <colinclark> At this point, we don\'t have a way for Infusion to support multiple versions in Node.js
2015-10-06T14:53:27 <colinclark> I guess it depends what "issue" means...
2015-10-06T14:53:35 <colinclark> it\'s a limitation of Infusion as it currently stands
2015-10-06T14:53:54 <colinclark> our deduping mechanism will pare down multiple versions of Infusion to one
2015-10-06T14:54:10 <colinclark> causing, potentially, systems that try to mix multiple Infusions to fail
2015-10-06T14:54:22 <colinclark> it\'s not ideal, and it is certainly a problem
2015-10-06T14:54:31 <Justin_o> colinclark: okay, so the dedupe will still happen, but could cause version related problems
2015-10-06T14:54:41 <colinclark> yes
2015-10-06T14:55:56 <Justin_o> colinclark: what is preventing us from publishing to npm right now? is it related our build infrastructure or something else?
2015-10-06T14:56:03 <colinclark> Nothing is preventing us
2015-10-06T14:56:08 <colinclark> other than cutting a release of some kind
2015-10-06T14:56:58 <Justin_o> colinclark:  we could publish with the build system i guess.. although not sure how much work that would be.. however it is supported by semver
2015-10-06T14:57:15 <colinclark> I\'m not sure what you mean?
2015-10-06T14:57:27 <colinclark> publish with the build system?
2015-10-06T14:57:34 <colinclark> tell me more :)
2015-10-06T14:57:55 <Justin_o> point 10 from here http://semver.org
2015-10-06T14:58:07 <Justin_o> basically you can append build metadata to the version number
2015-10-06T14:58:46 <colinclark> yes
2015-10-06T14:58:51 <Justin_o> in that sense when a build is triggered we publish an npm module infusion as something like 2.0.0-beta.1+hash
2015-10-06T14:58:51 <colinclark> we already do that, in a sense
2015-10-06T14:59:00 <colinclark> it\'s just not very specific :)
2015-10-06T14:59:18 <colinclark> you\'re suggesting publishing to npm on a nightly schedule via some kind of automated mechanism?
2015-10-06T14:59:19 <Justin_o> colinclark: you mean in how we use the commit hash on the git endpoints?
2015-10-06T14:59:26 <colinclark> no
2015-10-06T14:59:29 <Justin_o> colinclark: yep
2015-10-06T14:59:51 <colinclark> I mean the giant SNAPSHOT here: https://github.com/fluid-project/infusion/blob/master/package.json#L4
2015-10-06T14:59:52 <Justin_o> "nightly" being on build, which would happen on merge into the project repo
2015-10-06T15:00:00 <anastasiac> cindyli: I\xe2\x80\x99m looking at the FD tool api docs, and many of the pages describe two options for adding the component; the second is as a \xe2\x80\x9cstandalone\xe2\x80\x9d component e.g. https://wiki.fluidproject.org/display/fluid/Navigation+Icons+API  Do we ever use the standalone method? Do we ever recommend it?
2015-10-06T15:00:17 <colinclark> It seems like a fairly reasonable idea, Justin_o
2015-10-06T15:00:29 <colinclark> I\'m not sure how the publishing credentials will work
2015-10-06T15:00:43 <colinclark> I\'ve only ever published to npm on projects where I\'m the only publisher
2015-10-06T15:00:48 <colinclark> and it is done manually
2015-10-06T15:01:11 <Justin_o> colinclark: yah, i\'ve never published so i\'m not sure
2015-10-06T15:02:28 <Justin_o> colinclark: i\'m looking at https://docs.npmjs.com/cli/publish but it doesn\'t seem to require any credentials
2015-10-06T15:02:32 <Justin_o> or maybe i\'m missing something
2015-10-06T15:02:50 <colinclark> yeah
2015-10-06T15:03:00 <colinclark> One doesn\'t want random people publishing one\'s repository :)
'


b'2015-04-13T16:57:29 <danaayotte> Justin_o anastasiac: joanna had included the key icon in the "fullset" of font icons - are you sure we don\'t have it already?
2015-04-13T16:58:08 <anastasiac> danaayotte, I know for sure that it\xe2\x80\x99s not actually in the font we\xe2\x80\x99re using. The icon might exist already somewhere and just need to be added to our font file
2015-04-13T16:59:17 <danaayotte> not sure what that means anastasiac - what do you need me to do in that case?
2015-04-13T17:02:26 <anastasiac> danaayotte, are you able to add the icon to the set of icons and re-generate the font files?
2015-04-13T17:02:38 * sepideh has quit
2015-04-13T17:10:02 <danaayotte> yes anastasiac i\'ll tack it on and regenerate
2015-04-13T17:10:13 <anastasiac> thanks, danaayotte
2015-04-13T17:23:06 <danaayotte> anastasiac, Justin_o: how\'s this? https://www.dropbox.com/s/o7fsliniqdtgsh1/Apr%2013%20with%20key.zip?dl=0
2015-04-13T17:23:16 * cindyli has quit
2015-04-13T17:23:55 <anastasiac> beautiful, danaayotte, thanks!
2015-04-13T18:00:13 * kasparnet has quit
2015-04-13T18:02:15 * kasparnet joined the channel
2015-04-13T18:14:44 * sepideh joined the channel
2015-04-13T18:14:50 * cindyli joined the channel
2015-04-13T18:18:10 <Justin_o> danaayotte: thanks
2015-04-13T18:26:43 * the-t-in-rtf has quit
2015-04-13T18:27:09 * the-t-in-rtf joined the channel
2015-04-13T18:30:15 <cindyli> anastasiac, Justin_o, jhung: when I click "download infusion" button on this page - http://fluidproject.org/infusion.html, it leads me to the github infusion main page instead of github releases page. for ppl who want to download infusion releases, this might be confusing. Greg has trouble finding release download. do we have another page or link for that? if not, we probably should make it clear where to download releases. what do you think
2015-04-13T18:33:22 <Justin_o> cindyli: those aren\'t builds either though.. so we should give them the expectation that they\'ll need to run a build either way.
2015-04-13T18:33:46 <Justin_o> or actually post a build
2015-04-13T18:34:11 <Justin_o> maybe we should host a couple versions of infusion in the cdn
2015-04-13T18:34:20 <Justin_o> sorry couple builds of infusion
2015-04-13T18:35:31 <anastasiac> We should probably update that page a) have two links, one  the releases and one to master, and b) add some text that makes it clear that after you download infusion, you will have to follow the instructions to make a build. How does that sound, cindyli and Justin_o?
2015-04-13T18:36:28 <cindyli> anastasiac, Justin_o: i don\'t think it\'s realistic for all users to going thru the trouble of building infusion themselves
2015-04-13T18:37:04 <cindyli> we probably should consider having both approaches that Justin_o suggested: post builds and host infusion in the cdn
2015-04-13T18:37:07 <anastasiac> cindyli, really? If the need a build, they\xe2\x80\x99re developers, right?
2015-04-13T18:37:41 <cindyli> not really, atutor is using it but Greg is not a developer, anastasiac
2015-04-13T18:37:57 <anastasiac> how is he using it, then?
2015-04-13T18:38:39 <cindyli> Well, Greg can do development in some extends but his expertise is in other area instead of grunt or javascript
2015-04-13T18:39:36 <cindyli> he wants to upgrade infusion, what he expects is to download the new infusion and replace the old one, hopefully infusion backward compatibility will take care of the rest, anastasiac
2015-04-13T18:39:52 <anastasiac> ah, I see
2015-04-13T18:40:27 <anastasiac> ok, well, this is a larger issue of how we should manage questions of builds vs. source
2015-04-13T18:41:23 <cindyli> that\'s true. we probably should discuss it in a community meeting, what do u think, anastasiac and Justin_o
2015-04-13T18:41:54 <anastasiac> yes, we should discuss this with the entire team
2015-04-13T18:42:00 <Justin_o> anastasiac, cindyli: there are probably developers out there that don\'t use or don\'t want to use grunt.. gulp is getting popular these days too.. although we will eventually need to support package managers too
2015-04-13T18:42:06 <Justin_o> yes.. agreed
2015-04-13T18:47:02 * Bosmon8 joined the channel
2015-04-13T18:47:38 <Bosmon> Hi there cindyli - did it work out ok?
2015-04-13T18:48:08 <cindyli> i\'m in the process of trying it, will let you know in a few minutes, Bosmon
2015-04-13T18:48:15 <Bosmon> Cheers cindyli
2015-04-13T18:48:42 * Bosmon7 has quit
2015-04-13T18:56:15 <cindyli> Bosmon: unfortunately, didn\'t seem to work. i tried two type of demands blocks, none of them worked - http://pastebin.com/ctRe7WWK
2015-04-13T18:57:20 <anastasiac> Justin_o, my FLUID-5550 docs pull request is ready for another round of review
2015-04-13T18:58:31 <Bosmon> cindyli - I don\'t see the grade gpii.firstDiscovery.tooltip in the code you pasted before
2015-04-13T18:58:36 <Bosmon> Could you check it in, and I can test it out?
2015-04-13T19:00:27 <cindyli> sure, Bosmon. i probably did it wrong somewhere, even if I commented out the top level distribute options, the new styling in the demands block doesn\'t apply
2015-04-13T19:00:34 <cindyli> pushing up anyway
2015-04-13T19:00:55 <Bosmon> I guess we are all forgetting how demands blocks work :)
2015-04-13T19:02:02 <cindyli> at least me, ;)
2015-04-13T19:04:55 <cindyli> Bosmon: pushed, here are those demands blocks - https://github.com/cindyli/first-discovery/blob/FLOE-281/src/js/panels.js#L399-L415
2015-04-13T19:06:41 <cindyli> Bosmon: just in case, u probably already knew, the first discovery tool demo only runs in chrome and safari, not firefox, due to the browser built-in text to speech support
2015-04-13T19:06:51 <Bosmon> cindyli - right
2015-04-13T19:06:56 <Bosmon> So, cindyli, where is the definition of gpii.firstDiscovery.tooltip ?
2015-04-13T19:07:25 <cindyli> https://github.com/cindyli/first-discovery/blob/FLOE-281/src/js/tooltip.js#L30, Bosmon
2015-04-13T19:07:33 <Bosmon> cindyli - that grade doesn\'t have the right name
2015-04-13T19:07:37 <Justin_o> cindyli, anastasiac: i\'m thinking we probably won\'t have enough for a full community meeting to talk about the build stuff.. cindy, when you have time, could you please send an e-mail to the fluid-work list with the issue and the use case for it. Hopefully we\'ll be able to work it out on list
2015-04-13T19:08:14 <Bosmon> cindyli - I think you meant to write "fluid.tooltip" rather than "gpii.firstDiscovery.tooltip"
2015-04-13T19:08:22 <cindyli> yes, of course, good catch, Bosmon
2015-04-13T19:08:26 <Bosmon> In your demands block
2015-04-13T19:08:44 <cindyli> genius, it WORKS!!!
2015-04-13T19:09:02 <cindyli> THANKS BOSMON
2015-04-13T19:09:21 <Bosmon> cool
2015-04-13T19:13:11 <anastasiac> jhung, I can\xe2\x80\x99t seem to get your FLUID-5609 branch to run properly. docpad does its startup thing, but the browser can\xe2\x80\x99t load anything.
2015-04-13T19:18:20 <jhung> Any errors anastasiac?
2015-04-13T19:18:55 <anastasiac> nope, jhung, nothing in the docpad output. Is there a seperate error log I could check?
2015-04-13T19:19:50 <jhung> It would log errors directly to stdout anastasiac.
2015-04-13T19:20:00 <jhung> Let me see if it
2015-04-13T19:20:22 <jhung> \'s a version issue. Let me find out what versions I have anastasiac.
2015-04-13T19:30:31 <danaayotte> anastasiac: we\'re implementing sticky keys for now? (not key repeat?)
2015-04-13T19:32:12 <jessm> danaayotte: anastasiac: i think we have a vocab problem with the above \xe2\x80\x94 is that possible?
2015-04-13T19:32:34 <danaayotte> ?
2015-04-13T19:32:54 <anastasiac> jessm, I\xe2\x80\x99ve been meaning to clarify that. Based on the tasking, we decided to implement sticky keys instead of repeat delay
2015-04-13T20:02:03 <Bosmon> Hey Justin_o - by means of a DEVILISH TRICK I have succeeded in making "new invokers" only 2x as slow as "old fast invokers" ...
2015-04-13T20:02:15 <Bosmon> So I think it is now "fair enough" that "fast invokers" can be abolished
2015-04-13T20:02:31 <Bosmon> Since they were always just an annoyance that every framework user could stub their toe on.....
2015-04-13T20:03:48 <Justin_o> Bosmon: hard for me to argue with that
2015-04-13T20:04:01 <Justin_o> depending on the how devlish the trick is i guess
2015-04-13T20:04:08 <Bosmon> Well, it\'s not that bad :)
2015-04-13T20:04:22 <Bosmon> I guess it could be called the use of "monomorphic expanders"
2015-04-13T20:04:33 <Bosmon> Our reading into how JS VMs actually work has been highly fruitful, I think
2015-04-13T20:04:49 <Justin_o> :)
2015-04-13T20:04:51 <Bosmon> I found a huge proportion of the remaining cost of my implementation of this morning was simply calls to "fluid.isPlainObject"
2015-04-13T20:05:09 <Bosmon> Which emphasises that the VM is being annoyed by repeatedly iterating over material of uncertain type
2015-04-13T20:05:39 <Bosmon> So what I did was create a "preExpand" action that finds all the expanders in the tree and hoists them out into a flat array named "expanders" where they are all lined up with identical "hidden classes"
2015-04-13T20:06:02 <Bosmon> So when we come to actually expand the arguments for a "new invoker" we just iterate over this area in a simple loop and execute simple function calls all of whose types are stable
2015-04-13T20:06:20 <Bosmon> And the VM rewards us for this virtuous behaviour by speeding up the execution by a further 2x
2015-04-13T20:06:35 <Justin_o> :)
2015-04-13T20:06:49 <Justin_o> sorry, i have to run now.. but i\'d like to know more
2015-04-13T20:06:56 <Bosmon> Which makes a grand total of 50x speedup since I started optimisation on Friday : P
2015-04-13T20:07:17 <Bosmon> cool well, I\'ll be happy to talk at length another time :)
2015-04-13T20:10:19 * the-t-in-rtf has quit
2015-04-13T20:26:05 * orepa joined the channel
2015-04-13T20:26:14 <orepa> does this channel have anything to do with fluid dynamics?
2015-04-13T20:27:38 <jessm> orepa: nope. we\xe2\x80\x99re an open source community building inclusive design solutions for the Web
2015-04-13T20:27:47 <orepa> sorry
2015-04-13T20:27:59 <jessm> i mean, fluid dynamics is everywhere, but not specifically here :)
2015-04-13T20:28:06 <orepa> hah
2015-04-13T20:31:16 <danaayotte> cindyli: for first discovery tool we have not implemented different tooltips for focus state vs hover state, have we?
2015-04-13T20:31:36 * orepa has left the channel
2015-04-13T20:32:00 <cindyli> no, danaayotte, we haven\'t done that
2015-04-13T20:33:54 <danaayotte> ok thanks cindyli
2015-04-13T20:34:10 <cindyli> Bosmon: i just noticed a side effect of using the tooltip demands block, the new styling also gets applied to other panel components. odd...
2015-04-13T20:35:38 <Bosmon> cindyli - probably because the parent context name is visible as being a "sibling of parent"
2015-04-13T20:36:00 <Bosmon> You should be able to eliminate this effect by targetting it a bit more precisely
2015-04-13T20:36:11 <Bosmon> The old demands block model was certainly a bit peculiar :)
2015-04-13T20:36:52 <cindyli> Bosmon: i\'m using the panel component name "gpii.firstDiscovery.panel.lang" as the context component. can it be more precise?
2015-04-13T20:37:21 <Bosmon> cindyli - it might have to be the name of a subcomponent of the panel rather than the panel itself
2015-04-13T20:37:33 <Bosmon> Since the panel name itself is probably visible to every subcomponent of any panel
2015-04-13T20:38:05 <cindyli> the only subcomponent of this panel is fluid.tooltip, Bosmon
2015-04-13T20:38:16 <Bosmon> cindyli - right - so you might have to make another level of containment
2015-04-13T20:38:19 * anvk has quit
2015-04-13T20:38:20 <Bosmon> Sorry : P
2015-04-13T20:38:22 <Bosmon> http://wiki.fluidproject.org/display/docs/Contexts
2015-04-13T20:38:23 <cindyli> ok, i see
2015-04-13T20:38:28 <Bosmon> Here\'s that diagram again, for ready reference :)
2015-04-13T20:38:43 <Bosmon> The issue here is, for example, that the panel represents a component like the one with number "8" in the diagram
2015-04-13T20:38:52 <Bosmon> Which means that it is visible to all descendents of siblings
2015-04-13T20:39:36 <Bosmon> The "distributeOptions" model is clearly much cleaner, but of course, we have this problem that the version currently in trunk has no defined system for resolving priority
2015-04-13T20:39:54 <cindyli> ok, i see
2015-04-13T20:40:21 <Bosmon> "demands" have a wider spread, in that they hit any component which can "see" the context name from UNDERNEATH
2015-04-13T20:40:27 <Bosmon> Rather than broadcasting options downwards
2015-04-13T20:41:33 <cindyli> didn\'t know "demands" has that wide spread.
2015-04-13T20:42:20 <cindyli> not too late ;)
2015-04-13T20:43:22 * cindyli has quit
2015-04-13T20:43:39 * jessm has quit
2015-04-13T20:43:39 * kasparnet has quit
2015-04-13T20:53:43 * clown has left the channel
2015-04-13T20:56:56 * jhung has left the channel
2015-04-13T21:05:52 * sepideh has quit
2015-04-13T21:22:59 * anastasiac has quit
2015-04-13T21:55:05 * Bosmon7 joined the channel
2015-04-13T21:57:44 * Bosmon8 has quit
2015-04-13T22:07:09 * simonjb has quit
2015-04-13T22:16:35 * Justin_o has quit
2015-04-13T22:34:35 * danaayotte has quit
2015-04-13T22:59:01 * Bosmon has quit
2015-04-13T23:03:08 * Bosmon joined the channel
'

b'2015-04-13T07:01:01 * the-t-in-rtf joined the channel
2015-04-13T07:51:03 * slim_jim joined the channel
2015-04-13T09:16:19 * slim_jim has quit
2015-04-13T11:12:12 * gtirloni joined the channel
2015-04-13T12:16:50 * jhung joined the channel
2015-04-13T12:32:34 * Justin_o joined the channel
2015-04-13T12:48:17 * jessm joined the channel
2015-04-13T12:50:18 * simonjb joined the channel
2015-04-13T13:09:10 * cindyli joined the channel
2015-04-13T13:10:06 * anvk joined the channel
2015-04-13T13:14:50 * sepideh joined the channel
2015-04-13T13:16:43 <Justin_o> Bosmon7, Bosmon
2015-04-13T13:16:51 <Bosmon> Hi there Justin_o
2015-04-13T13:16:54 <Justin_o> just wanted to remind you that you are scheduled to lead the community meeting this week
2015-04-13T13:17:00 <Justin_o> on the new Infusion framework changes
2015-04-13T13:17:03 <Bosmon> oh yes, cool
2015-04-13T13:17:07 <Justin_o> thanks :)
2015-04-13T13:17:11 <Bosmon> I had better work on some docs pages for them
2015-04-13T13:17:16 <Justin_o> :) yes please
2015-04-13T13:17:19 * anastasiac joined the channel
2015-04-13T13:18:32 <Bosmon> Justin_o - actually this Wednesday is looking a little bad - would it make a mess if I asked to put it off till next Wednesday?
2015-04-13T13:18:58 <Justin_o> Bosmon:  that should be okay.. i\'ll try to find something to slot into this week
2015-04-13T13:19:01 <Justin_o> thanks for letting me know
2015-04-13T13:19:20 <Bosmon> Cool, I can do it if we can\'t find an alternative topic, but I\'d prefer next week if possible
2015-04-13T13:19:53 <Justin_o> Let\'s do next week.... i didn\'t have anything scheduled for then either :)
2015-04-13T13:20:09 <Bosmon> ok, it\'ll give me a bit more time for docs pages too
2015-04-13T13:20:19 <Bosmon> I realised what I said last week wasn\'t quite accurate, there are quite a number of new features
2015-04-13T13:21:04 <Justin_o> ah okay.. yes.. it would be great to have the docs for that at the same time
2015-04-13T13:21:12 <Bosmon> Also this weekend I started to explore the ambitious possibility of removing "fast invokers" from the framework, which is also an annoyance on which new users could stub their toes
2015-04-13T13:21:30 <Justin_o> Bosmon: what would those be replaced with?
2015-04-13T13:21:31 <Bosmon> It looks like this can be done, but it will be a bit harder than I thought
2015-04-13T13:21:35 <Justin_o> would we just go back to the old system
2015-04-13T13:21:36 <Justin_o> ?
2015-04-13T13:21:37 <Bosmon> Justin_o - just "normal invokers" : P
2015-04-13T13:21:50 <Bosmon> But at the time, fast invokers were more than 100x as fast as the standard ones
2015-04-13T13:22:01 <Justin_o> so that\'s not true anymore?
2015-04-13T13:22:03 <Bosmon> Which was such a huge margin that might be worth almost any inconvenience
2015-04-13T13:22:16 <Bosmon> I\'ve managed to optimise "standard invokers" so that they are now only 4x as slow as "fast invokers"
2015-04-13T13:22:21 <Bosmon> And I think I can speed them up a bit further
2015-04-13T13:22:26 <Justin_o> wow
2015-04-13T13:22:29 <Justin_o> that\'s a huge improvement
2015-04-13T13:22:36 <Bosmon> Yes, it is quite huge :)
2015-04-13T13:22:44 <Bosmon> But it depends on quite a number of things lining up correctly
2015-04-13T13:22:44 <Justin_o> how did you do that?
2015-04-13T13:22:54 <Justin_o> oh okay
2015-04-13T13:23:00 <Bosmon> Well, the main prerequisite was abolishing "manual init components" from the framework
2015-04-13T13:23:12 <Bosmon> So this work couldn\'t have been done before the big pull I made
2015-04-13T13:23:30 <Bosmon> After that, I have now written our very first call to "Object.create" in the framework : P
2015-04-13T13:23:47 <Bosmon> The first creeping growth of the HATED PROTOTYPALISM, banished since 2008 : P
2015-04-13T13:24:03 <Justin_o> haha :)
2015-04-13T13:24:23 <Bosmon> So we (will) now have what could be called "scope objects"
2015-04-13T13:24:53 <Bosmon> Before, when the framework wanted to resolve a context expression such as {uiEnhancer} or whatever, it would simply have to go and look for it
2015-04-13T13:25:12 <Bosmon> Which meant searching manually through the entire component tree above the reference, component by component to see if it matched
2015-04-13T13:25:33 <Bosmon> Now we have eliminated the possibility that someone might have put a component there "unexpectedly", we can now make this search very significantly more efficient
2015-04-13T13:25:44 <Bosmon> Especially by making use of the HATED PROTOTYPALISM
2015-04-13T13:25:57 <Bosmon> So now, within the "shadow" of every component is a special "scope object" named "ownScope"
2015-04-13T13:26:10 <Bosmon> Which is connected in a prototypal chain to similar objects stretching up to the top of the tree
2015-04-13T13:26:58 <Bosmon> And "it so arranges" that then, lookup of contexts can proceed immediately - simply by looking up the relevant property on the scope object via, for example, ownScope["uiEnhancer"]
2015-04-13T13:27:25 <Bosmon> Which will complete, one would expect, in hundreds of nanoseconds rather than hundreds of microseconds
2015-04-13T13:28:33 <Justin_o> Bosmon: i don\'t think i fully understand how it the chain works
2015-04-13T13:29:14 <Bosmon> Justin_o - so helpful to refer to this ancestral diagram:
2015-04-13T13:29:14 <Bosmon> http://wiki.fluidproject.org/display/docs/Contexts
2015-04-13T13:29:21 <Bosmon> Showing the "scope resolution order" for IoC references
2015-04-13T13:30:27 <Justin_o> Bosmon: yes.. i think i was looking at this a week or too ago actually.. it is quite helpful :)
2015-04-13T13:30:49 <Justin_o> so this is somehow "coded" in the ownScope property?
2015-04-13T13:30:54 <Bosmon> What\'s important to observe about this order is that it is, what could be called, "LINEARISABLE" - that is, it\'s possible to imagine it being implemented by the same rules operated by a linear chain of JavaScript prototypes
2015-04-13T13:31:12 <Bosmon> It turns out we need two prototypes rather than one, per level of containment, but still, we can do it
2015-04-13T13:31:47 <Bosmon> We need two prototypes since contexts directly attached to a component take precedence over those in its siblings
2015-04-13T13:32:13 <Bosmon> But still, we can make the JavaScript VM do our work for us, rather than doing it with a slow manual search
2015-04-13T13:34:14 <Justin_o> oh i see..
2015-04-13T13:34:36 <Justin_o> how is this affected by the global lookup?
2015-04-13T13:34:46 <Justin_o> is that a much slower process?
2015-04-13T13:35:07 <Bosmon> Well, we will still need two further prototypes to store the components registered with "resolveRoot"
2015-04-13T13:35:11 <Bosmon> But the idea is still the same
2015-04-13T13:35:20 <Bosmon> Abolishing the staticEnvironment was also essential to solving this
2015-04-13T13:35:43 <Bosmon> Since that was yet another means by which components might arise "unexpectedly"
2015-04-13T13:36:38 <Justin_o> Bosmon: yes.. we did stick a few components in there. Hope it was too much work to change that
2015-04-13T13:36:55 <Bosmon> Justin_o - well, you can see the pull request :)
2015-04-13T13:37:03 <Bosmon> It is about a 10,000 line diff...
2015-04-13T13:37:09 <Justin_o> whoa
2015-04-13T13:47:38 * gtirloni has quit
2015-04-13T13:50:10 * gtirloni joined the channel
2015-04-13T13:51:52 * jhung has quit
2015-04-13T13:59:07 * clown joined the channel
2015-04-13T14:04:17 * danaayotte joined the channel
2015-04-13T14:15:39 * gtirloni has quit
2015-04-13T14:24:02 * gtirloni joined the channel
2015-04-13T14:26:14 * gtirloni has quit
2015-04-13T14:26:44 * gtirloni joined the channel
2015-04-13T14:33:21 * slim_jim joined the channel
2015-04-13T14:45:22 <cindyli> danaayotte: do you have time to talk about a few things with the language panel?
2015-04-13T14:48:03 <danaayotte> sure cindyli
2015-04-13T14:48:29 <cindyli> thanks, danaayotte, pinging u in vidyo
2015-04-13T15:06:37 * gtirloni has quit
2015-04-13T15:11:05 * gtirloni joined the channel
2015-04-13T15:12:00 * jhung joined the channel
2015-04-13T15:12:39 <cindyli> hi Bosmon
2015-04-13T15:15:51 * gtirloni has quit
2015-04-13T15:18:40 * kasparnet has quit
2015-04-13T15:18:58 * gtirloni joined the channel
2015-04-13T15:28:58 * kasparnet joined the channel
2015-04-13T15:35:27 * sepideh has quit
2015-04-13T15:45:24 * sepideh joined the channel
2015-04-13T15:56:41 <Bosmon> Hi there cindyli
2015-04-13T16:05:22 * kasparnet has quit
2015-04-13T16:18:51 <cindyli> hi Bosmon, hope you are still here. in the first discovery tool, i have a distributeOptions at the top component to pass common options for tooltips to all components that have tooltips - https://github.com/cindyli/first-discovery/blob/FLOE-281/src/js/firstDiscoveryEditor.js#L132-L135
2015-04-13T16:19:46 <cindyli> however, in one of prefs editor panels, i need to use a different tooltip style, but whatever style i defined in that panel was overridden by this option distribution
2015-04-13T16:21:32 <Bosmon> cindyli - how are you defining the style in the panel?
2015-04-13T16:22:16 <cindyli> tried two ways, one is to make use of "distributeOptions" defined in "attachTooltip" component
2015-04-13T16:22:39 <cindyli> the other is to use components: {tooltip: {\xe2\x80\xa6}} directly
2015-04-13T16:22:58 <cindyli> neither of them worked
2015-04-13T16:23:14 <cindyli> if I commented "distributeOptions" in the top component, they will work
2015-04-13T16:23:44 <cindyli> that\'s how I figure it\'s the top level "distributeOptions" overriding the ones defined in the subcomponent
2015-04-13T16:25:23 <Bosmon> cindyli - yes, that\'s correct
2015-04-13T16:25:35 <Bosmon> Unfortunately a proper fix for this relies on the material which is in my branch
2015-04-13T16:26:14 <cindyli> i tried to use "exclusions" option for the distributeOptions, was trying to exclude that panel by its given grade, didn\'t work too
2015-04-13T16:26:21 <Bosmon> I suggest what you can do for now is to implement material in a dynamic grade
2015-04-13T16:26:40 <Bosmon> cindyli - "exclusions" only excludes the source material, it can\'t exclude material based on the grade of the target
2015-04-13T16:27:39 <cindyli> ok, that\'s how i figured, cannot use the source material since the panel name is dynamically generated based on the definition in schema
2015-04-13T16:28:15 <cindyli> Bosmon: can you elaborate the ideal of "implement material in a dynamic grade"
2015-04-13T16:28:25 <Bosmon> cindyli - sorry, just reading the source for a sec
2015-04-13T16:28:32 <Bosmon> I realise I even changed this algorithm in my branch too
2015-04-13T16:29:04 <cindyli> ah ha. good that you checked
2015-04-13T16:29:32 <Bosmon> I have a worry that in the old framework, nothing can actually beat a distribution
2015-04-13T16:29:48 <cindyli> oh well
2015-04-13T16:31:18 <cindyli> so, don\'t use the distribution at the top would be the way to go? Bosmon
2015-04-13T16:31:31 <cindyli> *top level*
2015-04-13T16:34:44 <Bosmon> cindyli - I think you will have to get rid of it, sadly
2015-04-13T16:35:01 <Bosmon> I don\'t think there is any kind of record in the current framework in master that can beat it in priority
2015-04-13T16:35:12 <Bosmon> Well, other than a demands block, that is :)
2015-04-13T16:35:13 <cindyli> ok. i see
2015-04-13T16:35:20 <Bosmon> And I don\'t think I would want to recommend one of those : P
2015-04-13T16:35:32 <Bosmon> Well, to be honest, it might not be completely insane to use a demands block
2015-04-13T16:35:33 <cindyli> haha, certainly not
2015-04-13T16:35:39 <Bosmon> Since the code will need to be rewritten anyway once you update
2015-04-13T16:35:56 <Bosmon> And it will form a useful note in order to prod us to rewrite the code :)
2015-04-13T16:36:13 <cindyli> when update to the newest framework in ur branch
2015-04-13T16:36:17 <cindyli> that\'s true too
2015-04-13T16:36:19 <Bosmon> yes
2015-04-13T16:36:47 <cindyli> ok, will try a demands block first
2015-04-13T16:36:59 <Bosmon> so yes, fluid.demands("fluid.tooltip", "gpii.firstDiscovery.attachTooltip" .... ) might not be a completely insane recommendation
2015-04-13T16:37:08 <Bosmon> With a gigantic comment of course : P
2015-04-13T16:37:41 <Bosmon> The priority system for demands blocks was well worked-out at the time - and a lot of what I did in my branch was to bring distributeOptions up to the same level of quality
2015-04-13T16:38:48 <cindyli> cool. thanks
2015-04-13T16:48:44 * kasparnet joined the channel
2015-04-13T16:53:21 <danaayotte> anastasiac Justin_o: can\'t remember where we left discussion about implementing preview designs (for text size and contrast) - nothing estimated in iteration plan - so we will not implement for the workshop demo, is that correct?
2015-04-13T16:53:46 <anastasiac> danaayotte, my recollection is that we will not implement them for the workshop
2015-04-13T16:53:56 <danaayotte> ok thanks
2015-04-13T16:55:36 <Justin_o> danaayotte: also i think we need the icon for the keyboard panel
2015-04-13T16:55:47 <anastasiac> right
'


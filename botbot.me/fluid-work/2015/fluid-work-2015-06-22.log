b'2015-06-22T21:38:20 <colinclark> rather than merging them together
2015-06-22T21:38:33 <colinclark> question mark
2015-06-22T21:38:57 <colinclark> It seems like I could perhaps issue a delete on the model property, or first change it to an empty array?
2015-06-22T21:39:04 <Bosmon> colinclark - a delete would be better, yes
2015-06-22T21:39:09 <colinclark> Why better?
2015-06-22T21:39:29 <colinclark> And what is the meaning of the "value" field in the case of a delete?
2015-06-22T21:39:46 <Bosmon> The "value" field is ignored in a delete
2015-06-22T21:40:15 <Bosmon> I think a delete would be semantically clearer - as well as agreeing with the future behaviour when "ADD" is reimplemented
2015-06-22T21:40:30 <Bosmon> Which, as we recall, will be identical to a DELETE followed by a MERGE
2015-06-22T21:41:25 * colinclark joined the channel
2015-06-22T21:41:53 <colinclark> ok, that makes sense, Bosmon
2015-06-22T21:42:22 <colinclark> So is null typically the value one specifies when deleting?
2015-06-22T21:42:44 <colinclark> I guess in the declarative form, which I\'m using, it can just be omitted
2015-06-22T21:45:16 <Bosmon> null or undefined or something : P
2015-06-22T21:47:07 <colinclark> thanks, man
2015-06-22T21:47:21 <colinclark> Our new documentation is really growing nicely
2015-06-22T21:47:49 <colinclark> Writing some new components recently, I\'ve found it very helpful and full of the sort of information I need
2015-06-22T21:47:56 <colinclark> assuming I actually read it sufficiently closely :)
2015-06-22T21:54:13 <Bosmon> np, colinclark :)
2015-06-22T22:00:40 * gtirloni has quit
2015-06-22T22:01:28 * danayo has quit
2015-06-22T22:10:13 * danayo joined the channel
2015-06-22T22:17:04 * gtirloni joined the channel
2015-06-22T22:28:02 * kasparnet has quit
2015-06-22T22:43:09 * colinclark has quit
2015-06-22T22:58:16 * gtirloni has quit
2015-06-22T23:03:36 * murilocrivellari has quit
2015-06-22T23:09:50 * jhung joined the channel
2015-06-22T23:21:43 * jhung has quit
2015-06-22T23:36:13 * jhung joined the channel
'

b'2015-06-22T06:27:12 * the-t-in-rtf joined the channel
2015-06-22T08:59:42 * kasparnet joined the channel
2015-06-22T09:44:19 * kasparnet has quit
2015-06-22T10:19:24 * kasparnet joined the channel
2015-06-22T10:46:04 * -- BotBot disconnected, possible missing messages --
2015-06-22T10:48:15 * [o__o] joined the channel
2015-06-22T11:24:06 * gtirloni joined the channel
2015-06-22T12:15:37 * jhung joined the channel
2015-06-22T12:51:13 * colinclark joined the channel
2015-06-22T12:58:01 * cindyli joined the channel
2015-06-22T12:58:02 * cindyli has quit
2015-06-22T12:58:02 * cindyli joined the channel
2015-06-22T13:00:50 * simonjb joined the channel
2015-06-22T13:15:00 * anvk joined the channel
2015-06-22T13:38:30 * Justin_o joined the channel
2015-06-22T13:54:49 * danayo joined the channel
2015-06-22T14:00:33 * michelled joined the channel
2015-06-22T14:04:00 * murilocrivellari joined the channel
2015-06-22T14:13:53 * cindyli1 joined the channel
2015-06-22T14:22:11 * clown joined the channel
2015-06-22T15:12:23 <danayo> fluid-everyone, michelled: floe planning?
2015-06-22T15:15:11 <Justin_o> danayo: i think we might be delaying that till after standup today
2015-06-22T15:16:26 <danayo> ok thanks Justin_o
2015-06-22T15:28:44 * michelled has quit
2015-06-22T15:29:45 * michelled joined the channel
2015-06-22T15:30:48 * cindyli1 has quit
2015-06-22T15:31:16 <simonjb> fluid-everyone: collab room for standup?
2015-06-22T15:31:31 <danayo> yes simonjb
2015-06-22T15:35:15 <colinclark> fluid-everyone: Unforutnately I\'m going to miss standup today, but here\'s a quick update: I had a series of very productive meetings this morning about Prosperity4All security architecture, and I\'m excited that we\'re incorporating the experience of the SiLO team now. I\'ve got a noon meeting to talk about plans for our upcoming NSF grant with PhET, and in the afternoon I will looking into Bosmon\'s many pull requests, ensuring that we get tho
2015-06-22T15:35:15 <colinclark> merged in before the GPII architecture meetings next week in Copenhagen. Those of you in Toronto, see you in the office shortly!
2015-06-22T15:35:20 * colinclark has quit
2015-06-22T15:42:59 * slim_ joined the channel
2015-06-22T16:00:25 <simonjb> michelled: http://piratepad.net/fqZqv5DNLC
2015-06-22T16:04:37 <murilocrivellari> michelled: https://www.dropbox.com/s/5hvczgbeoppz7v6/CA%20Tool%20%5BVersion%203%5D.pdf?dl=0
2015-06-22T16:13:42 * colinclark joined the channel
2015-06-22T16:49:47 * cindyli joined the channel
2015-06-22T16:56:04 * danayo has quit
2015-06-22T16:57:20 * jhung has quit
2015-06-22T17:02:50 * slim_ has quit
2015-06-22T17:05:27 <michelled> murilocrivellari: I added a link to your designs to the floe iteration page - please update that link as you updated your designs: https://wiki.fluidproject.org/display/fluid/Floe+Iteration+Plan
2015-06-22T17:06:05 <michelled> Justin_o, cindyli: I\'ve added the pie chart sonification tasks to the iteration page
2015-06-22T17:06:15 <cindyli> thanks, michelled
2015-06-22T17:06:23 <michelled> np
2015-06-22T17:06:27 <murilocrivellari> perfect, michelled. Thanks!
2015-06-22T17:07:38 <michelled> :)
2015-06-22T17:09:17 * michelled joined the channel
2015-06-22T17:42:16 * simonjb has quit
2015-06-22T17:51:48 <cindyli> Bosmon: r u there?
2015-06-22T17:51:57 <Bosmon> Hi there cindyli
2015-06-22T17:52:50 <cindyli> Bosmon: seeking ur advice for an issue i have with saving the state info of the sticky key panel for the first discovery tool.
2015-06-22T17:52:56 <Bosmon> hi
2015-06-22T17:53:08 <cindyli> digging some code...
2015-06-22T17:54:55 <cindyli> Bosmon: https://github.com/fluid-project/first-discovery/blob/master/src/js/panels.js#L350-L359
2015-06-22T17:55:26 * danayo joined the channel
2015-06-22T17:55:34 <cindyli> i need to save those model values that have listeners hooked up to speak the changed instructions on the screen
2015-06-22T17:56:10 <cindyli> speaking requires "fluid.textToSpeech" - https://github.com/fluid-project/first-discovery/blob/master/src/js/ttsHookup.js#L20-L22
2015-06-22T17:56:36 <cindyli> however, "fluid.textToSpeech" is instantiated when the prefs editor is ready
2015-06-22T17:56:57 <cindyli> because it needs some fetched languge code, speaking state etc from the prefs editor
2015-06-22T17:58:49 <cindyli> the issue is, after those state model values are saved, reload the page to re-instantiate the tool, the pref editor is the first thing to be instantiated including the instantiation of the sticky key panel which causes the model listeners for speaking to be triggered. but, at this point, fluid.textToSpeech has been instantiated yet
2015-06-22T18:00:15 <cindyli> excludeSource: "init" would not work because the model listeners are triggered by the change request to set the fetched model, not the very initial model construction
2015-06-22T18:00:37 <cindyli> Bosmon: ideas of how to solve this issue, or work around this issue?
2015-06-22T18:00:51 <Bosmon> cindyli - I think that Justin_o \'s current work on the so-called "mock" TTS engine may help you here
2015-06-22T18:01:10 <Bosmon> What I suggest that you do is work with him to construct an "early buffering" TTS implementation
2015-06-22T18:01:44 <Bosmon> If it receives a request for a TTS action before the target component is ready, it will store it in the transcript that it has
2015-06-22T18:01:56 <cindyli> ah ha
2015-06-22T18:02:07 <Bosmon> When it is signalled by an event that a real TTS is ready to attach it to, it will then at that time send all elements in the transcript to the real TTS
2015-06-22T18:02:18 <Bosmon> And then from that time onwards, just forward all speech requests directly
2015-06-22T18:03:01 <cindyli> sounds cool
2015-06-22T18:04:34 <Bosmon> But - isn\'t it the case that all the configuration that the TTS requires is from the same model that you are reacting to here?
2015-06-22T18:04:55 <cindyli> yes, Bosmon
2015-06-22T18:05:09 <Bosmon> So in theory we could move up construction of the TTS to an earlier point
2015-06-22T18:05:39 <Bosmon> Isn\'t it in any case bound to an enactor attached to the global page?
2015-06-22T18:06:03 <Bosmon> Where is the constructor for it written
2015-06-22T18:06:18 <cindyli> what enactor do you refer to?
2015-06-22T18:06:35 <Bosmon> TTS one
2015-06-22T18:07:01 <Bosmon> I assume what we are binding to is this: https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/SelfVoicingEnactor.js#L25 ?
2015-06-22T18:07:06 <cindyli> ah, TTS is not used as an enactor, it\'s a sibling of the prefsEditor since it needs to be used globally
2015-06-22T18:07:20 <cindyli> not really
2015-06-22T18:07:40 <Bosmon> cindyli - ok, where is it?
2015-06-22T18:07:43 <cindyli> https://github.com/fluid-project/first-discovery/blob/master/src/js/firstDiscoveryEditor.js#L36
2015-06-22T18:07:49 <Bosmon> thanks
2015-06-22T18:08:06 <Bosmon> I see
2015-06-22T18:08:10 <Bosmon> It needs to bind to the DOM too
2015-06-22T18:08:28 <cindyli> ya, there\'s a button to turn it on/off
2015-06-22T18:09:27 <Bosmon> cindyli - ok
2015-06-22T18:10:00 <Bosmon> So there is another good interaction here - since the review I gave to Justin_o in his last pull request was to ask for the selfVoicing component and the TTS enactor to be refactored and split apart
2015-06-22T18:10:10 <Bosmon> In the current impl, all the grades are piled on top of each other
2015-06-22T18:10:31 <Bosmon> And so there is a confusion between the "viewComponent" which is the self voicer, and the fluid.textToSpeech that we need to target
2015-06-22T18:10:51 <cindyli> true
2015-06-22T18:11:03 <Bosmon> If we split these apart, it will further improve our ability to safely refer to a fluid.textToSpeech globally, without requiring to wait for a DOM component locally
2015-06-22T18:11:23 <cindyli> so you think to still have tts as an enactor
2015-06-22T18:11:46 <Bosmon> Also if the real fluid.textToSpeech becomes a subcomponent of the selfVoicing component as I recommended, it will then become impossible for a {fluid.textToSpeech} reference to resolve onto it accidentally
2015-06-22T18:12:15 <Bosmon> cindyli - well, ideally, we don\'t care what it is, as long as there is just one real instance of it somewhere in the tree
2015-06-22T18:13:00 <Bosmon> I mean, in real truth, the TTS implementation is properly a singleton, given we don\'t want multiple components fighting to speak at the same time
2015-06-22T18:13:31 <cindyli> that\'s true
2015-06-22T18:14:43 <cindyli> would it help by having fluid.textToSpeech as a subcomponent of the selfVoicing component since "selfVoicing" itself needs to wait for a DOM to be ready
2015-06-22T18:15:57 <cindyli> also, once the fetched model is ready, fluid.textToSpeech needs to update itself with some model values such as lang code
2015-06-22T18:16:22 * michelled joined the channel
2015-06-22T18:16:23 * michelled has quit
2015-06-22T18:17:11 <Bosmon> cindyli - yes, it looks like we need to rethink this component more thoroughly - and in something like the same way we needed to rethink "enactors" in general
2015-06-22T18:17:21 * jhung joined the channel
2015-06-22T18:18:07 <Bosmon> There is really only one "concrete TTS" in the world, attached to the global page root
2015-06-22T18:18:17 <cindyli> agree
2015-06-22T18:18:45 <Bosmon> Everything else in the world is just a source of messages sent to this concrete TTS
2015-06-22T18:20:58 * simonjb joined the channel
2015-06-22T18:22:03 <Justin_o> Bosmon, cindyli: I think i\'ve just caught up but it sounds like the conversation is over.. i think i pretty much agree with all those statements though
2015-06-22T18:22:14 <Bosmon> Justin_o - far from over :)
2015-06-22T18:22:19 <Bosmon> We actually need to decide WHAT TO DO now : P
2015-06-22T18:23:26 <Justin_o> Bosmon: lol i guess that\'s true
2015-06-22T18:24:19 <Bosmon> But I guess one thing is clear - that splitting up the grades "gpii.firstDiscovery.selfVoicing" and "fluid.textToSpeech" is part of all futures
2015-06-22T18:26:34 <Bosmon> The next thing: We need to unbundle the selfVoicing component from its current role as being the medium by which TTS preferences get to TTS
2015-06-22T18:27:05 <Bosmon> There needs to be a direct path from the prefsEditor to configure TTS which routes the relevant preferences to it, without having to wait for onPrefsEditorReady
2015-06-22T18:27:50 <Bosmon> Which seems to imply that we should indeed use the enactor for this
2015-06-22T18:28:08 <cindyli> Bosmon, Justin_o, one interesting thing is, the model listeners for speaking should NOT be triggered by the fetched model. the speaking should only occur when the panel is visible
2015-06-22T18:28:37 <Bosmon> THEN we just need to ensure that the enactor gets its preferences earlier than any client of TTS - which for now we\'ll have to do via hard-coded modelListener priorities
2015-06-22T18:28:47 <Bosmon> Until colinclark gives us our new framework :)
2015-06-22T18:29:00 <Bosmon> cindyli - ok
2015-06-22T18:30:29 <colinclark> Bosmon: I\'m working on it, however terribly slowly :(
2015-06-22T18:30:30 <Bosmon> cindyli - that looks like a more conventional problem
2015-06-22T18:31:32 <Bosmon> cindyli - well, partially conventional, anyway - this looks like this requires some interaction between the panel and its container
2015-06-22T18:31:56 <Bosmon> But this is all the more a push to make sure that the panel can\'t bind to a fluid.textToSpeech directly, but instead via a mediator
2015-06-22T18:32:28 <Bosmon> Where the mediator can buffer and/or suppress speech messages that are inappropriately timed, or inappropriate entirely
2015-06-22T18:32:47 <cindyli> ok
2015-06-22T18:32:55 <Bosmon> This implies that we make a fluid.textToSpeech API grade, separate from a fluid.textToSpeechImpl
2015-06-22T18:33:04 <Bosmon> Which is what we also need for Justin_o\'s mock in any case
2015-06-22T18:33:46 <Bosmon> His mock shouldn\'t work by plastering itself completely over what is a fluid.textToSpeechImpl and overwriting bits of it, but instead a fluid.textToSpeech "API" grade (which will just, I think, be named fluid.textToSpeech)
2015-06-22T18:35:57 <Bosmon> Then your panel binds to a thing called fluid.textToSpeech which is provided by the overall firstDiscovery tool, which arranges to make sure that i) if the panel tries to speak when it is not visible, the speech is thrown away, and ii) that if anyone tries to speak before the language setting has been read, the speech is buffered
2015-06-22T18:37:48 <Bosmon> Although I think for requirement ii) we can just try to finesse the issue as I suggested earlier, but just making sure that TTS is notified of language and TTS preferences very early as soon as the preferences are loaded
2015-06-22T18:39:21 <cindyli> ok, will try that
2015-06-22T19:08:49 * kasparnet has quit
2015-06-22T19:26:50 * the-t-in-rtf has quit
2015-06-22T19:27:14 * the-t-in-rtf joined the channel
2015-06-22T19:46:41 * jhung has quit
2015-06-22T20:02:14 * the-t-in-rtf has quit
2015-06-22T20:03:16 * the-t-in-rtf joined the channel
2015-06-22T20:06:41 * kasparnet joined the channel
2015-06-22T20:26:03 * anvk has quit
2015-06-22T20:38:07 * jhernandez has quit
2015-06-22T20:46:56 * clown has left the channel
2015-06-22T20:49:01 <colinclark> Bosmon: question for you
2015-06-22T20:49:26 <colinclark> if you have a free moment
2015-06-22T21:03:54 * simonjb has quit
2015-06-22T21:20:03 * gtirloni has quit
2015-06-22T21:32:34 * gtirloni joined the channel
2015-06-22T21:37:11 <Bosmon> hi there colinclark
2015-06-22T21:37:23 <colinclark> heya
2015-06-22T21:37:30 <colinclark> A really dumb one
2015-06-22T21:37:35 <colinclark> which I am full of :P
2015-06-22T21:37:49 <colinclark> even, perhaps, one I\'ve asked you before
2015-06-22T21:38:12 <colinclark> What is the best way to inform the ChangeApplier that I\'d like to replace one instance of an array with another
'


b'2015-01-26T22:12:54 <colinclark> i guess it is for Bosmon
2015-01-26T22:13:04 <colinclark> Can you fire us a link to the FD wireframes
2015-01-26T22:13:05 <colinclark> ?
2015-01-26T22:13:12 <colinclark> We\'re just talking through it architecturally
2015-01-26T22:13:20 <colinclark> thought it would be useful to see the real deal
2015-01-26T22:14:09 <danaayotte> sure, i\'ll send you the last one I posted to wiki, I\'m still working an iteration that came out of tasking discussion as well as our last meeting
2015-01-26T22:14:23 <danaayotte> mostly minor details
2015-01-26T22:15:19 <colinclark> ok, cool
2015-01-26T22:16:58 <danaayotte> actually here\'s a more recent version colinclark https://www.dropbox.com/s/red3sn7g88o1q4a/First%20Discovery%20January%2021%2015.pdf?dl=0
2015-01-26T22:17:23 <danaayotte> confirmation screens are definitely a work in progress
2015-01-26T22:17:33 <colinclark> are there any descriptions of what the TTS will actually do?
2015-01-26T22:18:08 <danaayotte> oh yes!
2015-01-26T22:18:31 <danaayotte> here:http://wiki.fluidproject.org/display/fluid/Keyboard+and+screenreader+interaction+for+first+discovery+tool
2015-01-26T22:18:34 <danaayotte> http://wiki.fluidproject.org/display/fluid/Keyboard+and+screenreader+interaction+for+first+discovery+tool
2015-01-26T22:19:55 <colinclark> cool, thank you
2015-01-26T22:23:44 <anastasiac> colinclark, there\xe2\x80\x99s one thing that wiki page doesn\xe2\x80\x99t mention: the co-design meetings raised a request to have the tts be \xe2\x80\x9cquery-able,\xe2\x80\x9d that is, the user should be able to hover over anything on the screen and have that thing spoken (and nothing else). On a touch interface, it would have to be some from of tapping or dragging, of course, but the goal is the same
2015-01-26T22:24:14 <anastasiac> I think that\xe2\x80\x99s the part that was stumping Justin_o
2015-01-26T22:24:17 <colinclark> aha
2015-01-26T22:24:20 <colinclark> ok, that\'s good to know
2015-01-26T22:24:36 <Bosmon> That\'s fine
2015-01-26T22:24:38 <Bosmon> I can help with that
2015-01-26T22:24:42 <colinclark> will that be the main mode of interaction, anastasiac?
2015-01-26T22:24:51 <colinclark> Or will it start reading by default, and then stop reading when the mouse is moved?
2015-01-26T22:25:09 <anastasiac> colinclark, I think it will start reading by default, but also support the query
2015-01-26T22:25:55 <anastasiac> not sure, actually, whether or not mouse movement would interrupt. that might be a danaayotte question...
2015-01-26T22:33:29 <danaayotte> definitely needs to start reading by default, not sure about interruption - are there any examples of this kind of interaction with a mouse? i\'ve only seen it with touchscreens
2015-01-26T22:34:20 <danaayotte> i guess it would make sense to interrupt. we would need some way to start it up again
2015-01-26T22:34:37 <danaayotte> it wasn\'t clear to me on the call that we were clear on this
2015-01-26T22:34:48 <danaayotte> i just wrote clear twice
2015-01-26T22:34:50 <danaayotte> :)
2015-01-26T22:35:55 <danaayotte> i\'m thinking that we may want to limit this to touchscreen
2015-01-26T22:36:39 <danaayotte> anastasiac, colinlclark, Bosmon ^
2015-01-26T22:37:11 <anastasiac> danaayotte, limit what, the interruption?
2015-01-26T22:37:35 <danaayotte> sorry, no, the query-able voicing
2015-01-26T22:38:18 <colinclark> yeah, it\'s an interesting problem
2015-01-26T22:38:30 <colinclark> This feature is usually quite modal in other screenreaders
2015-01-26T22:38:35 <colinclark> it\'s either on or off
2015-01-26T22:38:39 <colinclark> the "exploratory" mode
2015-01-26T22:39:03 <colinclark> The "point/click to hear" feature is often a different use case
2015-01-26T22:39:11 <colinclark> someone who has trouble reading, and wants to hear words read aloud
2015-01-26T22:39:19 <colinclark> not necessarily someone who has trouble seeing
2015-01-26T22:39:22 <colinclark> if you see the distinction
2015-01-26T22:41:30 <danaayotte> totally colinclark
2015-01-26T22:42:09 * anastasiac has quit
2015-01-26T22:59:29 * danaayotte has quit
2015-01-26T23:06:28 * Justin_o has quit
2015-01-26T23:07:19 * colinclark has quit
'

b'2015-01-26T16:30:38 <Justin_o> Bosmon: okay thanks
2015-01-26T16:36:26 * Sepideh has quit
2015-01-26T16:42:32 * slim_jim joined the channel
2015-01-26T16:55:24 * Sepideh joined the channel
2015-01-26T16:56:56 * colinclark joined the channel
2015-01-26T16:57:44 * jhung has quit
2015-01-26T16:57:50 * cindyli has quit
2015-01-26T17:00:05 * cindyli joined the channel
2015-01-26T17:08:34 * colinclark has quit
2015-01-26T17:18:41 * Sepideh has quit
2015-01-26T17:19:47 * Sepideh joined the channel
2015-01-26T17:32:18 * jhung joined the channel
2015-01-26T17:49:26 * colinclark joined the channel
2015-01-26T17:58:54 * colinclark has quit
2015-01-26T18:03:34 * michelled has quit
2015-01-26T18:06:28 * Sepideh has quit
2015-01-26T18:08:58 * danaayotte joined the channel
2015-01-26T18:13:40 * cindyli has quit
2015-01-26T18:15:47 * danaayotte has quit
2015-01-26T18:16:30 <Bosmon> Hi Justin_o - so what I suggest you do for the enactor is something like this
2015-01-26T18:16:44 <Bosmon> There is a piece of "mini-infrastructure" in the GPII\'s LifecycleManager which you can adopt
2015-01-26T18:16:45 <Bosmon> https://github.com/GPII/universal/blob/master/gpii/node_modules/lifecycleManager/src/LifecycleManager.js#L83
2015-01-26T18:16:53 <Bosmon> It just consists of a tiny component with one invoker
2015-01-26T18:17:07 <Bosmon> By default it doesn\'t do anything, but it is a useful interception point for mocking during tests
2015-01-26T18:17:22 <Bosmon> You can see a call to its method here: https://github.com/GPII/universal/blob/master/gpii/node_modules/lifecycleManager/src/LifecycleManager.js#L200
2015-01-26T18:17:37 <Bosmon> It takes two arguments - firstly, a global name, and secondly a "category name" which in your case could just be "enactor"
2015-01-26T18:18:04 <Bosmon> The expectation is that the person who calls it will then use either fluid.getGlobalValue or fluid.invokeGlobalFunction on the name that it sends back
2015-01-26T18:19:01 <Bosmon> This isn\'t ideal, but it\'s mostly the best we can do for the time being before we have an implementation of the "global instantiator" for http://issues.fluidproject.org/browse/FLUID-5249
2015-01-26T18:23:10 * anastasiac has quit
2015-01-26T18:23:56 * anastasiac joined the channel
2015-01-26T18:33:52 * colinclark joined the channel
2015-01-26T18:41:07 * rk29 joined the channel
2015-01-26T19:00:37 * jhung has quit
2015-01-26T19:02:14 * jhung joined the channel
2015-01-26T19:14:56 * rk29 has left the channel
2015-01-26T19:16:16 * cindyli joined the channel
2015-01-26T19:16:44 * Sepideh joined the channel
2015-01-26T19:16:52 * colinclark has quit
2015-01-26T19:17:57 * slim_jim has quit
2015-01-26T19:19:20 * danaayotte joined the channel
2015-01-26T19:19:26 <Justin_o> Bosmon: so if i\'m understanding this correctly, this is a way to fire an "event" between two components that know nothing about each other
2015-01-26T19:19:37 <Justin_o> it\'s kind of like a model listener?
2015-01-26T19:19:55 <Bosmon> Justin_o - not really, no
2015-01-26T19:20:00 <Bosmon> it\'s just a way of looking up a name to an implementation
2015-01-26T19:20:15 <Bosmon> This will have to be done without IoC for now
2015-01-26T19:20:31 <Justin_o> Bosmon: okay.. so this is not now i would pass the message across, but how i would bind the component together?
2015-01-26T19:20:34 <Bosmon> Since IoC isn\'t capable of resolving references that aren\'t relative to a component tree
2015-01-26T19:21:13 <Justin_o> Bosmon: i guess i\'m not following exactly what would be passed into this and who would use it
2015-01-26T19:21:36 <Bosmon> Justin_o - the consumer of the "enactor API" would use this to find the enactor
2015-01-26T19:21:50 <Bosmon> On the enactor\'s side, it would inject its instance into a particular global name
2015-01-26T19:22:11 <Bosmon> It\'s all very unsatisfactory, but it\'s the best we can do without framework support
2015-01-26T19:23:04 <Bosmon> At the very least we can supply the nameResolver so that we can use an IoC-driven test case to resolve onto a mock implementation rather than a real one
2015-01-26T19:23:28 <Bosmon> Well, I guess this isn\'t much different to our existing enactors which we simply stuff into the so-called "staticEnvironment"
2015-01-26T19:23:49 <Justin_o> Bosmon: yes.. i was thinking of grabbing it from there
2015-01-26T19:23:58 <Bosmon> You could also continue to use that approach too
2015-01-26T19:24:01 <Justin_o> i had been talking that over with cindy, how things currently work
2015-01-26T19:24:05 <Bosmon> And we\'ll just have to leave a big note to pick up the pieces later
2015-01-26T19:24:19 <Justin_o> Bosmon: but we\'d have to make sure that the enactor was instantiated first
2015-01-26T19:24:26 <Bosmon> Yes
2015-01-26T19:24:36 <Bosmon> This is one of the many unsatisfactory aspects of the system
2015-01-26T19:24:36 <Justin_o> i\'m not sure if that would be an issue, maybe that\'s already guaranteed with the current setup
2015-01-26T19:24:47 <Bosmon> It\'s not really guaranteed
2015-01-26T19:24:57 <Bosmon> You\'ll just have to "arrange" to call the correct code in the correct order
2015-01-26T19:25:07 <Justin_o> :(
2015-01-26T19:25:12 <Justin_o> that\'s too bad for integrators
2015-01-26T19:25:19 <Justin_o> but i guess for now that\'s fine
2015-01-26T19:25:30 <Justin_o> Bosmon: i was wondering about an idea of having it more like the video player
2015-01-26T19:25:31 <Bosmon> Once I fix modelRelay, GPII-5249 is top of my list
2015-01-26T19:25:38 <Bosmon> Don\'t even mention the video player :)
2015-01-26T19:25:43 <Justin_o> where the tts engine is something the integrator has to instantiate
2015-01-26T19:25:48 <Justin_o> lol
2015-01-26T19:26:14 <Justin_o> i\'m just mentioning it to say that the integrator puts a tts engine on the page and the enactor just says if it is on or off
2015-01-26T19:26:18 <Justin_o> would that make more sense
2015-01-26T19:26:28 <Justin_o> or should we stick to finding it in the static environment
2015-01-26T19:26:38 <Bosmon> Well what does it mean to be "on the page"?
2015-01-26T19:26:44 <Bosmon> And what do we do if we find it to be "off"?
2015-01-26T19:26:59 <Justin_o> Bosmon: i guess the same thing we do with the video player
2015-01-26T19:27:12 <Bosmon> Anyway, feel free to continue using the staticEnvironment for the purposes of this upcoming demo
2015-01-26T19:27:18 <Justin_o> Bosmon: okay
2015-01-26T19:27:19 <Justin_o> thanks
2015-01-26T19:27:19 <Bosmon> By the time we have any integrators, we\'ll have a better answer for them
2015-01-26T19:27:33 <Justin_o> Bosmon: we\'ll leave it to our future selves to fix :)
2015-01-26T19:27:53 <Bosmon> The video player integration is currently disastrous
2015-01-26T19:28:02 <Justin_o> Bosmon: yes, thanks for fixing that :)
2015-01-26T19:28:04 <Bosmon> And I would imagine mostly works by sheer luck : P
2015-01-26T19:28:23 <Bosmon> We barely had any IoC at all at the time we wrote it
2015-01-26T19:28:32 <Bosmon> And no framework modelRelay
2015-01-26T19:29:10 <Justin_o> yah.. that\'s true
2015-01-26T19:29:34 <Justin_o> fortunately cindyli and anastasiac have cleaned up a lot of the really messy parts
2015-01-26T19:30:02 <Justin_o> but it\'d be really great to get it working with the latest infusion
2015-01-26T19:30:33 <Bosmon> Yes
2015-01-26T19:30:41 <Bosmon> I am planning for it to happen quite soon
2015-01-26T19:31:00 <Bosmon> I think I am free for a while to really make a good effort at these framework issues finally
2015-01-26T19:31:20 <Bosmon> Especially since colinclark has said that the videoPlayer has become strategic once again
2015-01-26T19:34:36 <Bosmon> GOOD GRIEF
2015-01-26T19:34:51 <Bosmon> During startup I have found cindyli\'s branch to register a total of 242 modelRelay links.............
2015-01-26T19:40:47 <Bosmon> Amazingly it seems that these are mostly genuine
2015-01-26T19:40:52 <Bosmon> We really need tools
2015-01-26T19:50:47 * colinclark joined the channel
2015-01-26T19:59:49 <cindyli> whoa, 242. Bosmon, amazing that the framework survives with managing such good amount of relays. good job, Bosmon
2015-01-26T20:01:15 <Bosmon> I am lost in a giant forest of relays
2015-01-26T20:01:31 <Bosmon> Although I\'ve at least determined that the faulty one belongs to a textfieldSlider...
2015-01-26T20:03:06 <Bosmon> It\'s actually quite fortunate that there is this otherwise offputting "fluid.resolveModelListener" function here
2015-01-26T20:03:28 <Bosmon> Since in fact it has exactly the effect that I would have implemented, if I had bothered checking that ChangeAppliers were not destroyed before relaying to them
2015-01-26T20:03:41 <colinclark> a forest of relays
2015-01-26T20:03:57 <Bosmon> It turns out the fluid.expandOptions already does the necessary checking by itself, which is why we are getting the diagnostic
2015-01-26T20:05:43 <Bosmon> My suspicion is that this problem is caused by the same blunder which preceded http://issues.fluidproject.org/browse/FLUID-5546
2015-01-26T20:06:03 <Bosmon> Which in theory means that it will be quite quick to resolve once I discover what the failure pattern is
2015-01-26T20:17:35 <Bosmon> colinclark - can we have tools? : P
2015-01-26T20:27:40 <Bosmon> cindyli - I think I have discovered the issue
2015-01-26T20:27:48 <Bosmon> So it isn\'t a framework failure as such
2015-01-26T20:28:31 <Bosmon> But the issue is that one modelListener to the change triggered in fluid.prefs.prefsEditor.reset destroys a collection of the subcomponents of the component
2015-01-26T20:28:44 <Bosmon> When a further modelListener is already in the queue to be notified of the change
2015-01-26T20:30:07 <Bosmon> What would be consistent with our other implementation is to supply the same "fail-fast" behaviour for ChangeApplier events that we do for standard events - that is, an attempt to notify a destroyed listener is a no-op rather than a failure
2015-01-26T20:31:12 <Bosmon> I don\'t really see another option, given the advice to implementors "don\'t destroy components from a modelListener" would just be too awkward and onerous to follow
2015-01-26T20:49:59 * cindyli has quit
2015-01-26T20:55:13 * cindyli joined the channel
2015-01-26T20:58:08 <cindyli> great discovery, Bosmon
2015-01-26T20:58:45 <Justin_o> anastasiac: here is the css flex box info http://css-tricks.com/snippets/css/a-guide-to-flexbox/
2015-01-26T20:59:04 <Justin_o> i found that guide to be pretty helpful, we use flex box in the security ui
2015-01-26T20:59:05 * simonjb has quit
2015-01-26T20:59:51 <anastasiac> thanks, Justin_o
2015-01-26T21:00:09 <Justin_o> anastasiac: here are the icon fonts we used for security https://github.com/simonbates/universal/tree/GPII-17/gpii/node_modules/gpii-oauth2/gpii-oauth2-authz-server/public/src/core/fonts
2015-01-26T21:00:20 <Justin_o> anastasiac: and the related css https://github.com/simonbates/universal/blob/GPII-17/gpii/node_modules/gpii-oauth2/gpii-oauth2-authz-server/public/src/core/css/c4a-all-icons.css
2015-01-26T21:00:47 <Justin_o> anastasiac: just a warning, with the new fonts the names and mapping to pua character codes might change
2015-01-26T21:01:37 <anastasiac> ok, thanks Justin_o
2015-01-26T21:11:04 <colinclark> Bosmon: YES WE CAN!
2015-01-26T21:12:52 * sgithens______ has quit
2015-01-26T21:14:25 * danaayotte has quit
2015-01-26T21:26:36 * jhung has quit
2015-01-26T21:28:35 * sgithens______ joined the channel
2015-01-26T21:28:52 * anvk has quit
2015-01-26T21:32:27 * cindyli has quit
2015-01-26T21:40:59 * Sepideh has quit
2015-01-26T21:42:03 * Sepideh joined the channel
2015-01-26T21:45:52 * danaayotte joined the channel
2015-01-26T21:49:02 * danaayotte has quit
2015-01-26T21:49:36 * lliskovoi has quit
2015-01-26T21:57:31 * clown has left the channel
2015-01-26T22:02:22 * danaayotte joined the channel
2015-01-26T22:03:25 * jessm has quit
2015-01-26T22:08:59 <colinclark> hey danaayotte
2015-01-26T22:09:02 <colinclark> how\'s it going?
2015-01-26T22:09:53 * Sepideh has quit
2015-01-26T22:12:29 <danaayotte> hello colinclark, it\'s going alright
2015-01-26T22:12:33 <colinclark> cool
2015-01-26T22:12:34 <danaayotte> how\'s it going with you?
2015-01-26T22:12:41 <colinclark> pretty good, i think
2015-01-26T22:12:45 <colinclark> i\'m still pretty jetlagged
2015-01-26T22:12:51 <colinclark> so it sort of feels like 10 pm or so
'

b'2015-01-26T02:04:34 * jhung has quit
2015-01-26T03:56:02 * rk29 joined the channel
2015-01-26T04:54:29 * rk29 has quit
2015-01-26T05:16:23 * rk29 joined the channel
2015-01-26T05:18:16 * rk29 has quit
2015-01-26T05:28:58 * rk29 joined the channel
2015-01-26T06:07:22 * rk29 has quit
2015-01-26T06:08:59 * rk29 joined the channel
2015-01-26T06:39:31 * yzen joined the channel
2015-01-26T07:24:48 * the-t-in-rtf joined the channel
2015-01-26T07:32:57 * rk29 has quit
2015-01-26T07:44:05 * rk29 joined the channel
2015-01-26T07:48:39 * rk29 has quit
2015-01-26T09:04:41 * the-t-in-rtf has quit
2015-01-26T09:44:32 * slim_jim joined the channel
2015-01-26T11:05:35 * slim_jim has quit
2015-01-26T11:16:03 * slim_jim joined the channel
2015-01-26T11:39:00 * jhung joined the channel
2015-01-26T13:22:57 * Justin_o joined the channel
2015-01-26T13:24:36 * michelled joined the channel
2015-01-26T13:41:29 * the-t-in-rtf joined the channel
2015-01-26T13:52:30 * cindyli joined the channel
2015-01-26T13:53:43 <Justin_o> Bosmon: how does one terminate a fluid.each call?
2015-01-26T13:53:54 * colinclark joined the channel
2015-01-26T13:54:07 <sgithens______> Is there a sec call today?
2015-01-26T13:54:47 <Justin_o> Bosmon: https://github.com/fluid-project/infusion/blob/master/src/framework/core/js/Fluid.js#L459
2015-01-26T13:54:59 <colinclark> sgithens______: I think we should do one, yes
2015-01-26T13:55:06 <colinclark> assuming simonjb is around today
2015-01-26T13:55:44 <Justin_o> Bosmon: i can\'t seem to find a value that terminates it.
2015-01-26T13:59:07 <Bosmon> Hi there Justin_o - I\'m not quite sure what you mean
2015-01-26T13:59:18 <Bosmon> Oh, I see
2015-01-26T13:59:35 <Bosmon> This comment is outrageously out of date and should be eliminated
2015-01-26T13:59:49 <Bosmon> I don\'t believe fluid.each could be terminated even as early as 2008
2015-01-26T14:00:04 <Bosmon> Actually to be honest I don\'t think it was ever possible to terminate it
2015-01-26T14:00:10 <Bosmon> The person who wrote the comment must have been in error
2015-01-26T14:00:44 <Justin_o> Bosmon: okay, i\'ll file a jira to remove that part of the comment. Thanks.
2015-01-26T14:00:53 <Bosmon> Cheers, Justin_o
2015-01-26T14:01:01 <Bosmon> Hey there colinclark!
2015-01-26T14:01:03 <Justin_o> Bosmon: is there a recommended alternative to fluid.each that can be terminated
2015-01-26T14:01:03 <Bosmon> GOOD MONING!
2015-01-26T14:01:17 <Bosmon> Justin_o - fluid.find and fluid.find_if are our "search" algorithms
2015-01-26T14:02:07 <Justin_o> Bosmon: the issue is that i\'m going through all of the nodes on a page for the text to speech demo. Each time it finds text it calls "speak" on it, which adds it to the web api\'s speech queue.
2015-01-26T14:02:16 <Bosmon> fluid.find is terminated by non-undefined, and fluid.find_if is terminated by non-false
2015-01-26T14:02:17 <Justin_o> but if i stop it, i don\'t want it to keep adding items to the queue
2015-01-26T14:02:28 <Justin_o> so i want to stop the iteration
2015-01-26T14:02:39 <Bosmon> Justin_o - ok
2015-01-26T14:02:40 <Justin_o> so it\'s not really a find operation i don\'t think
2015-01-26T14:02:44 <Bosmon> What is a "node on the page"?
2015-01-26T14:02:47 <Bosmon> Do you mean a DOM node?
2015-01-26T14:02:58 <Justin_o> yes
2015-01-26T14:03:03 <Justin_o> more or less
2015-01-26T14:03:08 <Bosmon> Does the search take long enough that it is visible to the user?
2015-01-26T14:03:14 <Bosmon> Ah
2015-01-26T14:03:16 <Bosmon> it calls speak
2015-01-26T14:03:19 <Justin_o> i mean it looks through the node of a DOM node for text nodes too i guess
2015-01-26T14:03:22 <Justin_o> and children
2015-01-26T14:03:23 <Bosmon> ok
2015-01-26T14:03:47 <Bosmon> In theory this is a job for your dataSource filter : P
2015-01-26T14:04:07 <Bosmon> Although that one is non-stoppable, I guess
2015-01-26T14:04:12 <Justin_o> funny, cindyli was saying something like that on friday
2015-01-26T14:04:20 <Justin_o> yes, i don\'t think you can stop that
2015-01-26T14:04:21 <Bosmon> It at least does the work of being flow-limited
2015-01-26T14:04:49 <Bosmon> As it stands, you can\'t really avoid creating some kind of "component with state" which governs this work
2015-01-26T14:05:44 <Bosmon> You could either have a model flag indicating whether the component should continue queuing work, or else you could just have it listen for its own "onDestroy" event and cease to do work once it is destroyed
2015-01-26T14:06:13 <Justin_o> okay, but i\'d still need a way to do the "ceasing" which means i can\'t use fluid.each i take it
2015-01-26T14:06:36 <Bosmon> Justin_o - right - you couldn\'t anyway, since I do believe you want the "flow-limiting" part of the implementation
2015-01-26T14:06:50 <Bosmon> That is, it shouldn\'t queue more work until the speech has fallen idle
2015-01-26T14:07:04 <Bosmon> I don\'t know whether the web speech API has a means to "recall" work after it has been queued
2015-01-26T14:07:11 <Justin_o> Bosmon: that part is actually okay, the web speech api handles it
2015-01-26T14:07:37 <Justin_o> you can add as much as you want, and it queues it up. you can pause and resume or cancel the queue
2015-01-26T14:07:42 <Bosmon> ok
2015-01-26T14:08:11 <Justin_o> i just don\'t want to have the component inadvertently restart it because it\'s still looping through the DOM nodes after you tell it to cancel
2015-01-26T14:08:26 <Bosmon> Well then this leads us back to the earliest question - does the iteration take such an appreciable time that the user could witness it?
2015-01-26T14:08:36 <Bosmon> Justin_o - that seems unclear, since as you know JavaScript is single-threaded
2015-01-26T14:08:48 <Bosmon> So unless your loop suspends, there can\'t be any time for user action during the loop
2015-01-26T14:09:14 <Justin_o> Bosmon: ah right.. okay.. so maybe it doesn\'t matter
2015-01-26T14:09:16 <Bosmon> So unless your algorithm is already written asynchronously, there couldn\'t possibly be any condition of being "still looping through the DOM node after you tell it to cancel"
2015-01-26T14:09:35 <Justin_o> i haven\'t really noticed the effect yet.. but just thought he page was sufficiently short enough that it didn\'t occur
2015-01-26T14:13:03 * Sepideh joined the channel
2015-01-26T14:14:59 * simonjb joined the channel
2015-01-26T14:17:53 <Justin_o> yes, it isn\'t asynchronous.. so i guess i don\'t need to worry about it for now.. if i find that it becomes too slow to start i can reimplement it asynchronously and build in the necessary stopping mechanisms..
2015-01-26T14:17:54 <Justin_o> thanks
2015-01-26T14:18:04 <Justin_o> Bosmon: ^
2015-01-26T14:18:37 <Bosmon> Cheers Justin_o
2015-01-26T14:21:00 * jessm joined the channel
2015-01-26T14:21:19 <michelled> jhung: how\'s it going?
2015-01-26T14:23:09 <jhung> michelled: going okay. trying to get stuff done for this afternoon\'s PhET meeting.
2015-01-26T14:23:15 <michelled> ah, cool
2015-01-26T14:23:23 <michelled> jhung: let\'s you and I check in tomorrow
2015-01-26T14:23:33 <jhung> ok thanks michelled
2015-01-26T14:23:55 <michelled> Justin_o, cindyli: I think you guys are good to run with our tasking, we\'ll have a floe meeting later in the week after I\'ve had a chance to meet with jessm and colinclark
2015-01-26T14:24:06 <cindyli> hi Bosmon, i wonder if you have some time to help me with an issue I\'m having with my FLUID-5552 branch. this branch is to upgrade the prefs framework with the model relay. I haven\'t been able to successfully create the unit test to demonstrate the issue without having the prefs framework contex
2015-01-26T14:24:21 <cindyli> ok, michelled
2015-01-26T14:24:30 <Bosmon> cindyli - sure - I\'m in a meeting until 3pm GMT but I can help you later
2015-01-26T14:25:04 <cindyli> sure, thanks, Bosmon, ping me when you are available
2015-01-26T14:25:17 <Bosmon> In the meantime you may or may not be interested in this page of notes I wrote last night : P
2015-01-26T14:25:18 <Bosmon> http://wiki.fluidproject.org/display/fluid/New+New+Notes+on+the+ChangeApplier
2015-01-26T14:25:24 * anvk joined the channel
2015-01-26T14:25:47 <cindyli> ah "NEW NEW"! reading...
2015-01-26T14:26:30 <Bosmon> I meant to add the link in to FLUID-5517 and FLOE-230 at the top, which is the main item I am suspecting will require the rewrite
2015-01-26T14:26:42 <Bosmon> I haven\'t finished investigating FLUID-5517 yet but I have succeeded in making a very small failing test case
2015-01-26T14:27:07 <Bosmon> There\'s a chance that it might be caused by the same issue as your FLUID-5552 issue - perhaps you can try to write up what you have found in the meantime on your JIRA?
2015-01-26T14:27:51 <cindyli> sure, Bosmon
2015-01-26T14:28:50 <Justin_o> michelled: yep, i\'m good to run with the tasking
2015-01-26T14:32:25 <Justin_o> Bosmon: I\'ve filed the jira for removing the comment about termination from fluid.each. I\'ve also attached a pull request to remove that bit. http://issues.fluidproject.org/browse/FLUID-5591
2015-01-26T14:32:55 <Bosmon> Thanks, Justin_o
2015-01-26T14:36:27 * yzen joined the channel
2015-01-26T14:37:35 <Justin_o> np
2015-01-26T14:53:27 * clown joined the channel
2015-01-26T15:05:04 <cindyli> Bosmon: i\'ve described the issue in FLUID-5552 jira - http://issues.fluidproject.org/browse/FLUID-5552#comment-25303
2015-01-26T15:05:19 * danaayotte joined the channel
2015-01-26T15:09:48 <Bosmon> Hi cindyli - it\'s an interesting issue
2015-01-26T15:10:03 <Bosmon> I had made a mental note to apply the same "destruction guarding" to models that we currently do to standard listeners
2015-01-26T15:10:19 <Bosmon> This problem is probably exposing a bug that we have always had in the UIO implementation
2015-01-26T15:11:11 <Bosmon> cindyli - can you show what implementation you currently have for a test case to expose this issue?
2015-01-26T15:12:51 <cindyli> Bosmon: if you mean what has been changed in 5552 branch - https://github.com/cindyli/infusion/compare/FLUID-5552
2015-01-26T15:13:05 * simonjb has quit
2015-01-26T15:13:35 <cindyli> Bosmon: i haven\'t tried to find exactly which piece of change that creates this issue
2015-01-26T15:14:53 <Bosmon> cindyli - you said you hadn\'t yet been able to make a unit test for the issue?
2015-01-26T15:15:21 <cindyli> oh, that one, one sec for copying pasting
2015-01-26T15:16:21 <cindyli> Bosmon: http://pastebin.com/w3uS8j1X
2015-01-26T15:20:56 * anastasiac joined the channel
2015-01-26T15:24:38 <Bosmon> Hi cindyli - I created http://issues.fluidproject.org/browse/FLUID-5592 for this issue
2015-01-26T15:24:52 <Bosmon> Could you add your test case to a pull request + branch for this JIRA?
2015-01-26T15:24:54 <Bosmon> Cheers!
2015-01-26T15:28:29 <cindyli> i certainly can do that, but my test case doesn\'t actually re-produce the issue?
2015-01-26T15:29:22 <cindyli> ok, see your comment in the jira. will add that test case
2015-01-26T15:29:35 * lliskovoi joined the channel
2015-01-26T15:37:14 * colinclark has quit
2015-01-26T15:39:07 <michelled> anastasiac: we aren\'t going to have the regular Floe meeting today
2015-01-26T15:39:33 <anastasiac> ok, michelled. any particular reason?
2015-01-26T15:39:36 <michelled> I know you already are, but it would be great if you could continue helping Justin_o and cindyli with the work that came out of tasking last week
2015-01-26T15:40:04 <anastasiac> whatever I can do...
2015-01-26T15:40:04 <michelled> anastasiac: I think it will be more helpful to have the meeting after I\'ve had a chance to talk to jessm and colinclark
2015-01-26T15:40:48 * simonjb joined the channel
2015-01-26T15:40:48 <anastasiac> right
2015-01-26T15:43:51 <Bosmon> Thanks for the pull + report, cindyli!
2015-01-26T15:44:41 <cindyli> not a problem, thank you for looking into it, Bosmon
2015-01-26T15:47:44 <Bosmon> I will look at it later today
2015-01-26T15:48:04 <Bosmon> If it can be characterised, this should be a much easier issue to resolve than FLUID-5517
2015-01-26T15:49:56 <cindyli> cheers!
2015-01-26T15:55:15 * slim_jim has quit
2015-01-26T16:02:26 <Justin_o> Bosmon, colinclark, cindyli: do you have time to talk through in implementation of a new text-to-speech enactor. The use case we have for the First Discovery Tool is something that can be asked to say something. e.g. on page load a message will be read, also as items gain focus, a message will be read.
2015-01-26T16:02:47 <Justin_o> the current enactor we have in the prefs framework demo just reads off the entire page.
2015-01-26T16:03:49 <Justin_o> the issue i\'m struggling with is how to best pass information from the page to the enactor. What i\'m thinking now is that every thing on a page that wants to relay a message will need to know about the enactor, and I\'m not sure this is appropriate.
2015-01-26T16:14:42 <Bosmon> Justin_o - no, it is not appropriate
2015-01-26T16:14:53 <Bosmon> What kind of information are you imagining will need to be passed?
2015-01-26T16:19:28 <Bosmon> Thanks for the pull for FLUID-5591, Justin_o, merged now
2015-01-26T16:19:54 <Bosmon> I need to rush to an appointment now - I\'ll be back in about an hour
2015-01-26T16:27:59 * danaayotte has quit
'


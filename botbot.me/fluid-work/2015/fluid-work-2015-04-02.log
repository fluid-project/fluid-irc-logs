b'2015-04-02T18:39:36 <Bosmon> There\'ll be a couple more big revolutions coming..... the "autoInit revolution" and the "options flattening revolution"
2015-04-02T18:39:43 <Bosmon> Which may well come in a big bang together as well
2015-04-02T18:39:49 <Bosmon> But a separate big bang to this one : P
2015-04-02T18:40:02 <Bosmon> The effect of those will be more trivial, structurally, but it will mean a massive change to all configuration we\'ve ever written
2015-04-02T18:41:18 <Justin_o> that\'s scary
2015-04-02T18:41:22 <Bosmon> We might hold off on that one until we know that all of our communities are pretty quiet
2015-04-02T18:41:47 <Justin_o> considering all the other things we\'ll have to upgrade like videoPlayer, metadata, first discovery, pmt/pcp and all the other things in GPII
2015-04-02T18:41:51 <Bosmon> Yes
2015-04-02T18:41:52 <Justin_o> yah
2015-04-02T18:41:56 <Bosmon> I think all of those will come first
2015-04-02T18:42:08 <Justin_o> PMT/PCP are probably quite out of date already
2015-04-02T18:42:14 <Bosmon> We will need to get our house in order after this current big bang
2015-04-02T18:42:19 <Bosmon> And that will take many months
2015-04-02T18:43:16 <Bosmon> colinclark is preparing a "shim" to make the old framework to look like the new one in flocking, and there will be a similar shim for the Nexus in P4A
2015-04-02T18:43:28 <Bosmon> Actually now I come to think of it, the "options flattening bang" could happen slowly
2015-04-02T18:43:47 <Bosmon> Since we can just create a new API named "fluid.define" that works the new way, by just transforming the defaults into the old format
2015-04-02T18:44:20 <Bosmon> Things like distributeOptions are awkward though since they implicitly depend on there being an area named "options"
2015-04-02T18:45:06 <Bosmon> You can see that in my "debugging probe" I pretended that there wasn\'t..... primarily since the only thing you can target with it right now is "listeners" anyway, which you know is really inside "options"
2015-04-02T18:45:20 <Bosmon> It\'s really only "container" which is seriously awkward in this respect
2015-04-02T18:45:39 <Bosmon> And we keep running into issues again and again caused by the fact that "container" isn\'t an option
2015-04-02T18:45:55 <Bosmon> I guess we can implement a "transitional framework" where you can write "container" in either place
2015-04-02T18:47:29 <Justin_o> Bosmon: sure, although I\'d probably vote for having all that cleaned up for the 2.0 release
2015-04-02T18:49:20 * colinclark has quit
2015-04-02T18:50:37 <Justin_o> Bosmon: i\'m going offline now.. i\'ll be back on tuesday.. good luck with everything
2015-04-02T18:50:53 * colinclark joined the channel
2015-04-02T18:50:56 <Bosmon> Cheers Justin_o - have a great Easter!
2015-04-02T18:50:58 <Bosmon> See you next week
2015-04-02T19:02:13 * sepideh has quit
2015-04-02T19:33:27 * sepideh joined the channel
2015-04-02T19:38:07 <simonjb> jhung: I\'m finished my meeting with Michelle, how is it going with the docs?
2015-04-02T19:38:32 * clown joined the channel
2015-04-02T19:40:22 <jhung> simonjb: It\'s going fine. Since handlebars does not have logical operators, we will need to write a helper to compare the current document\'s category to the categories in the table of contents (and output only the one that matches).
2015-04-02T19:42:06 <simonjb> jhung: did you want some help with that?
2015-04-02T19:43:45 <jhung> simonjb: I\'m trying to figure it out on my own so I can learn how hb works. If I get stuck or once I have something, I\'ll ping you to take a look?
2015-04-02T19:44:22 <simonjb> jhung: sounds good, let me know if I can help
2015-04-02T19:44:54 <jhung> thanks simonjb
2015-04-02T19:57:41 * danaayotte has quit
2015-04-02T20:00:54 * michelled joined the channel
2015-04-02T20:01:30 * the-t-in-rtf has quit
2015-04-02T20:38:13 * cindyli has quit
2015-04-02T20:52:23 * clown has left the channel
2015-04-02T20:54:29 * jhung has left the channel
2015-04-02T20:56:33 * Justin_o has quit
2015-04-02T21:01:09 * sepideh has quit
2015-04-02T21:10:03 * slim_jim joined the channel
2015-04-02T21:10:08 * slim_jim has quit
2015-04-02T21:25:40 * simonjb has quit
2015-04-02T21:34:03 * michelled_ joined the channel
2015-04-02T21:35:22 * michelled has quit
2015-04-02T21:35:22 * michelled_ is now known as michelled
2015-04-02T22:00:31 * michelled has quit
2015-04-02T23:01:58 * avtar has quit
2015-04-02T23:07:59 * colinclark has quit
2015-04-02T23:54:44 * danaayotte joined the channel
'

b'2015-04-02T16:29:46 * sepideh joined the channel
2015-04-02T16:34:44 * sepideh has quit
2015-04-02T16:35:40 * sepideh joined the channel
2015-04-02T16:43:24 * gtirloni has quit
2015-04-02T16:45:10 * sepideh has quit
2015-04-02T16:46:57 * sepideh joined the channel
2015-04-02T16:47:51 * gtirloni joined the channel
2015-04-02T17:03:49 * colinclark joined the channel
2015-04-02T17:13:30 * avtar has quit
2015-04-02T17:20:26 * sepideh has quit
2015-04-02T17:24:26 * sepideh joined the channel
2015-04-02T17:35:23 <jhung> hi simonjb. I need you help on the infusion docs ToC. I have pushed up my code into this branch: https://github.com/jhung/infusion-docs/tree/FLUID-5609
2015-04-02T17:36:52 <Bosmon> Hey cindyli - thanks for your help earlier - I have now been able to get these test cases working again :)
2015-04-02T17:37:07 <Bosmon> You\'ll be glad to know that the only demands blocks that are still in existence now lie only in test cases
2015-04-02T17:37:47 <cindyli> that\'s great.
2015-04-02T17:38:22 <simonjb> jhung: I\'m meeting with Michelle at 2pm to plan security; could we chat before that?
2015-04-02T17:38:31 <jhung> Sure simonjb
2015-04-02T17:41:11 <simonjb> jhung: I\'ve grabbed your code, want to call me on skype when you\'re ready?
2015-04-02T17:41:23 <jhung> Sure simonjb
2015-04-02T17:41:41 * colinclark has quit
2015-04-02T17:42:42 * michelled has quit
2015-04-02T17:43:09 * michelled joined the channel
2015-04-02T17:44:25 * michelled has quit
2015-04-02T17:44:51 * michelled joined the channel
2015-04-02T17:45:53 * colinclark joined the channel
2015-04-02T17:46:35 * michelled has quit
2015-04-02T17:47:01 * michelled joined the channel
2015-04-02T17:48:18 * michelled has quit
2015-04-02T17:48:45 * michelled joined the channel
2015-04-02T17:58:37 <Bosmon> On an annoying note, our favourite wacky way of triggering a global failure in the browser no longer seems to work very nicely in Chrome
2015-04-02T17:58:50 <Bosmon> You may remember that what we do is try to invoke a non-existent function on a string holding a message
2015-04-02T17:59:01 <Bosmon> Unfortunately on Chrome this now results in the unhelpful diagnostic "undefined is not a function"
2015-04-02T17:59:06 <Bosmon> THE WORLD CHANGES AND WE CHANGE WITH IT
2015-04-02T18:00:02 <Justin_o> Bosmon: is there a new best practice for that?
2015-04-02T18:00:21 <Bosmon> Justin_o - I\'m just trying to devise one now :)
2015-04-02T18:00:29 <Bosmon> I\'ll tell you what it is as soon as I can : P
2015-04-02T18:00:35 <Justin_o> :) thanks
2015-04-02T18:00:36 <Bosmon> Although a lot of the motivation behind our current approach was IE
2015-04-02T18:00:42 <Bosmon> Which is no longer much of an issue
2015-04-02T18:01:04 <Justin_o> Bosmon: that\'s good.. i wonder how their new browser will be
2015-04-02T18:01:06 <Bosmon> But we settled on our current approach as the only thing we could think of that would absolutely, certainly produce a console diagnostic and possibly a debugger trap on IE
2015-04-02T18:01:11 * michelled has quit
2015-04-02T18:01:29 <Bosmon> Given it was perfectly happy to swallow standard exceptions of all kinds
2015-04-02T18:01:59 <Bosmon> Firefox seems to still produce its standard error message
2015-04-02T18:02:08 <Bosmon> TypeError: message[\'Assertion failure - check console for details\'] is not a function
2015-04-02T18:03:41 <Bosmon> It might be that our best practice simply returns to throwing a standard exception
2015-04-02T18:03:44 * gtirloni joined the channel
2015-04-02T18:04:01 <Bosmon> Given it seems that our currently supported browser profile is probably relatively happy with that now
2015-04-02T18:04:12 <Bosmon> It certainly produces a much saner diagnostic
2015-04-02T18:05:09 <Bosmon> And Firefox seems to now advertise the ability to catch TypeErrors now, so there is no longer the hard categorical distinction between that kind of failure and others that there used to be
2015-04-02T18:05:34 <Bosmon> fluid.fail is going to have to change completely anyway, with the introduction of the NEXUS and our LIVE CODING IDIOM
2015-04-02T18:06:14 <Justin_o> oh because you don\'t actually want it to halt the execution completely?
2015-04-02T18:06:33 <Bosmon> Justin_o - yes, and even more than that, we need to completely eliminate the possibility for any kind of unrecoverable exception : P
2015-04-02T18:06:50 <Bosmon> Not only must it not halt the execution completely, it will have to completely and cleanly back out the current work unit, whatever it was
2015-04-02T18:07:02 <Bosmon> This will be an extremely tough architectural challenge
2015-04-02T18:07:07 <colinclark> and an awesome one
2015-04-02T18:07:13 <Bosmon> Yes
2015-04-02T18:07:22 <Bosmon> I don\'t know of any environment that guarantees this
2015-04-02T18:07:47 <Justin_o> Bosmon: if you can get that to work, can we allow the debugger to step backwards as well
2015-04-02T18:07:54 <Bosmon> I don\'t know what "Self" does in the presence of the submission of corrupt or non-compiling code, but perhaps it does something nice
2015-04-02T18:08:04 <Bosmon> Justin_o - well that\'s going a little far :)
2015-04-02T18:08:11 <Bosmon> but we\'ll certainly be able to BROWSE backwards
2015-04-02T18:08:25 <Bosmon> That is, browse backwards through the state of IoC records
2015-04-02T18:08:37 <Bosmon> Which will have a lot of the effect of allowing the debugger to step backwards
2015-04-02T18:08:53 <Justin_o> okay, that\'s cool
2015-04-02T18:08:55 <Bosmon> But obviously we can never get the real JS debugger to step backwards through a native JS function, unless it has already been written to support that
2015-04-02T18:09:35 * clown_mtg has quit
2015-04-02T18:09:48 <Bosmon> But in the end we\'ll be able to browse backwards through previous states of the IoC tree, at least on a per-component granularity, as well as browse backwards through previous states of any models, on a per-transaction granularity
2015-04-02T18:11:03 <Bosmon> But yes, in the relatively near future we\'ll have to have a much, much better fluid.fail, that doesn\'t simply conclude that "all bets are off" in recovering anything from the running application
2015-04-02T18:11:30 <Bosmon> This work will have to be done together with the async ginger world work, since this is what will implement both our new async and our new fail semantics
2015-04-02T18:12:29 <Bosmon> These always traditionally go together, whether it is in the promises mould or the monadic mould
2015-04-02T18:12:47 <Justin_o> sounds like a lot of work to implement all of that
2015-04-02T18:12:54 <Bosmon> Yes, it will be
2015-04-02T18:13:05 <Bosmon> It\'s a lot of work simply to remove demands blocks from the world : P
2015-04-02T18:13:48 <Bosmon> The great ROY FIELDING has remarked.... "In reality, the effort required to design something is inversely proportional to the simplicity of the result."
2015-04-02T18:14:01 <Bosmon> But I think he misused the connective "inversely proportional" there : P
2015-04-02T18:14:15 <Bosmon> I think what he really meant to say is "In reality, the effort required to design something is directly proportional to the simplicity of the result."
2015-04-02T18:14:43 <Bosmon> He does start out by observing "However, I think most people just make the mistake that it should be simple to design simple things."
2015-04-02T18:15:35 <danaayotte> +1 Bosmon!
2015-04-02T18:18:52 * avtar joined the channel
2015-04-02T18:22:30 <Bosmon> Speaking of "simplicity", Justin_o, you\'ll be glad to know I\'m finally addressing your FLUID-5264 report
2015-04-02T18:22:40 <Bosmon> Here is a sample of our new-style "contextAwareness" configuration: https://github.com/amb26/infusion/blob/FLUID-5249/src/components/uploader/js/Uploader.js#L326
2015-04-02T18:23:46 <Bosmon> You\'ll be pleased to see that this definitions of fluid.uploader is substantially less incomprehensible than the old one ......
2015-04-02T18:24:24 <Bosmon> In fact I think it\'s fair to say that it\'s the first definition that has ever made any sense at all
2015-04-02T18:24:38 <Justin_o> :)
2015-04-02T18:24:45 <Justin_o> are technology and liveness keywords?
2015-04-02T18:24:54 <Bosmon> No, they are just namespaces
2015-04-02T18:25:13 <Bosmon> You can contribute whatever material you like to the "contextAwareness" block
2015-04-02T18:25:46 <Bosmon> Here\'s an example of an options distribution which creates a new dimension in it: https://github.com/amb26/infusion/blob/FLUID-5249/src/components/uploader/js/UploaderCompatibility-Infusion1.2.js#L87
2015-04-02T18:25:55 <Justin_o> Bosmon: ah i see, so in this case, the technology block always supplies the grade name?
2015-04-02T18:26:14 <Bosmon> All of this stuff is now integrated and fairly sane, rather than each axis of adaptation using its own crazy ad-hoc scheme
2015-04-02T18:26:24 <Bosmon> And we have completely eliminated pernicious arrays from the system
2015-04-02T18:26:31 <Bosmon> Arrays always make it extremely hard to repurpose things
2015-04-02T18:27:19 <Bosmon> Justin_o - the default setup has "technology" with just a default, but the first thing that happens on line 348 is that we contribute the HTML5 adaptation scheme
2015-04-02T18:27:27 <Bosmon> So in practice in any reasonable case we\'ll get that one
2015-04-02T18:27:47 <Bosmon> But I was just illustrating how easy it is for 3rd (and 4th etc.) parties to contribute fresh adaptations into an existing component
2015-04-02T18:28:04 <Bosmon> By just issuing new "{/ " style distributions
2015-04-02T18:28:37 <Bosmon> And since these distributions all have NAMES now (unlike demands blocks) it\'s also perfectly possible for the other parties to take away or reissue existing adaptations
2015-04-02T18:28:45 <Justin_o> Bosmon: so the order (priority) of those matters
2015-04-02T18:28:47 <Justin_o> ?
2015-04-02T18:28:49 <Bosmon> Yes
2015-04-02T18:28:56 <Bosmon> PRIORITY has become a huge issue in many areas
2015-04-02T18:29:05 <Justin_o> so what if you want to check for different things
2015-04-02T18:29:13 <Justin_o> i think we had that use case once, maybe cindyli remembers
2015-04-02T18:29:18 <Bosmon> So I spent last week implementing a proper solution for it to finish off FLUID-5506
2015-04-02T18:29:20 <Justin_o> where we wanted to do two types of checks
2015-04-02T18:29:43 <Bosmon> Justin_o - all of the checks take place simultaneously - that is, all the ones in the different namespaced areas
2015-04-02T18:30:10 <Bosmon> And then they get resolved in whatever priority order you have determined
2015-04-02T18:30:22 <Bosmon> So it\'s very easy to add fresh checks by adding fresh namespaces
2015-04-02T18:30:42 <Justin_o> Bosmon: but what if i wanted the results of multiple ones to resolve
2015-04-02T18:30:49 <Bosmon> Justin_o - they all do resolve
2015-04-02T18:31:06 <Bosmon> And they all resolve by just contributing more gradeNames
2015-04-02T18:31:17 <Bosmon> You always get them all, the "priority" just determins what order you get them in
2015-04-02T18:31:39 <Justin_o> oh so in this case grades for both html5 and singleFile are added
2015-04-02T18:31:47 <Justin_o> but the priority sets the order that the grade merging happens?
2015-04-02T18:31:55 <Bosmon> Justin_o - you don\'t get singleFile if you get html5
2015-04-02T18:32:04 <Bosmon> You just get one block of gradeNames per namespace
2015-04-02T18:32:12 <Bosmon> But you get all the gradenames from the different namespaces
2015-04-02T18:32:19 <Justin_o> but aren\'t they in different namespaces?
2015-04-02T18:32:27 <Bosmon> No, both of those are in the "technology" namespace
2015-04-02T18:32:41 <Bosmon> Oh sorry
2015-04-02T18:32:44 <Bosmon> There is a bug :)
2015-04-02T18:32:47 <Bosmon> This code doesn\'t actually run yet : P
2015-04-02T18:32:55 <Justin_o> okay
2015-04-02T18:32:59 <Bosmon> Imagine that it says "technology" instead of "uploaderStrategy" on line 348
2015-04-02T18:33:03 <Justin_o> but  target: "{/ fluid.uploader}.options.contextAwareness.uploaderStrategy.checks.supportsBinaryXHR"
2015-04-02T18:33:09 <Justin_o> okay.. thanks.. that\'s what i was wondering about
2015-04-02T18:33:17 <Bosmon> Sorry about that :)
2015-04-02T18:33:25 <Bosmon> This isn\'t yet even "smoke test quality" code
2015-04-02T18:33:33 <Bosmon> But the underlying framework feature does actually work : P
2015-04-02T18:33:39 <Justin_o> :)
2015-04-02T18:33:40 <Bosmon> That is, its test cases run....
2015-04-02T18:33:56 * the-t-in-rtf has quit
2015-04-02T18:34:00 <Bosmon> Fixing the Uploader will be the FINAL BARRIER after I have got the prefs framework working again
2015-04-02T18:34:20 <Bosmon> But I just wanted to write "notional configuration" just to make sure that I had thought of all the requirements correctly
2015-04-02T18:34:32 <Justin_o> Bosmon: that\'s smart
2015-04-02T18:34:34 <Justin_o> it\'s looking good
2015-04-02T18:34:42 * the-t-in-rtf joined the channel
2015-04-02T18:34:45 <Bosmon> It\'s a big relief
2015-04-02T18:34:55 <Bosmon> Soon we won\'t be lugging this albatross around everywhere
2015-04-02T18:35:01 <Bosmon> I\'m withdrawing a huge number of framework features
2015-04-02T18:35:30 <Bosmon> Including initFunctions, the old ChangeApplier, manually constructed components, @1 syntax, COMPONENT_OPTIONS syntax, "returnedPath", and demands blocks
2015-04-02T18:37:02 <Bosmon> fluid.enhance.* is also gone, in favour of a complete reimplementation in fluid.contextAware.*
2015-04-02T18:37:57 <Justin_o> Bosmon: all that\'s coming in the same pull?
2015-04-02T18:38:03 <Bosmon> Justin_o - yes
2015-04-02T18:38:06 <Bosmon> All in a big bang
2015-04-02T18:38:19 <Bosmon> I realised that I would break so much in the global instantiator work, I may as well break everything properly
2015-04-02T18:38:25 <Justin_o> :) please send that to colinclark or michelled for review
2015-04-02T18:38:32 <Bosmon> Sure :)
2015-04-02T18:39:09 <Justin_o> yah, that\'s true.. i\'m pretty happy to ditch all the old code, we have the opportunity to clean house with 2.0 so we should drop as much as we can/should
'

b'2015-04-02T14:23:49 <Bosmon> I forgot to use my new grade
2015-04-02T14:23:54 <Bosmon> "fluid.resolveRootSingle"
2015-04-02T14:24:01 <Bosmon> So I suspect I have ended up creating two global stores....
2015-04-02T14:25:59 <Bosmon> I guess we need new kinds of PROBES
2015-04-02T14:26:10 <Bosmon> That are able to tell you when invokers are invoking, and what their return value is
2015-04-02T14:26:26 <cindyli> sounds like many new things in the implementation of the new root ginger world
2015-04-02T14:26:36 <Bosmon> hahaha
2015-04-02T14:27:06 <Bosmon> http://static1.squarespace.com/static/5037c462e4b0a8237802d1fa/t/51097523e4b0b8a2f7177afc/1359574308002/ginger-root-nutrition-and-calories.jpg
2015-04-02T14:27:19 <cindyli> lolllll....
2015-04-02T14:27:24 <Justin_o> haha
2015-04-02T14:27:24 * danaayotte joined the channel
2015-04-02T14:27:33 <Justin_o> Bosmon: FLUID-5597 is ready for review again
2015-04-02T14:31:22 * sepideh joined the channel
2015-04-02T14:31:27 * simonjb joined the channel
2015-04-02T14:32:54 <Bosmon> Cheers, Justin_o - looks good now, apart from the mysterious extra blank lines
2015-04-02T14:33:36 <Justin_o> Bosmon: where are the extra blank lines?
2015-04-02T14:33:54 <Bosmon> Lines 549 and 563
2015-04-02T14:35:18 <Bosmon> Justin_o - could the blocks at line 564 and 568 both execute?
2015-04-02T14:35:43 <Bosmon> Isn\'t there a chance in that case that the valuebinding could get rebased twice?
2015-04-02T14:37:43 <Bosmon> It looks to me that line 568 should really be an "else if" too
2015-04-02T14:37:45 <Justin_o> Bosmon: ah yah.. okay, i can add an else there too
2015-04-02T14:37:59 <Bosmon> In which case the block can become completely regular there -
2015-04-02T14:38:16 <Bosmon> that is, both 564 and 568 could be converted to top level "else if"
2015-04-02T14:38:46 <Justin_o> Bosmon: okay
2015-04-02T14:39:10 <Justin_o> Bosmon: you don\'t like the blanks lines between if blocks?
2015-04-02T14:39:20 <Bosmon> cindyli - so I found that there is still only one store
2015-04-02T14:39:31 <Bosmon> Justin_o - it\'s fine, it looks more regular now I\'m looking at the original file rather than just the diff
2015-04-02T14:39:46 <Bosmon> The blank lines, I mean
2015-04-02T14:40:39 <cindyli> ok. Bosmon, the problem you have is the uiEnhancer used by the prefsEditor is not getting the initial model?
2015-04-02T14:40:51 <Bosmon> cindyli - yes, it looks like it
2015-04-02T14:40:57 <Bosmon> Trying to trace how this happens now
2015-04-02T14:41:29 <Bosmon> Looks like "fetch" is called in this "finishInit" function
2015-04-02T14:42:27 <cindyli> Bosmon: do we still have staticEnvironment?
2015-04-02T14:42:33 <Bosmon> cindyli - it is gone
2015-04-02T14:42:35 <Justin_o> Bosmon: so i was looking over this again, and the code did assume that valuebinding and value would run at the same time
2015-04-02T14:42:43 <cindyli> the constructed store is supposed to be sitting in staticEnvironment
2015-04-02T14:42:54 <cindyli> where does it go now?
2015-04-02T14:43:08 <cindyli> line 148 in Store.js
2015-04-02T14:43:10 <Justin_o> Bosmon: but it was trying to rebase it twice, which is strange..
2015-04-02T14:43:13 <Bosmon> cindyli - you now add a special grade to a component "fluid.resolveRoot" or "fluid.resolveRootSingle"
2015-04-02T14:43:19 <cindyli> ok, i see
2015-04-02T14:43:27 <Justin_o> Bosmon: and it does need to do rebasing of both
2015-04-02T14:43:37 <Bosmon> Justin_o - so it was probably an accidental success, based on the fact that the 2nd rebase had no effect?
2015-04-02T14:43:51 <Justin_o> Bosmon: yep, i think so
2015-04-02T14:43:59 <Bosmon> Justin_o - ok cool
2015-04-02T14:44:01 <Justin_o> Bosmon: so i can clean it up a bit and leave the structure how it was
2015-04-02T14:44:12 <Justin_o> or i could do the valuebinding rebasing in two different blocks
2015-04-02T14:44:22 <Justin_o> what do you prefer?
2015-04-02T14:44:45 <Bosmon> Justin_o - I think one level of "nested if" makes sense here
2015-04-02T14:44:57 <Bosmon> So the first block becomes else if (rebased.valuebinding) {
2015-04-02T14:44:57 <Justin_o> Bosmon: okay thanks
2015-04-02T14:45:02 <Bosmon> .... do the valuebinding rebase
2015-04-02T14:45:12 <Bosmon> And then a separate if (reabsed.value) {
2015-04-02T14:45:13 <Bosmon> within that
2015-04-02T14:45:32 <Justin_o> that makes sense
2015-04-02T14:45:55 <Bosmon> This should give us the minimum redudancy and maximum clarity of structure
2015-04-02T14:48:59 <Justin_o> Bosmon: i agree, this looks much better. I\'ve pushed up the change
2015-04-02T14:56:21 <Bosmon> Cheers, Justin_o - this looks good now
2015-04-02T14:56:41 <Justin_o> Bosmon: thanks :)
2015-04-02T14:57:44 <Bosmon> cindyli - ok, so I finally found the problem :)
2015-04-02T14:58:02 <cindyli> what\'s the problem
2015-04-02T14:58:03 <Bosmon> The test case is failing to have the "temp store" substituted for the real cookie store
2015-04-02T14:58:10 <Bosmon> Since I had abolished all demands blocks
2015-04-02T14:58:21 <cindyli> cool
2015-04-02T14:58:31 <cindyli> nice to have demands blocks gone
2015-04-02T14:58:50 <cindyli> why does it fail with the temp store?
2015-04-02T14:58:52 <Bosmon> https://github.com/fluid-project/infusion/blob/master/tests/framework-tests/preferences/js/IntegrationTestsCommon.js#L22
2015-04-02T14:59:00 <Bosmon> I had eliminated this demands block here
2015-04-02T14:59:05 <Bosmon> Without looking closely enough what it did :)
2015-04-02T14:59:33 <Bosmon> Well ok
2015-04-02T14:59:37 <Bosmon> Actually I didn\'t eliminate it
2015-04-02T14:59:41 <Bosmon> It\'s more complicated than that....
2015-04-02T15:00:54 <Bosmon> It just appears there\'s no longer anything in the world called "fluid.prefs.store"....
2015-04-02T15:01:24 <Bosmon> aha aha
2015-04-02T15:01:25 <Bosmon> I see now
2015-04-02T15:01:55 <Bosmon> I changed the definition of the type from fluid.prefs.store to fluid.prefs.cookieStore
2015-04-02T15:01:58 <Bosmon> What a blunder :)
2015-04-02T15:02:02 <Bosmon> Ok, well I\'m glad that\'s clear now
2015-04-02T15:02:11 * clown_mtg is now known as clown
2015-04-02T15:02:17 <Bosmon> And shows the way to the elimination of the very last demands blocks left in the world
2015-04-02T15:02:36 <cindyli> YAY!
2015-04-02T15:04:03 <Bosmon> And I\'m glad that the difficulty of debugging this problem forced me to invent the PROBES ....
2015-04-02T15:04:06 * michelled joined the channel
2015-04-02T15:15:47 * jhung1 has quit
2015-04-02T15:17:03 <Bosmon> ok jhernandez - I\'ve updated universal master to that revision of grunt-gpii - thanks for the report and testing
2015-04-02T15:19:44 <Justin_o> danaayotte: did you see that e-mail from anastasia about the text size for first discovery tool
2015-04-02T15:23:37 <danaayotte> I did Justin_o. Thinking...
2015-04-02T15:24:48 <Justin_o> danaayotte: okay
2015-04-02T15:30:21 * colinclark joined the channel
2015-04-02T15:35:58 * the-t-in-rtf joined the channel
2015-04-02T15:36:14 <Bosmon> Cheers Justin_o, I\'ve merged your FLUID-5597 now, thanks for your patience with it :)
2015-04-02T15:36:26 <Bosmon> cindyli, do you think you could merge up your https://github.com/fluid-project/infusion/pull/587 pull for FLUID-5598 to current master?
2015-04-02T15:37:06 <Bosmon> And perhaps put in a comment in the AuxBuilder in the expandSchema that could help direct readers to the implementations you referred to in your comment?
2015-04-02T15:37:30 <cindyli> sure, Bosmon
2015-04-02T15:37:31 <Bosmon> Perhaps we need a wiki page or README explaining the general strategy of the aux builder since it is becoming quite hard to follow
2015-04-02T15:37:41 <cindyli> agree
2015-04-02T15:38:28 <Bosmon> Actually, I guess your pull request needs an accompanying pull request against https://github.com/fluid-project/infusion-docs/blob/master/src/documents/AuxiliarySchemaForPreferencesFramework.md at least
2015-04-02T15:43:38 <Bosmon> cindyli - do you think you could review https://github.com/fluid-project/infusion/pull/577/files - I\'ve just updated it to current master :)
2015-04-02T15:44:26 <cindyli> yes, Bosmon, will do that
2015-04-02T15:44:26 <Justin_o> Bosmon: that\'s great, thanks so much
2015-04-02T15:45:01 <Bosmon> Cheers cindyli :)
2015-04-02T15:47:00 <cindyli> also, Bosmon, i was in the middle of modifying infusion docs for my "terms" pull but put it on hold due to the PGA work. will be back working on this pull after the PGA deadline.
2015-04-02T15:47:09 <Bosmon> cindyli - no problem
2015-04-02T15:47:15 <cindyli> thanks, Bosmon
2015-04-02T15:47:22 <Bosmon> I think I am on the hook to help out with some of the PGA work?
2015-04-02T15:47:30 <Bosmon> Is the "language-aware bundle loading" required for this deadline?
2015-04-02T15:47:47 <cindyli> yes, Bosmon, http://issues.fluidproject.org/browse/FLUID-5599?src=confmacro
2015-04-02T15:48:40 * jessm has quit
2015-04-02T15:49:49 <Bosmon> Ok, I will think about that
2015-04-02T15:50:15 <Bosmon> Actually it\'s just as well this one is assigned to me, I\'m not sure it\'s a completely straightforward problem : P
2015-04-02T15:51:07 <Bosmon> I guess it\'s sufficient for now to believe that the language setting is stored "in a model somewhere in the component tree"
2015-04-02T15:51:36 <Bosmon> Although that might not be sufficient in general, since it\'s possible it could be stored at any general location
2015-04-02T15:52:07 <Bosmon> But those two cases require different handling
2015-04-02T15:53:15 * michelled has quit
2015-04-02T15:53:18 <cindyli> i guess for now we can assume the language code comes from the starter model grade or the primary schema, Bosmon
2015-04-02T15:53:41 * michelled joined the channel
2015-04-02T15:54:18 <Bosmon> cindyli - where does the primary schema information end up?
2015-04-02T15:54:38 <cindyli> Bosmon: StarterSchemas.js
2015-04-02T15:54:56 <Bosmon> Well, that\'s just the starter
2015-04-02T15:54:58 * michelled has quit
2015-04-02T15:55:09 <Bosmon> Where does the real, dynamic information end up in a real PrefsEditor?
2015-04-02T15:55:26 <cindyli> looking up ...
2015-04-02T15:55:27 * michelled joined the channel
2015-04-02T15:55:39 <Bosmon> Also, I don\'t see a language setting in the current StarterSchemas.js
2015-04-02T15:55:43 <Bosmon> Is there a branch that has it?
2015-04-02T15:57:13 <cindyli> no, we don\'t have a branch for an example of a language setting, but we do have in the master of an example of passing in new setting.
2015-04-02T15:57:35 <Bosmon> cindyli - isn\'t there a PGA panel allowing language to be set?
2015-04-02T15:58:38 <cindyli> Bosmon: yes, i\'m working on that PGA panel right now - https://github.com/cindyli/first-discovery/tree/FLOE-281
2015-04-02T15:59:30 <cindyli> Bosmon: the primary schema for the lang - https://github.com/cindyli/first-discovery/blob/FLOE-281/src/schemas/schemas.js#L90-L99
2015-04-02T15:59:46 <Bosmon> cindyli - thanks
2015-04-02T15:59:49 <cindyli> np
2015-04-02T16:00:36 <Bosmon> So I guess we can assume that the first time that the language will be known is the point I was trying to debug earlier - that is, during fluid.prefs.prefsEditor.fetch
2015-04-02T16:01:07 <Bosmon> Given until we have fetched the user\'s preferences from the settings store and merged them, we can\'t know what language setting they want
2015-04-02T16:01:32 <Bosmon> I think we had decided on a "brutal" update model of simply issing an HTTP refresh to the entire page when the user changed language settings for now?
2015-04-02T16:01:43 <cindyli> yes
2015-04-02T16:01:55 <Bosmon> So the "language enactor" just consists of something which i) persists the setting and ii) issues an HTTP refresh
2015-04-02T16:02:41 <cindyli> sounds right
2015-04-02T16:02:47 <Bosmon> cindyli - doesn\'t the current implementation actually rerender all the panels in any case, when we fire a onPrefsEditorRefresh ?
2015-04-02T16:03:26 <cindyli> do we have onPrefsEditorRefresh? yes, all panels are rendered
2015-04-02T16:03:45 <Bosmon> ok
2015-04-02T16:03:50 <Bosmon> So we may not need the "brutal" model after all
2015-04-02T16:03:51 <cindyli> ah, we do have onPrefsEditorRefresh
2015-04-02T16:04:04 <Bosmon> SImply changing the model state and having the message bundle pick it up could be enough
2015-04-02T16:04:43 <cindyli> sounds right
2015-04-02T16:16:17 * clown has quit
2015-04-02T16:21:00 * colinclark has quit
2015-04-02T16:23:00 * sepideh has quit
2015-04-02T16:24:41 * clown joined the channel
2015-04-02T16:24:57 * clown is now known as clown_mtg
2015-04-02T16:27:58 * gtirloni joined the channel
'

b'2015-04-02T00:09:24 * colinclark joined the channel
2015-04-02T00:18:00 * colinclark has quit
2015-04-02T00:19:16 * avtar has quit
2015-04-02T01:02:32 * michelled joined the channel
2015-04-02T01:06:20 * danaayotte has quit
2015-04-02T01:06:58 * michelled has quit
2015-04-02T01:59:46 * gtirloni has quit
2015-04-02T02:01:10 * jhung joined the channel
2015-04-02T02:01:34 * yzen joined the channel
2015-04-02T03:18:47 * jhung has quit
2015-04-02T03:42:17 * colinclark joined the channel
2015-04-02T03:44:28 * colinclark has quit
2015-04-02T07:03:57 * the-t-in-rtf joined the channel
2015-04-02T09:33:58 * gtirloni joined the channel
2015-04-02T10:36:07 <jhernandez> Bosmon: bonjour ANTVANIQ!
2015-04-02T10:39:31 <jhernandez> I\'ve just pulled universal, and it\'s not working here
2015-04-02T10:44:13 <jhernandez> looks like grunt-dedupe is happy with removing every copy of infusion and use this folder (gpii/node_modules/gpii-oauth2/gpii-oauth2-authz-server/public/lib/infusion) as our unique copy
2015-04-02T10:44:41 <jhernandez> which in fact is not the infusion framework
2015-04-02T11:02:51 * Justin_o joined the channel
2015-04-02T11:41:28 * jhung joined the channel
2015-04-02T11:53:01 * yzen joined the channel
2015-04-02T11:56:27 * cindyli joined the channel
2015-04-02T11:57:26 * jhung has quit
2015-04-02T11:57:50 * jhung joined the channel
2015-04-02T12:03:23 <Bosmon> jhernandez - thanks, I think I had noticed this, but was wondering whether the problem was really current
2015-04-02T12:03:34 <Bosmon> Could you try updating grunt-gpii to this commit? https://github.com/GPII/grunt-gpii/commit/58ae055833f437a9e91baedb9f39a22c5fdd727f
2015-04-02T12:03:38 <Bosmon> And see whether it solves the problem
2015-04-02T12:09:03 * yzen joined the channel
2015-04-02T12:09:03 * yzen is now known as yzen_
2015-04-02T12:16:04 <jhernandez> Bosmon: well, looks like now it also deletes the offending infusion folder
2015-04-02T12:16:05 <jhernandez> options: {
2015-04-02T12:16:05 <jhernandez> node_modules: "../node_modules"
2015-04-02T12:16:10 <jhernandez> sorry
2015-04-02T12:16:10 * yzen joined the channel
2015-04-02T12:16:29 <jhernandez> >> Deleting ../node_modules/universal/gpii/node_modules/gpii-oauth2/gpii-oauth2-authz-server/public/lib/infusion
2015-04-02T12:16:36 <Bosmon> That\'s good
2015-04-02T12:16:43 <Bosmon> And does it now leave the correct one behind? : P
2015-04-02T12:17:35 <jhernandez> yup, it solves the issue for sure
2015-04-02T12:17:39 <Bosmon> cool
2015-04-02T12:17:42 <Bosmon> I\'ll update master then
2015-04-02T12:18:03 <jhernandez> but I\'m not sure if we\'re fine by removing that folder
2015-04-02T12:20:17 <jhernandez> I mean, if the folder isn\'t required, why we\'re including it?
2015-04-02T12:22:54 <Bosmon> It\'s odd, my version doesn\'t delete that directory....
2015-04-02T12:24:13 <Bosmon> Which directory are you running it from?
2015-04-02T12:24:22 <jhernandez> from \'linux\'
2015-04-02T12:24:40 <jhernandez> it works fine if you run grunt-dedupe inside the universal folder
2015-04-02T12:24:44 <Bosmon> ah I see
2015-04-02T12:25:24 <jhernandez> so the problem seems to be how the grunt-gpii task (and dedupe-infusion) takes into account the cwd
2015-04-02T12:26:10 * the-t-in-rtf has quit
2015-04-02T12:26:32 <jhernandez> Bosmon: https://github.com/javihernandez/grunt-gpii/blob/master/tasks/gpii.js#L150
2015-04-02T12:26:56 <jhernandez> in linux, that option should be ../node_modules/universal/node_modules/
2015-04-02T12:27:04 <Bosmon> !
2015-04-02T12:27:46 <jhernandez> well let\'s say, "when running from the linux folder that option should be ../node_modules/universal/node_modules/"
2015-04-02T12:27:49 <jhernandez> Bosmon: better?
2015-04-02T12:27:50 <jhernandez> xD
2015-04-02T12:35:47 <Bosmon> ok VVERNNANDDEZZ
2015-04-02T12:35:54 <Bosmon> Do you want to check out this revision to see if it works on linux?
2015-04-02T12:35:56 <Bosmon> ec8412064e107febb120f0b7437d403453b40d2d
2015-04-02T12:35:57 * yzen has quit
2015-04-02T12:36:04 <Bosmon> That is, update your grunt-gpii to this revision
2015-04-02T12:36:50 * the-t-in-rtf joined the channel
2015-04-02T12:40:44 <jhernandez> Bosmon: sure, I\'ll try it later
2015-04-02T12:45:17 * yzen joined the channel
2015-04-02T12:52:37 * anvk joined the channel
2015-04-02T12:58:30 <Justin_o> Bosmon: did you have a chance to look at the FLUID-5597 pull request again?
2015-04-02T13:06:34 * michelled joined the channel
2015-04-02T13:06:47 * avtar joined the channel
2015-04-02T13:17:14 * jessm joined the channel
2015-04-02T13:18:40 * michelled has quit
2015-04-02T13:27:58 * sepideh joined the channel
2015-04-02T13:28:18 <Bosmon> Justin_o - sorry yes, just looked at it now, I have only one fairly minor comment
2015-04-02T13:31:07 <Justin_o> Bosmon: just looking at your comment
2015-04-02T13:31:14 <Justin_o> Bosmon: yes, more than one can execute at a time
2015-04-02T13:31:16 <Justin_o> e.g. ID
2015-04-02T13:31:31 <Justin_o> value and valuebinding is another example
2015-04-02T13:37:06 * yzen joined the channel
2015-04-02T13:38:14 <Justin_o> Bosmon: I\'ve added a comment about it in the code
2015-04-02T13:45:14 * the-t-in-rtf has quit
2015-04-02T13:48:48 <Bosmon> Justin_o - could you also put in as many "else" statements as possible :)
2015-04-02T13:49:11 <Bosmon> Once you\'ve done that, you can remove the comment : P
2015-04-02T13:51:50 <Justin_o> Bosmon: :) okay.. i\'ll look through it
2015-04-02T13:52:18 <Bosmon> Cheers, Justin_o :)
2015-04-02T13:52:31 <Bosmon> After all, the best comment is code that is sufficiently clear that it doesn\'t require a comment....
2015-04-02T13:56:15 <Bosmon> Justin_o, cindyli - you may be interested in a new INNOVVATIOn which is in my branch...
2015-04-02T13:56:16 <Bosmon> http://pastie.org/10069793
2015-04-02T13:56:27 <Bosmon> This innovation of *DEBUGGING PROBES*
2015-04-02T13:56:45 <Bosmon> I eventually got tired of hacking new listener definitions into random pieces of code just so I could tell when an event is firing
2015-04-02T13:57:07 <Bosmon> So here is a thing which allows you to do it all in one place, using the new "global instantiator" machinery
2015-04-02T13:57:27 <Bosmon> In the absence of having a GUI tools which lets us debug things, at least we have this precursor for it.....
2015-04-02T13:57:48 <Bosmon> There is also a "fluid.debugger" function type supported which will kick you directly into the debugger when the probe executes
2015-04-02T13:58:02 <Justin_o> that\'s cool
2015-04-02T13:58:31 <Justin_o> it\'s interesting that it\'s on listeners and not events.. is that because it\'s more like a distribute options block?
2015-04-02T13:58:59 <Bosmon> yes, this actually directly "compiles" behind the scenes into a distributeOptions block : P
2015-04-02T13:59:10 <Bosmon> It just reduces the packaging that you need in order to write it
2015-04-02T13:59:30 <Bosmon> it fabricates a little component with an expanded version of this block as "distributeOptions" and then creates an instance of it at the top of the tree
2015-04-02T14:00:07 <Bosmon> It takes care of a few niceties like bumping up the priorities of "first" and "last" listeners so that they are TRULY first and last, and removing the need to write ".options." at the beginning of your listener paths
2015-04-02T14:00:37 <Justin_o> that\'s great
2015-04-02T14:00:44 * clown joined the channel
2015-04-02T14:00:46 <cindyli> very nice. i guess with the new root ginger world, we could listen to these registered probes anywhere from any component
2015-04-02T14:00:50 * clown is now known as clown_mtg
2015-04-02T14:01:01 <Bosmon> cindyli in fact they hit every component in the tree already, yes
2015-04-02T14:01:27 <Bosmon> So where it says {fluid.prefs.preview} this actually compiles behind the scenes to {/ fluid.prefs.preview}
2015-04-02T14:01:33 <Bosmon> Which means... EVERY preview component, everywhere
2015-04-02T14:01:39 <cindyli> super
2015-04-02T14:01:46 <Bosmon> ALL HUZNACK
2015-04-02T14:02:02 <Bosmon> Actually I\'m on the trail of a very annoying bug that the framework changes have exposed in the FullPreviewPrefsEditor
2015-04-02T14:02:11 <Bosmon> My feeling is that these tests have always had a bug
2015-04-02T14:02:19 <Bosmon> But I still don\'t understand the situation completely enough to be sure
2015-04-02T14:02:40 <Bosmon> So it seems that this version of the tree constructs its own UIEnhancer for the preview
2015-04-02T14:03:00 <Bosmon> But the test cases, via "IntegrationTestsCommon", only try to bind to the original PageEnhancer which is constructed in the tests
2015-04-02T14:03:26 <Bosmon> So somewhere, something is somehow happening differently now : P
2015-04-02T14:03:33 * jhung1 joined the channel
2015-04-02T14:03:50 <Bosmon> Since the "real" UIEnhancer doesn\'t get notified until the preview constructs, which is very late, given it waits for a container.load() for the iframe it is in
2015-04-02T14:04:47 <Bosmon> It\'s one of these cases that "I can\'t see how this ever worked".....
2015-04-02T14:04:57 <cindyli> haha
2015-04-02T14:05:36 <Bosmon> It\'s not only that the "real UIEnhancer" doesn\'t construct until the preview constructs - in fact the entire prefsEditor doesn\'t construct until then, and until that moment, it doesn\'t have its initial model in place
2015-04-02T14:06:22 <Bosmon> And so I can\'t see how any Enactor could have got the expected state by the time the test case goes looking for it - since this registers an "onReady" at top level on the UIOptionsLoader
2015-04-02T14:06:42 <Bosmon> Does this issue sound familiar at all?
2015-04-02T14:07:16 <cindyli> having a look on the test
2015-04-02T14:08:01 <Bosmon> https://github.com/fluid-project/infusion/blob/master/tests/framework-tests/preferences/js/IntegrationTestsCommon.js#L234
2015-04-02T14:08:06 <Bosmon> So this is where the common test core is defined
2015-04-02T14:08:18 <Bosmon> Which is actually a bit of a mess, with this strange "fluid.merge" call I can\'t quite understand the reason for : P
2015-04-02T14:08:29 <Bosmon> It registers its test fixture on "onReady" at top level
2015-04-02T14:08:41 <Bosmon> Oh wait
2015-04-02T14:08:44 <Bosmon> It is actually on the prefsEditor
2015-04-02T14:08:54 <Bosmon> I have got confused already
2015-04-02T14:12:46 <cindyli> Bosmon: from what i see, prefsEditor doesn\'t wait till the preview constructs.
2015-04-02T14:13:11 <cindyli> one sec, will paste the code
2015-04-02T14:13:40 <Bosmon> yes
2015-04-02T14:13:50 <Bosmon> I think I am starting to have a dim idea what the problem might be
2015-04-02T14:13:52 <Bosmon> http://pastebin.com/ftABkEM2
2015-04-02T14:14:00 <Bosmon> Here is the trace using my DEBUGGING PROBES
2015-04-02T14:14:48 <Bosmon> cindyli - yes, so this seems to be a problem, in that the REAL UIEnhancer doesn\'t construct until the preview constructs
2015-04-02T14:14:56 <cindyli> nice, clearly shows the order of events
2015-04-02T14:15:09 <Bosmon> You can see that the UIEnhancer and the first enactors start to construct on lines 8 and 9
2015-04-02T14:15:16 <cindyli> the preview constructs and uses its own uiEnahncer
2015-04-02T14:15:24 <Bosmon> But the test fixture has already executed by line 5
2015-04-02T14:16:29 <cindyli> right. line 8 might be preview constructing its own uienahncer, not the enhancer used by the prefsEditor
2015-04-02T14:16:55 <jhernandez> Bosmon: right, commit ec8412064e107febb120f0b7437d403453b40d2d fixed the issue with dedupe-infusion
2015-04-02T14:17:02 <cindyli> the prefsEditor should use uiEnahancer that comes from fluid.pageEnhancer(fluid.tests.prefs.enhancerOptions);
2015-04-02T14:21:03 * sepideh has quit
2015-04-02T14:21:59 <Bosmon> cindyli - right
2015-04-02T14:22:16 <Bosmon> But how is this UIEnhancer meant to get the contents of the "initialModel" from the prefsEditor that we construct?
2015-04-02T14:22:37 <cindyli> the store is constructed before fluid.pageEnahncer()
2015-04-02T14:22:51 <Bosmon> The STORE.......
2015-04-02T14:22:56 <cindyli> line 238 in IntegrationTestsCommon.js
2015-04-02T14:23:01 <Bosmon> yes ok
2015-04-02T14:23:07 <Bosmon> Perhaps I have screwed up the store construction somehow
2015-04-02T14:23:35 <cindyli> worth to look into there
2015-04-02T14:23:44 <Bosmon> Ah yes
'


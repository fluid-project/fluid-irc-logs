b'2016-03-28T21:45:27 <Bosmon7> colinclark - perhaps not a huge amount
2016-03-28T21:45:44 <Bosmon7> The relevant workflow will be in "fluid.operateInitialTransaction"
2016-03-28T21:45:59 <Bosmon7> Currently at DataBinding.js line 335
2016-03-28T21:46:32 <Bosmon7> But you will not observe this in a model listener
2016-03-28T21:46:35 <colinclark> ok
2016-03-28T21:46:41 <Bosmon7> All of this happens before the component is set up
2016-03-28T21:47:00 <Bosmon7> Which kind of model listener can you see this in?
2016-03-28T21:47:22 <colinclark> Just an ordinary one, I suppose :)
2016-03-28T21:47:58 <Bosmon7> So you see two notifications of your model listener?
2016-03-28T21:48:04 <Bosmon7> Once to true, and then to false?
2016-03-28T21:48:49 <Bosmon7> Is "operateInitialTransaction" on the stack, either time?
2016-03-28T22:07:53 <colinclark> The answer to your first question, Bosmon7, is yes
2016-03-28T22:08:04 <colinclark> The second, I\'ll check
2016-03-28T22:18:47 * yzen is now known as yzen_
2016-03-28T22:20:41 * gabrielm_ has quit
2016-03-28T22:21:42 <colinclark> oh wow
2016-03-28T22:21:53 <colinclark> I think I have two "video players" instantiated on this page :(
2016-03-28T22:24:08 * simonjb has quit
2016-03-28T22:27:39 <colinclark> Bosmon7: It appears that the creator of Aconite has decided that a "compositable video" should helpfully consist of both 1. a video element and 2. a video player instance
2016-03-28T22:28:00 <colinclark> so my attempt to create and configure my own instance of a video player was in fact ineffective
2016-03-28T22:37:22 * wale has quit
2016-03-28T22:47:57 <colinclark> Bosmon7: Thank you for the super helpful diagnostic error message when my viewComponent grade was in the wrong spot.
2016-03-28T22:51:48 <Bosmon7> If only it were IMPOSSIBLE for it to be in the wrong spot : P
2016-03-28T22:57:52 * Bosmon7 has quit
2016-03-28T23:01:07 * yzen_ is now known as yzen
2016-03-28T23:01:33 * yzen is now known as yzen_
2016-03-28T23:04:59 * colinclark has quit
2016-03-28T23:05:44 * gabrielmancini joined the channel
2016-03-28T23:06:03 * yzen_ has quit
2016-03-28T23:09:55 * gabrielmancini has quit
2016-03-28T23:44:09 * alanharnum joined the channel
2016-03-28T23:45:34 * jhernandez joined the channel
2016-03-28T23:48:51 * alanharnum has quit
2016-03-28T23:52:57 * gabrielmancini joined the channel
'

b'2016-03-28T18:18:19 <michelled> that sounds good. I feel like we had gathered some accessible math stuff a while ago too. perhaps jhung or Bosmon7 remembers where
2016-03-28T18:28:29 <jhung> michelled: there are bits scattered around the ILDH (under EPUB, and Techniques). But no specific article addressing it.
2016-03-28T18:35:14 * Bosmon7 has quit
2016-03-28T18:35:49 * gabrielmancini joined the channel
2016-03-28T18:39:55 * gabrielm_ joined the channel
2016-03-28T18:40:29 * gabrielmancini has quit
2016-03-28T18:44:30 * gabrielm_ has quit
2016-03-28T18:46:45 <colinclark> Hey Jess_, I\'m sure I\'m just missing the 404.x document on the P4A manage site, but somehow I haven\'t been able to find it.
2016-03-28T18:47:12 <colinclark> Any chance you could do me the favour of compiling a list of links for all the SP1 and SP4 that the IDRC has contributed to?
2016-03-28T18:56:00 * nrda has quit
2016-03-28T19:02:29 <simonjb> hey cindyli
2016-03-28T19:02:39 <cindyli> hi simonjb
2016-03-28T19:02:52 <simonjb> cindyli: can I ask you an infusion question?
2016-03-28T19:03:07 <cindyli> sure
2016-03-28T19:03:17 <simonjb> this is something that I think I should know but can\'t seem to get working
2016-03-28T19:03:34 <simonjb> I want to set up a model relay between 2 top level components
2016-03-28T19:03:41 <simonjb> do you have experience doing that?
2016-03-28T19:03:47 <cindyli> yes
2016-03-28T19:04:01 <simonjb> that is: 2 components not created at the same time with a common parent
2016-03-28T19:04:03 <simonjb> awesome
2016-03-28T19:05:09 <cindyli> do you have any problem setting up the relay, simonjb?
2016-03-28T19:05:17 <simonjb> yes
2016-03-28T19:05:26 <simonjb> I can\'t get the rule to work
2016-03-28T19:05:44 <cindyli> do you push up ur code somewhere, simonjb?
2016-03-28T19:05:54 <simonjb> I think I don\'t know what ioc reference to use
2016-03-28T19:06:03 <simonjb> yeah, I\'ll make a gist
2016-03-28T19:06:09 <cindyli> thanks
2016-03-28T19:07:07 <simonjb> cindyli: https://gist.github.com/simonbates/91e2c81190c7a5110bfa
2016-03-28T19:07:23 <simonjb> the bottom (not commented out) code works
2016-03-28T19:07:32 <simonjb> the commented out code (what I want) doesn\'t work
2016-03-28T19:08:02 <simonjb> the gpii.constructNexusPeer function sends a POST request to the nexus to make a new component
2016-03-28T19:09:37 <cindyli> ok. having a look
2016-03-28T19:10:25 <simonjb> thanks cindyli
2016-03-28T19:10:49 <simonjb> I tried using "{fluid.rootComponent}" but didn\'t have any luck
2016-03-28T19:11:34 <cindyli> simonjb: the 2 components in the commented out code are not separate, not on the same tree
2016-03-28T19:11:54 <cindyli> simonjb: or they are actually constructed onto the same tree, simonjb?
2016-03-28T19:12:05 <simonjb> no, different tree
2016-03-28T19:12:25 <simonjb> but I think children of fluid.rootComponent?
2016-03-28T19:12:32 <cindyli> no, not really
2016-03-28T19:12:43 * Jess_ has quit
2016-03-28T19:12:43 <cindyli> if i\'m not wrong ;)
2016-03-28T19:13:01 <simonjb> I need to make my own root?
2016-03-28T19:13:15 <simonjb> and then make them children of that?
2016-03-28T19:13:40 <cindyli> simonjb: i think no, you probably can make use of the "/" context of the distributeOptions
2016-03-28T19:13:44 <colinclark> simonjb: They\'re certainly both children of the Nexus\' root component
2016-03-28T19:13:47 <cindyli> let me find an example
2016-03-28T19:14:18 <cindyli> simonjb: ah, they are still children of the same parent?
2016-03-28T19:14:20 * Bosmon7 joined the channel
2016-03-28T19:14:35 <cindyli> i mean on the same component tree?
2016-03-28T19:14:45 <cindyli> they don\'t have to share the same parent tho
2016-03-28T19:16:26 <simonjb> the individual components are made with fluid.construct()
2016-03-28T19:17:45 <cindyli> simonjb: anyway, posting the example of the "/" context in case it helps, then i will look into what fluid.construct() does
2016-03-28T19:17:45 <cindyli> https://github.com/fluid-project/infusion/blob/master/tests/framework-tests/core/js/FluidIoCTests.js#L3925-L3931
2016-03-28T19:18:04 <simonjb> aha
2016-03-28T19:18:09 <simonjb> let me try that
2016-03-28T19:20:56 <simonjb> cindyli: for my relay source I tried "{/ bonangControl}.model.activeNote" https://gist.github.com/simonbates/91e2c81190c7a5110bfa#file-constructnexuspeers-js-L20
2016-03-28T19:21:28 <simonjb> but didn\'t work (unless I have some other error)
2016-03-28T19:21:37 <cindyli> :(
2016-03-28T19:22:17 <simonjb> cindyli: does that look like the right reference to you?
2016-03-28T19:22:24 <cindyli> simonjb: did you use it in the model relay or distribute options?
2016-03-28T19:22:32 <simonjb> model relay
2016-03-28T19:22:35 * alanharnum has quit
2016-03-28T19:22:40 <cindyli> "/" context only works for the distribute options, as far as i know
2016-03-28T19:22:51 <simonjb> ah
2016-03-28T19:23:21 <simonjb> Bosmon7: are you available for an infusion question?
2016-03-28T19:24:16 <Bosmon7> Hi there simonjb
2016-03-28T19:24:29 <Bosmon7> You can\'t use IoCSS expressions in model relay references
2016-03-28T19:25:17 <simonjb> Bosmon7: I\'m trying to set up a model relay between 2 components created separately with the nexus construct endpoint
2016-03-28T19:25:30 <cindyli> i was looking at the unit test for fluid.construct - https://github.com/fluid-project/infusion/blob/master/tests/framework-tests/core/js/FluidIoCTests.js#L4248, seems colinclark was right that all constructed components using fluid.construct() are children components of fluid.rootComponent
2016-03-28T19:25:32 <simonjb> but can\'t get the relay working
2016-03-28T19:25:46 <simonjb> https://gist.github.com/simonbates/91e2c81190c7a5110bfa#file-constructnexuspeers-js-L20
2016-03-28T19:25:54 <Bosmon7> cindyli - they\'re children of whatever parent you make them children of....
2016-03-28T19:26:31 <simonjb> the code in the second 1/2 of that file works -- if I construct them together
2016-03-28T19:26:58 <simonjb> but I was wondering how to construct them independently but do the model relay (the commented out code)
2016-03-28T19:27:41 <Bosmon7> simonjb - I suspect the issue you\'re running into is that by default, children directly at the root are not mutually resolvable
2016-03-28T19:27:52 <simonjb> ah, ok
2016-03-28T19:27:54 <Bosmon7> I suggest you create a dedicated parent component to house all the components you want to be related together
2016-03-28T19:28:09 <colinclark> What does "at the root" actually mean, Bosmon7?
2016-03-28T19:28:10 <Bosmon7> If every root component could see every other by default, there would be global chaos
2016-03-28T19:28:18 <colinclark> I realize it sounds like a stupid question
2016-03-28T19:28:25 <Bosmon7> colinclark "at the root", specifically, means a direct child of the component "fluid.rootComponent"
2016-03-28T19:28:30 <colinclark> right
2016-03-28T19:28:36 <colinclark> thank you :)
2016-03-28T19:28:55 <simonjb> I tried referencing using {fluid.rootComponent} -- would that be possible also?
2016-03-28T19:29:07 <simonjb> but yes, I can certainly make a common parent
2016-03-28T19:29:37 <simonjb> like the code that works constructing all together but with 3 separate calls
2016-03-28T19:29:44 <simonjb> let me try now
2016-03-28T19:30:21 <Bosmon7> simonjb - you could use references via {fluid.rootComponent} but it would be a bit brittle, and you\'d need to make sure you were on current Infusion trunk to get support for indirect model component references
2016-03-28T19:31:16 <colinclark> Does this not suggest, though, that one must always create a containing component when exposing some "thing" in the Nexus?
2016-03-28T19:31:47 <Bosmon7> colinclark - yes, this seems wise
2016-03-28T19:31:59 <Bosmon7> The global root area isn\'t really meant for everyday users
2016-03-28T19:32:22 <Bosmon7> It\'s where things get dumped if they are constructed via var x = fluid.thing() calls
2016-03-28T19:32:32 <Bosmon7> I guess perhaps this wasn\'t the most helpful default
2016-03-28T19:32:43 <Bosmon7> But we hadn\'t really thought of external users at that point
2016-03-28T19:34:45 <simonjb> Bosmon7, colinclark, cindyli: Creating an explicit container works https://gist.github.com/simonbates/91e2c81190c7a5110bfa
2016-03-28T19:35:40 <colinclark> bonangs everywhere
2016-03-28T19:36:01 <cindyli> great u figured out
2016-03-28T19:36:21 <colinclark> http://homepages.cae.wisc.edu/~jjordan/images/bonang.jpg
2016-03-28T19:36:33 <simonjb> nice
2016-03-28T19:37:30 <simonjb> yeah, so maybe we want to create a \'nexus root\' where all nexus constructed components are made -- was that what you were thinking colinclark ?
2016-03-28T19:37:46 <colinclark> I wasn\'t thinking anything :)
2016-03-28T19:38:20 <colinclark> other than pointing out, distinctly unhelpfully earlier, that even though you hadn\'t declared a shared parent for your components, they were indeed ultimatley children of the root component
2016-03-28T19:38:25 <colinclark> as we all are :P
2016-03-28T19:38:49 <colinclark> and then clarifying with Bosmon7 what the practical consequences of general invisibility at the root meant
2016-03-28T19:39:05 <colinclark> but it seems sensible, simonjb :)
2016-03-28T19:39:10 <simonjb> :)
2016-03-28T19:39:27 <simonjb> I won\'t make any changes right now, but we can think it over
2016-03-28T19:39:55 <simonjb> thanks cindyli, colinclark, Bosmon7
2016-03-28T19:40:11 <cindyli> anytime :)
2016-03-28T19:40:34 * Jess_ joined the channel
2016-03-28T19:47:48 * gabrielmancini joined the channel
2016-03-28T19:48:31 * alanharnum joined the channel
2016-03-28T19:49:20 * gabrielm_ joined the channel
2016-03-28T19:52:48 * gabrielmancini has quit
2016-03-28T19:54:06 * gabrielm_ has quit
2016-03-28T19:58:12 * danayo joined the channel
2016-03-28T20:01:01 * danayo has quit
2016-03-28T20:01:31 * jhung has quit
2016-03-28T20:01:39 * cindyli has quit
2016-03-28T20:14:22 * jhernandez joined the channel
2016-03-28T20:25:08 * Jess_ has quit
2016-03-28T20:26:29 * anvk has quit
2016-03-28T20:47:25 * michelled has quit
2016-03-28T20:47:25 * jhernandez has quit
2016-03-28T20:47:35 * jhernandez joined the channel
2016-03-28T20:53:22 * gabrielmancini joined the channel
2016-03-28T20:59:41 * gabrielmancini has quit
2016-03-28T21:01:17 * gabrielmancini joined the channel
2016-03-28T21:02:45 * clown has left the channel
2016-03-28T21:25:39 * gabrielmancini has quit
2016-03-28T21:32:15 * gtirloni has quit
2016-03-28T21:39:09 * gabrielmancini joined the channel
2016-03-28T21:39:54 * gabrielm_ joined the channel
2016-03-28T21:40:13 * jhernandez has quit
2016-03-28T21:41:10 * gabrielm_ has quit
2016-03-28T21:42:00 * gabrielm_ joined the channel
2016-03-28T21:42:12 <colinclark> Bosmon7: hey dude
2016-03-28T21:42:28 <colinclark> I find myself in a perplexing situation
2016-03-28T21:42:36 <colinclark> I\'m not quite sure how to debug it
2016-03-28T21:43:27 <colinclark> I have a boolean in a model
2016-03-28T21:43:33 * gabrielmancini has quit
2016-03-28T21:43:44 * alanharnum has quit
2016-03-28T21:43:46 <colinclark> In the options for a subgrade, I set it to true. The parent grade defaults its value to false
2016-03-28T21:44:01 <colinclark> I can see it in the debugger apparently being set first to true, then to false
2016-03-28T21:44:10 <colinclark> this is via a breakpoint in a model listener
2016-03-28T21:44:19 <Bosmon7> I see
2016-03-28T21:44:21 <colinclark> but I just can\'t imagine why this is the case
2016-03-28T21:44:25 <colinclark> It must be something very stupid
2016-03-28T21:44:44 <colinclark> wlil the call stack somehow enlighten me at all about the source of the second change?
2016-03-28T21:45:20 <colinclark> or is there another strategy to see what the source of a model change is?
'

b'2016-03-28T00:01:03 * Bosmon7 has quit
2016-03-28T01:34:16 * gloob joined the channel
2016-03-28T01:38:33 * gloob has quit
2016-03-28T02:27:20 * gabrielmancini joined the channel
2016-03-28T02:32:33 * gabrielmancini has quit
2016-03-28T03:35:05 * gloob joined the channel
2016-03-28T03:39:20 * gloob has quit
2016-03-28T04:15:58 * gabrielmancini joined the channel
2016-03-28T04:20:22 * gabrielmancini has quit
2016-03-28T05:35:57 * gloob joined the channel
2016-03-28T05:40:12 * gloob has quit
2016-03-28T05:54:22 * amatas joined the channel
2016-03-28T06:03:40 * gabrielmancini joined the channel
2016-03-28T06:08:34 * gabrielmancini has quit
2016-03-28T07:36:47 * gloob joined the channel
2016-03-28T07:41:19 * gloob has quit
2016-03-28T07:51:22 * gloob joined the channel
2016-03-28T07:52:18 * gabrielmancini joined the channel
2016-03-28T07:56:37 * gabrielmancini has quit
2016-03-28T09:52:16 * gabrielmancini joined the channel
2016-03-28T09:56:30 * gabrielmancini has quit
2016-03-28T12:06:01 * gtirloni joined the channel
2016-03-28T12:14:43 * jhung joined the channel
2016-03-28T12:18:27 * jessm joined the channel
2016-03-28T12:25:38 * cindyli joined the channel
2016-03-28T12:44:37 * gabrielmancini joined the channel
2016-03-28T12:52:03 * Bosmon7 joined the channel
2016-03-28T12:57:35 * gabrielmancini has quit
2016-03-28T13:12:19 * gabrielmancini joined the channel
2016-03-28T13:17:35 * gabrielmancini has quit
2016-03-28T13:21:40 * Awesome_A joined the channel
2016-03-28T13:35:55 * gabrielmancini joined the channel
2016-03-28T13:44:12 * jhung is now known as jhung_away
2016-03-28T13:55:26 * clown joined the channel
2016-03-28T13:59:37 * jhung_away has quit
2016-03-28T14:00:16 * alanharnum joined the channel
2016-03-28T14:01:28 * gabrielmancini has quit
2016-03-28T14:01:59 * akshay joined the channel
2016-03-28T14:03:07 * gabrielmancini joined the channel
2016-03-28T14:09:23 * michelled joined the channel
2016-03-28T14:15:27 * simonjb joined the channel
2016-03-28T14:19:09 <simonjb> hey Bosmon7
2016-03-28T14:19:20 <Bosmon7> Hi there simonjb
2016-03-28T14:19:24 <Bosmon7> Happy Easter :)
2016-03-28T14:19:35 <simonjb> and to you too!
2016-03-28T14:19:45 <simonjb> are you feeling all recovered?
2016-03-28T14:20:25 <Bosmon7> Mostly, yes
2016-03-28T14:20:29 <Bosmon7> Still very tired
2016-03-28T14:20:48 <simonjb> yeah, these things sometimes take a while to get over
2016-03-28T14:21:04 <simonjb> but glad to hear that you are getting better
2016-03-28T14:21:17 <simonjb> do you have a little time for a nexus question?
2016-03-28T14:21:25 <Bosmon7> Cheers, sure
2016-03-28T14:22:05 <simonjb> at the end of last week I created a grade to make it easier to make infusion components that have a nexus websocket binding
2016-03-28T14:22:14 <simonjb> https://github.com/simonbates/nexus-examples/blob/master/src/nexusWebSocketBoundComponent.js
2016-03-28T14:22:18 * danayo joined the channel
2016-03-28T14:22:28 * dsharma joined the channel
2016-03-28T14:22:44 <simonjb> example usage here: https://github.com/simonbates/nexus-examples/blob/master/examples/bonang/js/nexusBonangSynth.js
2016-03-28T14:22:59 <Bosmon7> simonjb - awesome
2016-03-28T14:23:05 <Bosmon7> Especially the BONANG sample :)
2016-03-28T14:23:26 <simonjb> it\'s currently one way -- updating from nexus
2016-03-28T14:23:34 * colinclark joined the channel
2016-03-28T14:23:39 <simonjb> and I was thinking of making it bidirectional
2016-03-28T14:24:11 <simonjb> but wanted to check with you concerning infinite feedback loops
2016-03-28T14:24:16 <Bosmon7> simonjb - oh yes
2016-03-28T14:24:32 <Bosmon7> You might find the new "source tracking" features useful, which just got into trunk
2016-03-28T14:25:02 <Bosmon7> There are docs for them here: https://github.com/fluid-project/infusion-docs/pull/84
2016-03-28T14:25:06 <simonjb> colinclark: https://github.com/simonbates/nexus-examples/blob/master/examples/bonang/js/nexusBonangSynth.js
2016-03-28T14:25:09 <Bosmon7> Any review of docs highly appreciated :)
2016-03-28T14:25:16 <Bosmon7> Ah wow it\'s COLIN MATTER-CLARK :)
2016-03-28T14:25:25 <colinclark> hahaha
2016-03-28T14:25:34 <simonjb> https://github.com/simonbates/nexus-examples/blob/master/src/nexusWebSocketBoundComponent.js
2016-03-28T14:25:49 <colinclark> A particularly clever reference to https://en.wikipedia.org/wiki/Gordon_Matta-Clark
2016-03-28T14:25:54 <Bosmon7> hahahaha
2016-03-28T14:26:04 <Bosmon7> As opposed to a MERE COLIN OF THE **MINDD**!
2016-03-28T14:26:17 <simonjb> Bosmon7: I see that there is some protection (at the change applier?) that doesn\'t send out a change if the value being set is the same as the current value
2016-03-28T14:26:33 <Bosmon7> simonjb - yes, this is what we used to rely on historically
2016-03-28T14:26:41 <Bosmon7> It is "usually good enough"
2016-03-28T14:26:57 <colinclark> nice, simonjb
2016-03-28T14:27:43 <Awesome_A> Happy Easter everyone!
2016-03-28T14:27:53 <simonjb> Bosmon7: so, one option is relying on the historic mechanism and another is the new "source tracking"?
2016-03-28T14:28:00 <Bosmon7> simonjb - yes
2016-03-28T14:28:26 <simonjb> can you give me a sense in what situations the existing isn\'t \'good enough\'?
2016-03-28T14:28:37 <Bosmon7> It\'s actually relatively hard to trigger circularity in the "modern" changeApplier, but it can happen in rare circumstances
2016-03-28T14:28:48 <Bosmon7> The situation I ran into was with a "dodgy scrollbar" : P
2016-03-28T14:29:26 <simonjb> we do some sort of deep equality check?
2016-03-28T14:29:28 <Bosmon7> It requires there to be some kind of "materialised component" which responds to model updates in a faulty manner
2016-03-28T14:29:40 <Bosmon7> simonjb - yes, we apply deep equality for all model changes
2016-03-28T14:29:45 <simonjb> ok
2016-03-28T14:30:12 <simonjb> that\'s probably good enough to start with
2016-03-28T14:30:20 <Bosmon7> My feeling is that in order to get circularity, there needs to be some kind of fault at the "material end" of the relay
2016-03-28T14:30:45 <Bosmon7> The scrollbar, in this case, would issue updates at a different granularity than it would accept them
2016-03-28T14:30:55 <Bosmon7> Given it did some kind of unpleasant internal rounding
2016-03-28T14:31:03 <simonjb> ah, interesting
2016-03-28T14:31:07 <Bosmon7> And so it wouldn\'t accept that an update to the same value that it just emitted was the same update
2016-03-28T14:31:28 <simonjb> I guess that\'s possible in my case also
2016-03-28T14:31:31 <Bosmon7> And if it received what it considered was a further such update when it was in the middle of handling another one, it would corrupt its own state
2016-03-28T14:31:53 <simonjb> if the update is a floating point number, there might be rounding to/from JSON
2016-03-28T14:32:30 <Bosmon7> simonjb - there shouldn\'t be, since the default JSON serializer guarantees to perfectly preserve FP accuracy from JavaScript\'s point of view
2016-03-28T14:32:51 <colinclark> Which may not be as accurate as a 64-bit float in other languages
2016-03-28T14:32:54 <colinclark> or rather, is not
2016-03-28T14:33:10 <Bosmon7> colinclark - what language has 64 bit floats that are not IEEE floats?
2016-03-28T14:33:20 <colinclark> dunno
2016-03-28T14:33:21 <colinclark> you tell me :P
2016-03-28T14:33:26 <Bosmon7> I\'m not aware of any :)
2016-03-28T14:33:42 <Bosmon7> In any case, the changeApplier applies a more generous test for equality than FP accuracy
2016-03-28T14:33:54 <colinclark> ah interesting
2016-03-28T14:33:57 <colinclark> what is the test?
2016-03-28T14:34:06 <Bosmon7> colinclark - it is the fluid.model.isSameValue test
2016-03-28T14:34:24 <Bosmon7> Which discards a handful of bits in order to make sure that typical model relay definitions will stabilise
2016-03-28T14:34:35 <simonjb> ok, so I\'m thinking I\'ll start with the existing protections as they are probably good enough and then explore the new source tracking on the side
2016-03-28T14:34:42 <Bosmon7> simonjb - sounds good to me
2016-03-28T14:34:50 <simonjb> thanks very much Bosmon7
2016-03-28T14:40:54 * gabrielmancini has quit
2016-03-28T14:57:22 * michelled1 joined the channel
2016-03-28T14:58:44 <michelled1> avtar, cindyli, danayo: floe planning
2016-03-28T14:58:53 <cindyli> sure
2016-03-28T14:59:39 <danayo> michelled1 won\xe2\x80\x99t be able to make it I\xe2\x80\x99m off to meet Clayton at UC Boulder :)
2016-03-28T14:59:57 * michelled has quit
2016-03-28T15:00:07 <michelled1> oh right! say hi for us :)
2016-03-28T15:00:37 <danayo> will do
2016-03-28T15:00:40 * jhung joined the channel
2016-03-28T15:00:56 * danayo has quit
2016-03-28T15:45:32 * akshay has quit
2016-03-28T16:00:27 * gabrielmancini joined the channel
2016-03-28T16:30:02 * nrda joined the channel
2016-03-28T16:37:18 * Jess_ joined the channel
2016-03-28T16:42:15 * Jess_ has quit
2016-03-28T16:46:19 <michelled1> jhung: do you have anything for the crit?
2016-03-28T16:46:46 <michelled1> fluid-everyone: does anyone have anything for the crit?
2016-03-28T16:51:19 * colinclark has quit
2016-03-28T16:51:53 * michelled1 has quit
2016-03-28T16:59:22 * Awesome_A has quit
2016-03-28T17:13:23 <jhung> sorry michelled1, I was AFK. I don\'t have anything for design crit this week.
2016-03-28T17:24:14 * gabrielmancini has quit
2016-03-28T17:27:24 * Jess_ joined the channel
2016-03-28T17:31:00 * dsharma has quit
2016-03-28T17:42:32 * wale joined the channel
2016-03-28T17:52:16 * michelled joined the channel
2016-03-28T17:56:47 * gabrielmancini joined the channel
2016-03-28T17:56:50 * gabrielmancini has quit
2016-03-28T17:59:25 * cindyli has quit
2016-03-28T18:03:23 * cindyli joined the channel
2016-03-28T18:04:37 <michelled> jhung: do you have a few minutes?
2016-03-28T18:04:48 <jhung> michelled: sure
2016-03-28T18:10:39 * yzen joined the channel
2016-03-28T18:10:47 * colinclark joined the channel
2016-03-28T18:13:33 <michelled> Jess_: you mentioned some Lumen work coming up - do you have some details about that?
2016-03-28T18:14:59 <Jess_> michelled: it wasn\xe2\x80\x99t work coming up \xe2\x80\x94 they asked us about Math. Alan and I had a call with them last week that I think he mentioned at standup.
2016-03-28T18:16:20 <michelled> ah, cool. Jess_ do we need to do any more for them right now regarding math? or something else?
2016-03-28T18:17:29 <Jess_> no, there\xe2\x80\x99s nothing for them. alanharnum and I spoke last week about doing a round-up of all the math stuff he\xe2\x80\x99s been looking into and collecting it somewhere (likely the ILDH) so it isn\xe2\x80\x99t lost
'


b'2017-02-27T15:25:19 * mrtyler_ joined the channel
2017-02-27T15:26:10 <jhernandez> stegru, Bosmon: so .... what\'s the conclusion on the "exec" thing?
2017-02-27T15:26:51 <stegru> well.. if it works, then what\'s the problem?
2017-02-27T15:32:13 <jhernandez> well, I\'m fine to use killProcessByName
2017-02-27T15:37:06 * Caren has quit
2017-02-27T15:41:15 * javjarfer joined the channel
2017-02-27T15:52:54 * Caren joined the channel
2017-02-27T15:54:48 * colinclark joined the channel
2017-02-27T16:21:08 * jessm joined the channel
2017-02-27T16:34:49 * the-t-in-rtf1 joined the channel
2017-02-27T16:37:30 <the-t-in-rtf1> @cindyli, take a look: https://www.npmjs.com/package/gpii-testem
2017-02-27T16:38:04 <the-t-in-rtf1> If you have time to use it in your own work, it should be able to help with the cleanup issues mentioned on this pull: https://github.com/GPII/universal/pull/503
2017-02-27T16:38:18 <the-t-in-rtf1> Happy to pair if you like.
2017-02-27T16:46:37 * colinclark joined the channel
2017-02-27T16:52:30 <cindyli> the-t-in-rtf1: does it mean using gpii-testem to run tests would clean up all pouchdb created files even on windows?
2017-02-27T16:52:59 <cindyli> what if a windows user wants to run tests locally?
2017-02-27T16:53:22 <the-t-in-rtf1> no, it means that testem content would be cleaned up.
2017-02-27T16:53:28 <the-t-in-rtf1> and this does nothing to pouchdb
2017-02-27T16:53:32 <the-t-in-rtf1> nothing has changed there.
2017-02-27T16:53:36 <the-t-in-rtf1> it still does as we agreed\xe2\x80\xa6 :)
2017-02-27T16:53:47 <the-t-in-rtf1> Maybe I have the package wrong.
2017-02-27T16:54:00 <the-t-in-rtf1> Perhaps I\'m confusing two topics.
2017-02-27T16:54:07 <the-t-in-rtf1> Do you use Testem?
2017-02-27T16:54:25 <the-t-in-rtf1> or were we just waiting for you to make use of the new pouchdb cleanup code?
2017-02-27T16:54:36 <cindyli> no, i don\'t use testem but glad to start using it
2017-02-27T16:55:32 <aashay> Justin_o: i have fixed the issue of empty file in FLUID-4713. Ready for more reviewing (https://github.com/fluid-project/infusion/pull/812)
2017-02-27T16:55:37 <cindyli> the-t-in-rtf1: i did make use of the new pouchdb clean up code which works great on mac, i believe on linux too. but Bosmon still discovers an issue with windows
2017-02-27T16:56:06 <cindyli> the-t-in-rtf1: the cleanup didn\'t fully clean pouchdb temp files \'cuz those files are in lock state at unlink
2017-02-27T16:56:13 <the-t-in-rtf1> Ah, yes, that.
2017-02-27T16:56:33 <the-t-in-rtf1> I think I added a more aggressive cleanup that handles that after the fact.
2017-02-27T16:56:40 <cindyli> https://github.com/GPII/universal/pull/503#issuecomment-281877293
2017-02-27T16:56:43 <the-t-in-rtf1> It\'s a posttest step, let me find the link.
2017-02-27T16:56:44 <Justin_o> aashay: thanks, i\'ll try to take a look at that a bit later
2017-02-27T16:56:47 <cindyli> the error Bosmon saw
2017-02-27T16:57:07 <the-t-in-rtf1> https://github.com/the-t-in-rtf/gpii-pouchdb/blob/GPII-2179/package.json#L12
2017-02-27T16:57:24 <aashay> Justin_o: sure. thanks :)
2017-02-27T16:58:00 <cindyli> checking the gpii-pouchdb version in my pull
2017-02-27T16:59:55 * kavya_ joined the channel
2017-02-27T17:00:41 <cindyli> the-t-in-rtf1: is this "posttest" step automatically ran after running "node all-tests.js" or it needs to be manually started?
2017-02-27T17:01:48 <the-t-in-rtf1> posttest steps run automatically after the "test" step.
2017-02-27T17:01:52 <cindyli> yes, the-t-in-rtf1, my gpii-pouchdb version "1.0.1-dev.20170208T180039Z.83f5aca" already includes this change
2017-02-27T17:02:15 <the-t-in-rtf1> The only question is whether you need to make your own cleanup file with different options.
2017-02-27T17:02:26 <the-t-in-rtf1> Check out the file used in my posttest and let me know if you have questions.
2017-02-27T17:02:36 <cindyli> ah, ok, automatical if using "npm test" to run tests
2017-02-27T17:02:43 <cindyli> not using "node all-tests.js"
2017-02-27T17:02:47 <the-t-in-rtf1> Anyway, sorry to mix up issues, glad there\'s at least something new I can contribute.
2017-02-27T17:02:54 <the-t-in-rtf1> that\'s correct
2017-02-27T17:02:59 * kavya has quit
2017-02-27T17:03:07 <cindyli> cool. great to learn this
2017-02-27T17:03:35 <cindyli> i will leave a comment on my pull request to let Bosmon know
2017-02-27T17:04:05 <Justin_o> fluid-everyone: sorry to say that we didn\'t make it into GSoC this year :( Too many applications, not enough slots.
2017-02-27T17:05:25 <cindyli> :( thanks for all the work, Justin_o
2017-02-27T17:06:11 <cindyli> the-t-in-rtf1: let\'s back to talk about using testem. what is the cleanup improvement to use testem?
2017-02-27T17:06:31 <cindyli> or it\'s a different cleanup?
2017-02-27T17:07:05 <the-t-in-rtf1> Well, if you use testem using just a json configuration file, there is no cleanup
2017-02-27T17:07:14 <the-t-in-rtf1> and it produces lots of browser settings
2017-02-27T17:07:24 <the-t-in-rtf1> in your temporary directory
2017-02-27T17:07:37 <the-t-in-rtf1> gpii-testem adds a new cleanup mechanism for testem
2017-02-27T17:08:00 <the-t-in-rtf1> it configures testem to put the content in a known subdirectory and then to clean that up after the tests finish.
2017-02-27T17:08:16 <cindyli> i see. that\'s cool
2017-02-27T17:08:22 <mrtyler_> the-t-in-rtf1: did you see my comment on GPII-2296 re: when cleanup should happen?
2017-02-27T17:08:36 <the-t-in-rtf1> I\'m sure it\'s in my notifications.
2017-02-27T17:08:43 <the-t-in-rtf1> I\'m about 8 minutes overdue to finish for the day
2017-02-27T17:08:52 <the-t-in-rtf1> I can hear silverware clinking against plates in the other room
2017-02-27T17:08:52 <mrtyler_> tl;dr: do cleanup as the first step, don\'t do it as the last step
2017-02-27T17:09:18 <the-t-in-rtf1> I will respond on the ticket in the morning.
2017-02-27T17:09:22 <mrtyler_> o7
2017-02-27T17:09:45 <mrtyler_> i guess it\'s more for other people who are reviewing this work now, to calibrate their expectations appropriately :)
2017-02-27T17:13:36 <the-t-in-rtf1> Just one note before I go, @mrtyler_
2017-02-27T17:13:55 <the-t-in-rtf1> A lot my tests create temporary content in subdirectories that are based on their ids.
2017-02-27T17:14:35 <the-t-in-rtf1> Removing them before the tests is not really an option.
2017-02-27T17:14:55 <mrtyler_> that sounds like an implementation detail
2017-02-27T17:15:12 <mrtyler_> i recommend deciding the right thing to do, then figuring out how to do it
2017-02-27T17:15:19 <mrtyler_> rather than letting the tail wag the dog, so to speak
2017-02-27T17:25:28 <Justin_o> Bosmon: should it be possible to override a an invoker that uses "changePath" and "value" with one that uses "funcName" and "args"
2017-02-27T17:25:47 <Bosmon> Justin_o - yes, it should
2017-02-27T17:26:10 <Justin_o> Bosmon: is there something special i need to do?
2017-02-27T17:26:33 <Bosmon> Justin_o - no, but it\'s possible we have a further bug in the same form as https://issues.fluidproject.org/browse/FLUID-5184
2017-02-27T17:27:08 <Bosmon> If it is so, could you apply the same workaround and then file a further issue?
2017-02-27T17:28:04 <Bosmon> I guess we should assign all issues with a fix version of 2.0.0-beta.1 etc simply to 2.0.0
2017-02-27T17:28:04 <Justin_o> Bosmon: well this might be worse or at least different.
2017-02-27T17:28:18 <Bosmon> Since we never released beta versions in practice
2017-02-27T17:28:21 <Justin_o> Bosmon: yes, changing the fix version makes sense
2017-02-27T17:28:56 <Justin_o> Bosmon:  so if i don\'t null out "changePath" and "value" it doesn\'t override.. if I null out both, i get "Uncaught TypeError: Cannot read property \'segs\' of null"
2017-02-27T17:29:14 <Bosmon> Yes
2017-02-27T17:29:16 <Bosmon> I see this
2017-02-27T17:29:32 <Bosmon> Looking at the actual implementation, I see that this is a horrifying issue with no workaround
2017-02-27T17:29:46 <Bosmon> Since the framework explicitly checks against "undefined" for changePath
2017-02-27T17:30:00 <Justin_o> Bosmon: and we can\'t assign undefined as a value for options merging
2017-02-27T17:30:02 <Bosmon> Even allowing for a workaround will require a framework fix
2017-02-27T17:30:03 <Bosmon> We can\'t
2017-02-27T17:30:22 <Bosmon> If you can produce a JIRA plus test case I\'ll give it my urgent attention!
2017-02-27T17:30:30 <Bosmon> In the meantime your best workaround is to refactor your component hierarchy
2017-02-27T17:30:31 <Justin_o> Bosmon: thanks :)
2017-02-27T17:30:48 <Bosmon> So that the changePath version of the invoker is shifted to a derived grade, and the base grade becomes empty
2017-02-27T17:30:57 <Bosmon> Or perhaps contains a "fluid.notImplemented" invoker
2017-02-27T17:31:13 <Justin_o> Bosmon: thanks.. i\'ll try using one of those work arounds
2017-02-27T17:53:54 * shivam_ogway joined the channel
2017-02-27T18:04:34 * the-t-in-rtf joined the channel
2017-02-27T18:44:21 * sirdancealot joined the channel
2017-02-27T19:15:16 * stegru has quit
2017-02-27T19:48:40 * colinclark joined the channel
2017-02-27T19:55:15 * stegru joined the channel
2017-02-27T19:55:39 * colinclark has quit
2017-02-27T20:14:18 * Caren joined the channel
2017-02-27T20:17:57 * shivam_ogway has left the channel
2017-02-27T20:39:43 <Justin_o> Bosmon: I\'ve filed a JIRA and a PR with a test case for the issue of overriding invokers specified with "changePath" https://issues.fluidproject.org/browse/FLUID-6136
2017-02-27T20:45:47 * stegru_ joined the channel
2017-02-27T20:45:55 * colinclark joined the channel
2017-02-27T20:49:05 <Bosmon> Justin_o - that\'s really great, thanks
2017-02-27T20:49:07 <Bosmon> I will look at it tomorrow
2017-02-27T20:50:31 <Justin_o> Bosmon: thanks, also i moved all the 2.0beta1 JIRAS to 2.0
2017-02-27T20:52:21 * javjarfer has quit
2017-02-27T20:52:52 * javjarfer joined the channel
2017-02-27T20:53:43 * javjarfer1 joined the channel
2017-02-27T20:53:53 * javjarfer1 has quit
2017-02-27T20:54:13 * javjarfer1 joined the channel
2017-02-27T20:56:49 * the-t-in-rtf has quit
2017-02-27T20:56:57 * javjarfer has quit
2017-02-27T21:10:57 * Caren joined the channel
2017-02-27T21:14:46 * sirdancealot has quit
2017-02-27T21:43:11 * Caren has quit
2017-02-27T22:55:56 * javjarfer1 has quit
2017-02-27T22:56:14 * javjarfer joined the channel
2017-02-27T23:13:52 * stegru has quit
2017-02-27T23:18:48 * javjarfer1 joined the channel
2017-02-27T23:20:46 * javjarfer has quit
2017-02-27T23:22:10 * javjarfer1 has quit
2017-02-27T23:23:04 * javjarfer joined the channel
2017-02-27T23:29:50 * javjarfer1 joined the channel
2017-02-27T23:31:47 * javjarfer1 has quit
2017-02-27T23:32:18 * javjarfer1 joined the channel
2017-02-27T23:33:56 * javjarfer has quit
'

b'2017-02-27T06:02:00 * the-t-in-rtf joined the channel
2017-02-27T06:42:04 * the-t-in-rtf1 joined the channel
2017-02-27T08:47:32 * stegru joined the channel
2017-02-27T10:08:05 * sirdancealot joined the channel
2017-02-27T10:31:44 * the-t-in-rtf joined the channel
2017-02-27T10:43:43 * sirdancealot has quit
2017-02-27T11:22:36 * sirdancealot joined the channel
2017-02-27T11:32:32 <jhernandez> stegru: morning
2017-02-27T11:32:47 <stegru> hello!
2017-02-27T11:33:16 <jhernandez> hola
2017-02-27T11:33:23 <stegru> i also hate those unit tests ;)
2017-02-27T11:33:28 <jhernandez> I\'ve got a question for you
2017-02-27T11:33:31 <jhernandez> haha
2017-02-27T11:33:34 <stegru> ok
2017-02-27T11:35:14 <jhernandez> then I assume that you have seen GPII-2302
2017-02-27T11:35:36 <jhernandez> I\'ve just created https://github.com/GPII/windows/pull/113
2017-02-27T11:36:10 <jhernandez> so the quick question is, why do we need to use the waitFor method to kill the process?
2017-02-27T11:38:01 <stegru> I just used it like a "sleep" command - just to start a process, but have it exit after some time in case the test didn\'t kill it
2017-02-27T11:38:48 <jhernandez> yes
2017-02-27T11:41:52 <jhernandez> okay, the thing is that I can kill the process in this way if I set the process.execPath to be the path to node.exe
2017-02-27T11:42:46 <jhernandez> but I find it a bit odd
2017-02-27T11:45:38 <jhernandez> but yes, I agree that we should ensure that the process exits in case the test isn\'t able to kill it
2017-02-27T11:45:42 <stegru> that\'s wierd
2017-02-27T11:46:53 <stegru> another way could be to use test-window.exe
2017-02-27T11:47:56 <stegru> not sure what that would fix, but the tests always make a copy of waitfor.exe, to ensure the process name is unique
2017-02-27T11:48:39 <stegru> i\'ve never been happy with these tests
2017-02-27T11:49:53 <jhernandez> I understand
2017-02-27T11:53:13 <jhernandez> ok, then we can a) use that weird shelljs recommendation and set execPath manually (which works for us), b) search for an alternative to kill the process and that is not killProcessByName or c) change the tests
2017-02-27T11:54:35 <stegru> yes
2017-02-27T11:56:39 <jhernandez> apparently, they have plans to change shelljs.exec, look at https://github.com/shelljs/shelljs/pull/524
2017-02-27T12:30:02 <jhernandez> okay, for b), we can use gpii.launch.exec, which if I\'m not wrong basically calls child_process.exec
2017-02-27T12:30:54 <jhernandez> stegru, Bosmon: what are your thoughts on this?
2017-02-27T12:32:18 <Bosmon> We should just set process.execPath to be the path of the gpii app module itself
2017-02-27T12:32:30 <Bosmon> It\'s a reasonable choice that will not surprise people
2017-02-27T12:32:36 <Bosmon> gpii-app needs a fluid.registerModule directive in any case
2017-02-27T12:33:07 <stegru> I don\'t understand the problem
2017-02-27T12:33:17 <Bosmon> stegru - there is a ... BUGGE
2017-02-27T12:33:22 <jhernandez> well, will not surprise people once they see the link to the workaround :P
2017-02-27T12:33:24 <Bosmon> Inside electron : P
2017-02-27T12:33:28 <stegru> a BACK?
2017-02-27T12:33:37 <jhernandez> haha
2017-02-27T12:33:39 <Bosmon> jhernandez - I mean the VALUE of the path will not surprise people :)
2017-02-27T12:34:47 <jhernandez> yes
2017-02-27T12:35:20 <stegru> ok, I\'ve read the jira
2017-02-27T12:35:45 <stegru> why use shelljs anyway? what does that give that the normal exec doesn\'t?
2017-02-27T12:36:28 <stegru> oh, it\'s broken
2017-02-27T12:37:33 <Bosmon> I think we might get away without using shelljs now
2017-02-27T12:37:42 <Bosmon> Isn\'t it the case that recent nodes have the features we want in exec?
2017-02-27T12:38:48 <stegru> if you say so
2017-02-27T12:39:01 <jhernandez> as far as I can see, we use shelljs\' cp, rm and exec
2017-02-27T12:39:34 <the-t-in-rtf> Does anyone know if Alfredo is working today?
2017-02-27T12:40:47 <jhernandez> the-t-in-rtf: right now he\'s in a train travelling back to Sevilla
2017-02-27T12:41:08 <Bosmon> ah ok, sorry
2017-02-27T12:41:13 <Bosmon> I thought we just used it for exec
2017-02-27T12:41:32 <jhernandez> the-t-in-rtf: I\'m not sure whether he\'s going to work later today or not
2017-02-27T12:41:39 <the-t-in-rtf> Thanks, @jhernandez
2017-02-27T12:41:49 <jhernandez> the-t-in-rtf: yw :)
2017-02-27T12:47:33 <stegru> jhernandez: , there\'s no reason not to use killProcessByName in that test
2017-02-27T12:48:09 <stegru> if you\'re worried about that function not working, then improve the tests for it ;)
2017-02-27T12:48:25 <jhernandez> haha
2017-02-27T12:48:37 <jhernandez> fair enough
2017-02-27T12:49:38 <stegru> ah, the tests are after that one - perhaps that\'s why i didn\'t use it
2017-02-27T12:49:39 <jhernandez> it\'s true that in the worst case, we\'ll get a test failure anyway
2017-02-27T12:49:58 <jhernandez> :)
2017-02-27T12:51:12 <jhernandez> I mean, our killProcessByName does work both in node and electron
2017-02-27T12:53:31 <stegru> my trouble with that is you have a unit test depending on untested code
2017-02-27T12:54:56 <stegru> not that it\'s a big deal in this case
2017-02-27T12:55:42 <jhernandez> yes, I totally get your point
2017-02-27T12:56:29 * the-t-in-rtf1 joined the channel
2017-02-27T12:58:52 * alanharn_ joined the channel
2017-02-27T13:06:12 * the-t-in-rtf joined the channel
2017-02-27T13:09:41 * kavya joined the channel
2017-02-27T13:13:26 <Bosmon> Well, isn\'t it backwards
2017-02-27T13:13:37 <Bosmon> We are not worried about killProcessByName not working, since it *does* have tests
2017-02-27T13:14:25 <Bosmon> What we\'re worried about is this somewhat unrelated scheme for killing processes
2017-02-27T13:17:38 <Bosmon> Well, maybe I have it backwards
2017-02-27T13:18:05 <Bosmon> stegru - what do you mean by "you have a unit test depending on untested code" - what\'s the situation here?
2017-02-27T13:19:18 <stegru> well, let\'s say there\'s a fault in it.. when the first test might incorrectly pass or fail due to that fault
2017-02-27T13:20:00 <stegru> no big deal in this case, it\'s just something I\'d avoid if possible
2017-02-27T13:22:09 <Bosmon> Isn\'t it only a problem if it might incorrectly pass?
2017-02-27T13:22:18 <Bosmon> Well, sure, it is a problem in both cases
2017-02-27T13:22:19 <stegru> yes
2017-02-27T13:22:35 <Bosmon> But what is the pair of tests we\'re talking about, specifically?
2017-02-27T13:22:35 <stegru> but yes, more if it incorrectly passes
2017-02-27T13:22:53 <Bosmon> There\'s the one enclosing this line: https://github.com/GPII/windows/blob/master/gpii/node_modules/processHandling/test/testProcessHandling.js#L112
2017-02-27T13:23:02 <Bosmon> And the issue is that "Testing Killing Processes" might be affected by it?
2017-02-27T13:23:04 <Bosmon> Is that right?
2017-02-27T13:23:07 * Justin_o joined the channel
2017-02-27T13:23:10 <stegru> yes the next one
2017-02-27T13:23:26 <stegru> no.. that one
2017-02-27T13:23:39 <Bosmon> So it\'s this one and the previous one?
2017-02-27T13:23:57 <stegru> no, the one at 88, then 123
2017-02-27T13:24:08 <Bosmon> Right ok
2017-02-27T13:24:15 <Bosmon> And how do these two tests interact?
2017-02-27T13:24:26 <stegru> if kill process doesn\'t work, then it will cause the one at 88 to fail
2017-02-27T13:25:01 <Bosmon> How?
2017-02-27T13:25:12 <Bosmon> Especially since one imagines they usually run in the opposite order
2017-02-27T13:26:37 <stegru> wait hang on, I just said I\'m not keen on a test depending on untested code.. I don\'t know whether or not this causes any problems in this instance
2017-02-27T13:27:17 <stegru> you\'re trying to pin my generalisation onto something concrete
2017-02-27T13:27:19 <stegru> heh
2017-02-27T13:27:25 <Bosmon> sneaky me : P
2017-02-27T13:28:28 <jhernandez> hahaha
2017-02-27T13:29:02 <Bosmon> So - regardless of whether they are an instance of your generalisation or not - do these two tests interact? : P
2017-02-27T13:29:05 <Bosmon> And if so, how : P
2017-02-27T13:29:23 <stegru> they don\'t, they shouldn\'t, i wouldn\'t
2017-02-27T13:30:51 <stegru> on line 112 i just used that method to kill the process because I have the choice to not use the untested killProcess
2017-02-27T13:31:53 <stegru> "had"
2017-02-27T13:34:44 * yzen has quit
2017-02-27T13:35:09 * yzen joined the channel
2017-02-27T13:37:34 * jhung joined the channel
2017-02-27T13:39:07 * sirdancealot has quit
2017-02-27T13:44:58 * alanharn_ joined the channel
2017-02-27T13:51:01 <aashay> jhung: I submitted a PR on FLOE-166 which was reported by you (https://github.com/fluid-project/floeproject.org/pull/51). Please review it whenever you can.
2017-02-27T13:53:19 * sirdancealot joined the channel
2017-02-27T13:54:16 * sirdancealot has quit
2017-02-27T13:55:44 * sirdancealot joined the channel
2017-02-27T13:57:33 * sirdancealot has quit
2017-02-27T13:59:37 * sirdancealot joined the channel
2017-02-27T14:00:43 <jhung> aashay: thanks. I\'ll take a look.
2017-02-27T14:01:22 * simonjb joined the channel
2017-02-27T14:01:41 <aashay> jhung: thanks :)
2017-02-27T14:02:02 * sirdancealot has quit
2017-02-27T14:02:57 * sirdancealot joined the channel
2017-02-27T14:04:12 * sirdancealot has quit
2017-02-27T14:05:43 * cindyli joined the channel
2017-02-27T14:07:43 * sirdancealot joined the channel
2017-02-27T14:08:24 * Caren joined the channel
2017-02-27T14:23:31 * colinclark joined the channel
2017-02-27T14:28:27 <Justin_o> cindyli: did you see this https://accessibility.blog.gov.uk/2017/02/24/what-we-found-when-we-tested-tools-on-the-worlds-least-accessible-webpage/
2017-02-27T14:28:35 <Justin_o> it was posted on the inclusive design community list
2017-02-27T14:28:41 <Justin_o> they tested aChecker
2017-02-27T14:28:48 <cindyli> yes, Justin_o
2017-02-27T14:30:45 <cindyli> we talked about this last Friday in the channel. i was a bit surprised that achecker still pretty good at capturing a11y problem after 4 years not having active development
2017-02-27T14:31:55 <Bosmon> What an interesting study
2017-02-27T14:32:14 <Bosmon> Congrats to us on still being the world\'s 2nd best a11y tool :)
2017-02-27T14:33:38 <Justin_o> cindyli, Bosmon: yes, pretty amazing given the dev resources it\'s had.. just think if we integrate aXe and maybe some other changes we could probably get it up to 50%
2017-02-27T14:33:42 <Justin_o> or there abouts
2017-02-27T14:33:57 * sirdancealot has quit
2017-02-27T14:34:00 <Bosmon> Well, hats off to the UK government
2017-02-27T14:34:03 <Bosmon> I am surprised by them :)
2017-02-27T14:35:04 <Justin_o> :)
2017-02-27T14:50:08 <alanharn_> Bosmon: GDS has some pretty amazing talent, though it seems to have been getting slowly marginalized and picked apart by various forces over the last few years
2017-02-27T14:50:30 <alanharn_> for a while it was everyone\'s inspiration if they worked in government tech and were vaguely progressive
2017-02-27T14:51:29 * gtirloni joined the channel
2017-02-27T15:13:47 * colinclark joined the channel
2017-02-27T15:14:54 <Justin_o> Bosmon: did you have a chance to look over this PR again https://github.com/fluid-project/infusion/pull/807
2017-02-27T15:15:53 <Bosmon> Not yet, sorry
2017-02-27T15:15:56 <Bosmon> I\'ll try and find time today
2017-02-27T15:16:02 <Justin_o> Bosmon: thanks :)
2017-02-27T15:23:08 * clown joined the channel
'


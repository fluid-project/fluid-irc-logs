b'2017-11-17T00:20:44 * chlorophilia joined the channel
2017-11-17T00:26:06 * cindyli joined the channel
2017-11-17T03:01:36 * colinclark joined the channel
2017-11-17T03:17:33 <chlorophilia> one thing I considered, bosmon, regarding the dataset: because some species are lacking classifications like \xe2\x80\x9csuperorder\xe2\x80\x9d etc. it might make sense to standardize each row and limit the dataset to only the columns that are consistently populated with data. What do you think?
2017-11-17T03:18:15 <chlorophilia> that way one doesn\xe2\x80\x99t end up with species level taxa at various layers of the onion. I suppose it\xe2\x80\x99s no really that important. What do you think?
2017-11-17T03:18:18 * chlorophilia has left the channel
2017-11-17T04:08:09 * kavya has quit
2017-11-17T06:45:22 * sgithens has quit
2017-11-17T07:51:46 * dandimitrov joined the channel
2017-11-17T08:02:55 * the-t-in-rtf joined the channel
2017-11-17T08:32:18 * georgitodorov joined the channel
2017-11-17T08:34:18 * georgit joined the channel
2017-11-17T08:37:19 * georgitodorov has quit
2017-11-17T08:37:47 * the-t-in-rtf joined the channel
2017-11-17T08:57:12 * the-t-in-rtf joined the channel
2017-11-17T09:11:46 * stegru joined the channel
2017-11-17T12:08:43 * Justin_o joined the channel
2017-11-17T12:39:59 * dandimitrov has quit
2017-11-17T12:40:48 * dandimitrov joined the channel
2017-11-17T12:57:37 * jhung joined the channel
2017-11-17T13:09:12 * grrrero joined the channel
2017-11-17T13:31:04 * alanharnum joined the channel
2017-11-17T13:34:31 * alanharn_ joined the channel
2017-11-17T13:36:13 * gtirloni joined the channel
2017-11-17T13:59:08 * gtirloni joined the channel
2017-11-17T14:00:08 * the-t-in-rtf joined the channel
2017-11-17T14:01:50 * the-t-in-rtf joined the channel
2017-11-17T14:03:36 <Justin_o> gtirloni, the-t-in-rtf: you might find this helpful https://github.com/blog/2470-introducing-security-alerts-on-github
2017-11-17T14:05:17 <Justin_o> I\'m not sure, but snyk may be more exhaustive in how it determines these things
2017-11-17T14:19:46 * sepidehshahi joined the channel
2017-11-17T14:26:44 <the-t-in-rtf> I\'m interested enough to look into it.
2017-11-17T14:30:19 <Justin_o> cool, hope it\'s useful
2017-11-17T14:33:37 <Justin_o> Bosmon: is there an order for which resolve callbacks on a promise are executed
2017-11-17T14:34:59 <Bosmon> Justin_o - they will be in executed in order of registration, but hopefully one doesn\'t depend on that too strongly
2017-11-17T14:38:14 * Jess_ joined the channel
2017-11-17T14:38:50 * cindyli joined the channel
2017-11-17T14:40:57 <Justin_o> Bosmon: okay... well for FLUID-6209 i need to update the in flight status of the request after it finishes.. that\'s the only order dependency at the moment... that workflow will likely change when we get to the next step of adding in the ability to configure pre/post fetching for write requests
2017-11-17T14:41:12 <Justin_o> but i\'m just finishing up the tests for the simpler version at the moment
2017-11-17T14:42:47 <Bosmon> Justin_o - it\'s always cleaner to allocate a fresh promise in such cases
2017-11-17T14:43:12 <Bosmon> This is what the usage of "classic promises" would naturally guide you to anyway
2017-11-17T14:43:49 <Justin_o> Bosmon: what\'s the process for allocating a fresh promise, as there may handlers registered to the promise already
2017-11-17T14:44:43 * georgit has quit
2017-11-17T14:45:27 <Bosmon> Justin_o - typically in our idiom we just make a fresh fluid.promise together with a call to fluid.promise.follow()
2017-11-17T14:45:46 <Bosmon> If we were using more classic promises, this process would be happening implicitly whenever we did anything with a promise
2017-11-17T14:47:32 <Justin_o> Bosmon: okay.. i\'m familiar with using fluid.promise.follow.. i\'m not entirely sure where to put this in my workflow.. i guess i shouldn\'t be returning the same promise back when one exists, but rather one that follows it instead
2017-11-17T14:47:36 <Justin_o> but i\'m not sure how to test that
2017-11-17T14:47:47 <Justin_o> how would we know that one promise follows another?
2017-11-17T14:48:07 <Bosmon> Justin_o - well, you would test it through its observable effects : P
2017-11-17T14:48:13 <Bosmon> That resolving one causes the other to resolve
2017-11-17T14:49:36 <Justin_o> Bosmon: right okay.. i had some test to see if the promises were in fact the same.. in my current case, but i\'ll look into re-writing all this to use fresh promises that follow instead of passing the same one around
2017-11-17T14:50:08 <Bosmon> Justin_o - it sounds like an undesirably low-level thing to test
2017-11-17T14:50:17 <Bosmon> In general promises don\'t have any kind of natural equality semantics
2017-11-17T14:50:22 <Bosmon> And this is sort of the point of them
2017-11-17T14:50:31 <Bosmon> And also, to a large extent, what is wrong with them
2017-11-17T14:50:34 <Bosmon> But that\'s how they are : P
2017-11-17T14:50:54 <Justin_o> lol okay :)
2017-11-17T15:22:45 * simonjb joined the channel
2017-11-17T15:45:30 * stegru has quit
2017-11-17T15:47:02 * mrtyler joined the channel
2017-11-17T16:10:26 * colinclark joined the channel
2017-11-17T16:10:39 * amatas joined the channel
2017-11-17T16:23:46 * jhernandez has quit
2017-11-17T16:31:29 * amatas has quit
2017-11-17T16:54:19 * gtirloni_ joined the channel
2017-11-17T18:20:42 * gtirloni__ joined the channel
2017-11-17T18:28:03 * sgithens joined the channel
2017-11-17T18:55:21 * the-t-in-rtf joined the channel
2017-11-17T18:59:37 * colinclark joined the channel
2017-11-17T19:11:35 * colinclark joined the channel
2017-11-17T19:11:35 * colinclark has quit
2017-11-17T19:12:52 * colinclark joined the channel
2017-11-17T19:16:37 * jhung_away is now known as jhung
2017-11-17T19:30:57 * dandimitrov has quit
2017-11-17T20:02:05 * stegru joined the channel
2017-11-17T22:59:41 * stegru has quit
2017-11-17T23:03:26 * stegru joined the channel
2017-11-17T23:28:46 * stegru has quit
'


b'2017-07-31T13:34:50 * grrrero joined the channel
2017-07-31T14:03:36 * avtar joined the channel
2017-07-31T14:17:25 <Justin_o> cindyli: would you be able to look at this PR. It should be a fast one https://github.com/fluid-project/infusion/pull/839
2017-07-31T14:22:32 * alanharnum joined the channel
2017-07-31T14:33:32 * cindyli joined the channel
2017-07-31T14:34:03 <cindyli> sure, Justin_o
2017-07-31T14:34:08 <Justin_o> cindyli: thanks
2017-07-31T14:34:12 <cindyli> np
2017-07-31T14:36:31 * colinclark joined the channel
2017-07-31T14:38:56 <gtirloni> Bosmon: re: GPII-2483... so far no failures running on my computer (15 out of 15). I\'ll try CI next
2017-07-31T14:51:11 * simonjb joined the channel
2017-07-31T14:56:01 * alanharnum joined the channel
2017-07-31T14:59:42 * alanharnum has quit
2017-07-31T14:59:49 * alanharnum joined the channel
2017-07-31T15:17:41 * mrtyler joined the channel
2017-07-31T15:19:10 * colinclark joined the channel
2017-07-31T15:20:38 <Justin_o> fluid-everyone: i\'m going to try to fixup our JIRA / GitHub integration which doesn\'t seem to be updating all the time. If you are making any changes to PRs at the moment, they may not be reflected in JIRA.
2017-07-31T15:24:58 * simonjb joined the channel
2017-07-31T15:36:59 * the-t-in-rtf joined the channel
2017-07-31T15:37:29 <the-t-in-rtf> @Bosmon @colinclark and anyone else interested, here\'s the first pass at a code coverage report for the linux repo: http://the-t-in-rtf.github.io/coverage-reports/linux/20170731/index.html
2017-07-31T15:38:19 <the-t-in-rtf> That\'s based on running the unit and acceptance tests, minus the gsettings tests, which I\'m still working on.
2017-07-31T15:41:59 * javjarfer joined the channel
2017-07-31T15:51:12 <jhung> colinclark: It seems that the "transcript synchronizer" is a prime candidate to apply the Calvin & Hobbes naming convention. "Transcript-o-Chrononizer" written in reverse comic sans seems about right.
2017-07-31T15:54:16 * alanharnum joined the channel
2017-07-31T15:55:58 <colinclark> hey jhung
2017-07-31T15:56:08 <colinclark> I loved Calvin & Hobbs
2017-07-31T15:56:11 <colinclark> that\'s a wicked name :)
2017-07-31T16:06:53 <jhernandez> Bosmon: any update on https://github.com/GPII/universal/pull/531 ?
2017-07-31T16:09:15 * simonjb has quit
2017-07-31T16:09:41 <Justin_o> gtirloni: grrrero is having trouble subscribing to the fluid-work mailing list.
2017-07-31T16:10:29 <Justin_o> grrrero: in the meantime you can look at the archive http://fluid.2324889.n4.nabble.com/Fluid-Work-f3.html
2017-07-31T16:11:00 <gtirloni> grrrero: hello! do you get an error?
2017-07-31T16:11:17 <grrrero> gtirloni: Nope, not a confirmation email
2017-07-31T16:11:24 <grrrero> *not even a
2017-07-31T16:13:57 <gtirloni> maybe it\'s in the spam folder?
2017-07-31T16:14:09 <gtirloni> the server sent it and OCAD\'s servers accepted it
2017-07-31T16:14:45 <Justin_o> grrrero: maybe check in the webmail, perhaps they aren\'t forwarding all of the e-mails to your client
2017-07-31T16:15:20 * simonjb joined the channel
2017-07-31T16:15:47 * cindyli joined the channel
2017-07-31T16:16:34 <grrrero> Just checked, nothing there :(
2017-07-31T16:16:41 <grrrero> Nothing in Spam either
2017-07-31T16:16:57 * gtirloni_ joined the channel
2017-07-31T16:19:35 <Justin_o> gtirloni: ^
2017-07-31T16:20:46 <Bosmon> jhernandez - gtirloni_ is testing it
2017-07-31T16:20:50 <Bosmon> Looking good so far
2017-07-31T16:21:52 <Bosmon> Thanks for the code coverage report on linux, the-t-in-rtf
2017-07-31T16:22:15 <Bosmon> Looks like there is a very black spot in the Xrandr bridge - I think klown or jhernandez would be good people to commet on whether that is realistic
2017-07-31T16:23:08 <gtirloni_> grrrero: can you check your inbox again? I went to the fluid-work page and entered your email address, and the server confirmed the email was delivered to OCAD (http://lists.idrc.ocad.ca/mailman/listinfo/fluid-work)
2017-07-31T16:23:44 <jhernandez> Bosmon: oh, nice
2017-07-31T16:23:52 <grrrero> gtirloni: Nothing there...
2017-07-31T16:24:00 <jhernandez> and wrt the xrandr\'s black spot? what it is about?
2017-07-31T16:24:42 <gtirloni_> grrrero: ok thanks. I\'ll open a request to OCAD\'s IT
2017-07-31T16:24:44 <the-t-in-rtf> @jhernandez, we are asking folks to look at the first coverage report to confirm whether particular code should have been hit.
2017-07-31T16:24:52 <the-t-in-rtf> the black spot would be an area that didn\'t get hit.
2017-07-31T16:24:55 <grrrero> gtirloni: Ok, thanks a lot!
2017-07-31T16:24:57 <Bosmon> jhernandez - here is the-t-in-rtf \'s first implementation of test coverage: http://the-t-in-rtf.github.io/coverage-reports/linux/20170731/sync/gpii/node_modules/xrandr/xrandr_bridge.js.html
2017-07-31T16:25:05 <the-t-in-rtf> http://the-t-in-rtf.github.io/coverage-reports/linux/20170731/sync/gpii/node_modules/xrandr/xrandr_bridge.js.html
2017-07-31T16:25:10 <jhernandez> the-t-in-rtf: oh, ok, I see
2017-07-31T16:25:11 <the-t-in-rtf> shoot, just a little too late.
2017-07-31T16:25:12 <the-t-in-rtf> :)
2017-07-31T16:25:13 <Justin_o> alanharnum, colinclark: https://voice.mozilla.org
2017-07-31T16:25:27 <Bosmon> Sometimes these holes reflect real problems in the test coverage, sometimes at this early stage they represent configuration problems with the coverage generator
2017-07-31T16:25:38 <Bosmon> So we need people familiar with the code in question to look into the details
2017-07-31T16:28:47 <gtirloni_> grrrero: if you notice this is also happen with other emails, please refer to ticket #JVD-467-76745 when contacting IT Helpdesk
2017-07-31T16:28:59 <grrrero> Ok gtirloni
2017-07-31T16:36:59 * avtar joined the channel
2017-07-31T16:42:15 * alanharnum has quit
2017-07-31T16:49:49 <jhernandez> Bosmon, the-t-in-rtf: I need some more of background here. That code should be called when running the tests, then I\'m not sure how is that the report says that they aren\'t being hit :/
2017-07-31T16:52:22 <jhernandez> so, these tests are very similar to the ones in alsa\'s module, which is being reported as hit
2017-07-31T16:53:32 <the-t-in-rtf> @jhernandez, If you can point me to a test/line of code that should hit it, happy to investigate
2017-07-31T16:53:36 <the-t-in-rtf> that\'s one of the reasons I shared it.
2017-07-31T16:54:59 <jhernandez> the-t-in-rtf: sure - but right now I\'m getting pink unicorns on github and gotta run
2017-07-31T16:55:05 <jhernandez> :/
2017-07-31T16:55:23 <colinclark> jhernandez has band practice!
2017-07-31T16:55:50 <jhernandez> and so the unicorn looks even more angry when I refresh the page xD
2017-07-31T16:55:53 <jhernandez> colinclark: so true
2017-07-31T16:55:55 <colinclark> poor unicorn
2017-07-31T16:59:37 <jhung> Hey Justin_o. Ned at pressbooks just asked if it\'s possible to include / provide UIO using Webpack. I wasn\'t aware of Webpack so I had to look it up\xe2\x80\xa6 http://blog.webscopeapp.com/using-webpack-wordpress/
2017-07-31T17:03:39 <simonjb> https://status.github.com/
2017-07-31T17:03:54 <simonjb> "Major service outage."
2017-07-31T17:05:56 <Justin_o> jhung: i think alan might have looked into that before
2017-07-31T17:06:35 <simonjb> the "App Server Availability" graph looks very sad :(
2017-07-31T17:12:40 * alanharnum joined the channel
2017-07-31T17:19:16 * cindyli has quit
2017-07-31T17:21:40 * pratik_r joined the channel
2017-07-31T17:22:09 * cindyli joined the channel
2017-07-31T17:29:09 <stegru> gtirloni or mrtyler , do you know if amatas has put a copy of the filebeat config somewhere on the internet?
2017-07-31T17:32:33 <stegru> doesn\'t matter, I think I found it on GPII-2346
2017-07-31T17:32:40 * Jess_ joined the channel
2017-07-31T17:38:26 * alanharnum joined the channel
2017-07-31T17:42:07 * javjarfer_ joined the channel
2017-07-31T17:44:46 * javjarfer has quit
2017-07-31T18:05:16 <mrtyler> stegru: sorry idk
2017-07-31T18:09:29 * alanharnum joined the channel
2017-07-31T18:21:15 * simonjb joined the channel
2017-07-31T18:30:14 * cindyli joined the channel
2017-07-31T18:46:20 * javjarfer_ has quit
2017-07-31T18:55:47 * stegru has quit
2017-07-31T19:40:33 * stegru joined the channel
2017-07-31T19:55:59 * pratik_r has left the channel
2017-07-31T20:39:06 * jhung has quit
2017-07-31T21:24:36 * gmoss joined the channel
2017-07-31T21:35:14 * amatas has quit
2017-07-31T21:55:15 * stegru has quit
2017-07-31T22:24:35 <colinclark> hey gmoss
2017-07-31T22:24:50 <colinclark> Do you have a link to the wireframes that you and alanharnum are working on implementing currently?
2017-07-31T22:24:59 <gmoss> sure, gimme one sec, colinclark
2017-07-31T22:25:04 <colinclark> Thanks!
2017-07-31T22:25:19 <colinclark> I\'m just working on this page: https://wiki.fluidproject.org/display/fluid/SJRK+Web+Storytelling+Tools
2017-07-31T22:26:07 <gmoss> I believe this is the latest from Dana: https://files.inclusivedesign.ca/index.php/s/K1ya8ka55anA7pc
2017-07-31T22:26:16 <colinclark> Awesome, thank you
2017-07-31T22:26:20 <colinclark> I\'ll put a link to it on this page
2017-07-31T22:26:34 <gmoss> yw!
2017-07-31T23:09:01 * colinclark has quit
2017-07-31T23:22:06 * avtar has quit
'

b'2017-07-31T02:03:43 * [o__o] joined the channel
2017-07-31T02:10:00 * [o__o] joined the channel
2017-07-31T03:51:34 * deep-book-gk joined the channel
2017-07-31T03:53:58 * deep-book-gk has left the channel
2017-07-31T05:22:44 * the-t-in-rtf joined the channel
2017-07-31T06:03:41 * sirdancealot joined the channel
2017-07-31T07:15:50 * the-t-in-rtf joined the channel
2017-07-31T09:13:55 <the-t-in-rtf> @Bosmon (and anyone else interested), I refined my speed tests and infusion i18n demo and updated the writeup: https://wiki.gpii.net/w/Technology_Evaluation_-_Internationalising_and_Localising_UI_strings
2017-07-31T09:14:12 <the-t-in-rtf> Where previously it was a tossup, currently the Infusion-based approach is considerably faster.
2017-07-31T09:14:39 <the-t-in-rtf> Anyway, we can discuss in the architecture meeting, just mentioning it for anyone who read it last week.
2017-07-31T09:15:25 * stegru joined the channel
2017-07-31T09:35:02 * the-t-in-rtf joined the channel
2017-07-31T09:38:03 * amatas joined the channel
2017-07-31T09:49:25 <Bosmon> the-t-in-rtf - thanks for the investigation
2017-07-31T09:49:35 <Bosmon> Especially the point that the period restriction is actually in the templater
2017-07-31T09:49:49 <Bosmon> I think this will be a fault in that code written by a student a few years ago
2017-07-31T09:50:25 <Bosmon> Which was always of pretty dubious value
2017-07-31T09:50:36 <Bosmon> https://github.com/fluid-project/infusion/blob/master/src/framework/core/js/Fluid.js#L2822
2017-07-31T09:50:42 <Bosmon> This might be a great opportunity to get rid of it
2017-07-31T09:51:42 <the-t-in-rtf> It\'s literally the only feature I would miss from i18next, and yes, it\'s the right time to look at it.
2017-07-31T09:53:11 <the-t-in-rtf> I\'ll review the link, thanks.
2017-07-31T09:58:40 <the-t-in-rtf> I wish the fluid.stringToRegexp function was marked as non-API, but as it\'s not in the docs, we can probably deprecate it, or at least replace it for one release with something that calls fluid.fail.
2017-07-31T10:02:16 <the-t-in-rtf> @Bosmon, is there already a canonical regexp for EL Paths? http://docs.fluidproject.org/infusion/development/FrameworkConcepts.html#el-paths
2017-07-31T10:03:08 <Bosmon> the-t-in-rtf - there isn\'t, since we currently always delimit them with } where they are interpolated, which is very rarely
2017-07-31T10:04:00 <Bosmon> I think there are enough non-API functions not marked with the comment in Fluid.js that we could just axe fluid.stringToRegexp immediately
2017-07-31T10:04:16 <the-t-in-rtf> Sounds good.
2017-07-31T10:05:30 <the-t-in-rtf> So, if we add support for deep paths, working from longest to shortest gets a bit funnier, i.e. if "deep.path" isn\'t matched, we might not necessarily want to fail over to "deep".
2017-07-31T10:05:57 <Bosmon> Yes, I see
2017-07-31T10:06:55 <the-t-in-rtf> I\'m thinking of any non-percent valid character, and then splitting by dots
2017-07-31T10:07:09 <the-t-in-rtf> although even that is problematic
2017-07-31T10:07:22 <the-t-in-rtf> Anyway, I will write up a ticket with requirements and we can hash it out with code examples there.
2017-07-31T10:07:24 <Bosmon> It would represent a subtle change of meaning that could trip up a lot of existing users of the API
2017-07-31T10:07:57 <the-t-in-rtf> Yes, although I\'d hope that %variables used in a sentence would only rarely end up corresponding to alternate material.
2017-07-31T10:08:18 <Bosmon> We really *should* have a delimiter model for this interpolation
2017-07-31T10:08:32 <Bosmon> It was only laziness in figuring out the relevant regexps that meant that we didn\'t
2017-07-31T10:09:01 <Bosmon> The current model is, frankly, nuts, in that the interpolated result could only be determined by looking at the complete term list
2017-07-31T10:09:03 <the-t-in-rtf> A closing delimiter would be helpful, but I guess that ship has sailed.
2017-07-31T10:09:13 <the-t-in-rtf> or is too large a change to consider.
2017-07-31T10:11:08 <the-t-in-rtf> Just thinking we could adapt the previous strategy a bit and conditionally expand a matched term.
2017-07-31T10:11:52 <the-t-in-rtf> So, with %deep.path.to.material, the variable content would have to contain "deep" as a top-level key for us to even attempt substitution
2017-07-31T10:12:15 <Bosmon> Yes
2017-07-31T10:12:21 <Bosmon> It doesn\'t seem like a strong risk
2017-07-31T10:12:33 <Bosmon> Since in practice we have already "de-modelised" the term map
2017-07-31T10:12:47 <Bosmon> We could even have a validation check that ensures that this is not the case
2017-07-31T10:15:03 <the-t-in-rtf> What about assuming that deep paths have to be enclosed in a secondary delimiter?
2017-07-31T10:15:10 <Bosmon> !
2017-07-31T10:15:13 <the-t-in-rtf> Like %"deep.path" or %{deep.path}
2017-07-31T10:15:36 <the-t-in-rtf> and that %plain is not a deep path.
2017-07-31T10:16:08 <the-t-in-rtf> i.e. we can use a modified form of the previous approach for anything that uses the current syntax
2017-07-31T10:16:10 <Bosmon> Seems like a piece of alarming documentation tax imposed on a very wide community
2017-07-31T10:16:35 <Bosmon> How people curse systems that say "It works like this, except in this case"
2017-07-31T10:16:45 <Bosmon> You yourself have cursed existing aspects of the framework that are like this : P
2017-07-31T10:16:51 <the-t-in-rtf> maybe you could expand on "acceptable delimeter model"?
2017-07-31T10:17:20 <Bosmon> I dunno, I doubt there is one that represents an acceptable API change
2017-07-31T10:17:46 <Bosmon> We could consider implementing a "green fields" templater in parallel, or even adopting *splutter* ES6 templating
2017-07-31T10:18:37 <the-t-in-rtf> Not sure I\'d go as far as ES6, but a "next gen" function is a good pattern.
2017-07-31T10:19:00 <Bosmon> We could then gradually migrate users over to the new templater, as we have done with many API changes
2017-07-31T10:19:06 <the-t-in-rtf> yes, exactly.
2017-07-31T10:19:07 <Bosmon> E.g. the way we axed the old "ChangeApplier"
2017-07-31T10:20:21 <the-t-in-rtf> OK, for the writeup, what delimiter model makes sense to you for the "green fields" function?
2017-07-31T10:21:18 <Bosmon> Perhaps \\w plus a few things like .
2017-07-31T10:21:38 <Bosmon> It\'s a shame that regexps are so culturally biased
2017-07-31T10:22:36 <Bosmon> It looks like there is a Unicode-based \\p assertion in new engines
2017-07-31T10:22:42 <Bosmon> But as usual it has not made its way to JavaScript
2017-07-31T10:23:34 <Bosmon> http://www.regular-expressions.info/unicode.html
2017-07-31T10:24:35 <Bosmon> \\p{InMongolian}: U+1800\xe2\x80\x93U+18AF
2017-07-31T10:29:59 <the-t-in-rtf> Just looking through the tests, are there unicode tests for fluid.get itself?
2017-07-31T10:30:18 <Bosmon> None
2017-07-31T10:30:26 <Bosmon> But all it does is split on "."
2017-07-31T10:30:31 <the-t-in-rtf> In my reading it seems like unicode in keys is usually accessed using square brackets.
2017-07-31T10:30:53 <Bosmon> Can you point me to some examples?
2017-07-31T10:30:58 <the-t-in-rtf> yup, just a sec.
2017-07-31T10:33:44 <the-t-in-rtf> Check this thing out: https://mathiasbynens.be/notes/javascript-properties
2017-07-31T10:33:55 <the-t-in-rtf> you plug in a string that you want to use as a key, it tells you what\'s up.
2017-07-31T10:34:24 <Bosmon> wow
2017-07-31T10:34:44 <Bosmon> Well, let\'s go for something like [\\w\\.] for now :)
2017-07-31T10:35:35 <the-t-in-rtf> yes, I think that and a note about unicode support would be adequate
2017-07-31T10:36:40 <the-t-in-rtf> I tried that with korean and a few others, it seems like spaces are more of a problem than unicode characters, and fluid.get already supports lookups  like "deep.path to content"
2017-07-31T10:37:03 <the-t-in-rtf> where { deep: { "path to content": true }} is the object, for example
2017-07-31T10:38:23 <the-t-in-rtf> so it seems like we\'d need to either add space to that list or have another means of accessing keys with a space in them
2017-07-31T10:39:24 <the-t-in-rtf> fluid.get({ deep: { "path to content": "is just fine"}}, "deep.path to content");
2017-07-31T10:39:24 <the-t-in-rtf> "is just fine"
2017-07-31T10:39:27 <Bosmon> Do we really want to access keys with a space in them?
2017-07-31T10:39:36 <Bosmon> I\'m not sure I see it widely done
2017-07-31T10:40:20 <the-t-in-rtf> If there\'s a mismatch between what you can use with fluid.get and what you can use with deep paths in a string template variable, we need to at least explain the limit in a sane way.
2017-07-31T10:40:41 <the-t-in-rtf> I agree that disallowing spaces in string template variable paths simplifies things
2017-07-31T10:41:35 <the-t-in-rtf> I\'m happy with an "although the underlying fluid.get method supports spaces in keys, blah blah blah" kind of warning in the docs for the new function.
2017-07-31T10:42:02 <the-t-in-rtf> JSDocs seems fine for this, as only people arm-deep in the code are likely to care.
2017-07-31T10:42:25 <the-t-in-rtf> OK, afk for a minute, time to get a bite to eat.
2017-07-31T10:44:08 <Bosmon> ok
2017-07-31T10:44:18 <Bosmon> I\'m increasingly inclining to just using the existing algorithm
2017-07-31T10:44:32 <Bosmon> I think I even remember a few cases where it "just did what people wanted"
2017-07-31T10:44:37 <Bosmon> Perhaps the people don\'t want delimiters
2017-07-31T10:46:07 <stegru> what version of english are we using to name things, in code?
2017-07-31T10:46:16 <Bosmon> !
2017-07-31T10:46:27 <Bosmon> Warrington English?
2017-07-31T10:46:42 <stegru> ok!
2017-07-31T10:47:02 <stegru> i\'ll keep it to 2 syllables
2017-07-31T10:47:44 <stegru> I want to call something "localisation", but i\'m not sure which localization to use
2017-07-31T10:49:15 <Bosmon> Oh I see
2017-07-31T11:35:14 <the-t-in-rtf> @bosmon, we should discuss with the group, I feel pretty strongly that not having access to deep paths in string templates is more an accident than a design choice.
2017-07-31T11:35:41 <the-t-in-rtf> people who are used to working even with our own transformation system would be quite accustomed to being able to use deep paths to whatever material they want.
2017-07-31T11:36:03 <the-t-in-rtf> Ditto for anyone used to using handlebars.
2017-07-31T11:48:27 <the-t-in-rtf> Anyway, I was hoping to push the UNC-safe infusion through "the stack", but I see that there\'s still no new node-jqunit, kettle, et cetera.
2017-07-31T11:48:36 <the-t-in-rtf> @Bosmon, is that not needed this go around?
2017-07-31T11:51:50 <Bosmon> the-t-in-rtf - I meant, the current algorithm with its faulty regexp corrected
2017-07-31T11:52:06 <the-t-in-rtf> Ah.
2017-07-31T11:52:16 <Bosmon> the-t-in-rtf - the push-through doesn\'t seem to be urgent this time since I found universal worked without it
2017-07-31T11:52:21 <Bosmon> But I\'ll roll a new kettle today
2017-07-31T11:52:35 <Bosmon> I don\'t think a new node-jqunit will be necessary
2017-07-31T11:53:12 <the-t-in-rtf> I guess I\'m unlikely to encounter problems in my own work, as I test on V:, I\'m mainly concerned that it would break a dependent package.
2017-07-31T11:53:21 <the-t-in-rtf> The fact that universal works is a good sign.
2017-07-31T11:53:28 <the-t-in-rtf> i.e. you didn\'t update gpii-pouchdb
2017-07-31T11:53:51 <the-t-in-rtf> In fact I\'m wondering why I\'d need to push an update through at all.
2017-07-31T11:54:26 <the-t-in-rtf> My tests pass and the duff versions of infusion I pull in won\'t break anything for a package that depends on my work.
2017-07-31T11:54:29 <the-t-in-rtf> Or am I wrong?
2017-07-31T11:55:01 <the-t-in-rtf> @bosmon ^^^
2017-07-31T11:55:16 <the-t-in-rtf> or is that what you meant by the push through not being urgen?
2017-07-31T11:55:32 <the-t-in-rtf> so non-urgent that we can just wait until we need to make other changes?
2017-07-31T12:13:48 * simonjb joined the channel
2017-07-31T12:18:32 * Justin_o joined the channel
2017-07-31T12:33:19 * cindyli joined the channel
2017-07-31T12:39:19 * gtirloni joined the channel
2017-07-31T12:46:53 <Bosmon> the-t-in-rtf - you are right
2017-07-31T12:47:17 <Bosmon> The issue only affects configurations like the universal box which mount a symlink, and then only the process of interpolated resolution
2017-07-31T12:48:01 <Bosmon> At least, that is what I blieve
2017-07-31T12:48:04 <Bosmon> Hey there gtirloni!
2017-07-31T12:54:15 <Justin_o> Bosmon: could you please take  a look at this PR i made over the weekend https://github.com/fluid-project/infusion/pull/838
2017-07-31T12:54:36 <Bosmon> If you look at it you will see my comment there :)
2017-07-31T12:54:40 <Bosmon> Also on the original JIRA
2017-07-31T12:54:50 <Justin_o> Bosmon: excellent thanks.. :)
2017-07-31T12:57:27 <gtirloni> Bosmon: hey!
2017-07-31T12:57:36 <Bosmon> I hope you had a great holiday :)
2017-07-31T12:57:41 <Justin_o> Bosmon: also thanks for merging the FLUID-6172 docs PR
2017-07-31T12:57:42 <gtirloni> thanks :)
2017-07-31T12:57:50 * Jess_ joined the channel
2017-07-31T12:58:50 <Bosmon> gtirloni - I wonder if when you had a moment you could stress-test this pull: https://github.com/GPII/universal/pull/531
2017-07-31T12:59:05 <Bosmon> Which I am imagining will fix our intermittent test failures
2017-07-31T12:59:25 <gtirloni> certainly, I can test it today
2017-07-31T13:00:14 <Bosmon> gtirloni - awesome!
2017-07-31T13:00:19 <Bosmon> Have you been anywhere interesting?
2017-07-31T13:02:06 <gtirloni> hehe, not this time. we just stayed here and caught up with visiting some relatives, going to the movies, etc.. it was a stay-at-home kind of vacation :)
2017-07-31T13:05:00 <Bosmon> Well, that\'s good
2017-07-31T13:05:06 <Bosmon> MarenGA is exotic enough anyway :)
2017-07-31T13:05:14 <gtirloni> hahaha
2017-07-31T13:10:34 * colinclark joined the channel
2017-07-31T13:15:40 * clown joined the channel
2017-07-31T13:17:53 * jhung joined the channel
2017-07-31T13:25:45 * alanharnum joined the channel
2017-07-31T13:27:31 * simonjb joined the channel
'


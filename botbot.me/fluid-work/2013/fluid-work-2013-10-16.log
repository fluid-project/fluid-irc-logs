b'2013-10-16T20:38:00 * thealphanerd has quit
2013-10-16T20:38:28 * thealphanerd joined the channel
2013-10-16T20:41:51 * cindyli has quit
2013-10-16T20:43:46 * greggy has quit
2013-10-16T20:43:58 * anvk has quit
2013-10-16T20:46:14 * thealphanerd has quit
2013-10-16T20:54:51 * yzen_ joined the channel
2013-10-16T20:56:07 * yzen has quit
2013-10-16T20:56:07 * yzen_ is now known as yzen
2013-10-16T21:08:54 * mrvisser_ has quit
2013-10-16T21:09:00 * mrvisser joined the channel
2013-10-16T21:15:19 * clown has left the channel
2013-10-16T21:15:47 * michelled has quit
2013-10-16T21:37:47 * anastasiac has quit
2013-10-16T21:40:22 * mrvisser_ joined the channel
2013-10-16T21:40:27 * mrvisser has quit
2013-10-16T21:47:44 * mrvisser_ has quit
2013-10-16T21:51:44 * yzen has quit
2013-10-16T21:52:09 * yzen_ joined the channel
2013-10-16T21:55:42 * yzen_ has quit
2013-10-16T22:00:38 * kasparnet has quit
2013-10-16T22:26:23 * thealphanerd joined the channel
2013-10-16T22:58:17 * mrvisser joined the channel
2013-10-16T23:05:18 * mrvisser has quit
2013-10-16T23:08:41 * vjoanna has quit
2013-10-16T23:28:02 * jessm has quit
2013-10-16T23:48:24 * thealphanerd has quit
2013-10-16T23:51:07 * thealphanerd joined the channel
2013-10-16T23:55:08 * colinclark joined the channel
'

b'2013-10-16T06:42:03 <Bosmon> But this will involve fluid.require understanding parts of the npm packaging structure
2013-10-16T06:43:42 <colinclark> yes
2013-10-16T06:45:20 <Bosmon> So this reading of the magic text means that we no longer have a good explanation of why yzen is able to get away with the two copies of infusion we have in gpii/kettle
2013-10-16T06:45:33 <Bosmon> Since it implies that the level of protection occurs during installation, rather than during resolution
2013-10-16T06:46:26 * yzen has quit
2013-10-16T06:46:35 <Bosmon> slacker : P
2013-10-16T06:46:46 <Bosmon> Why are you not working at 2.39am ....
2013-10-16T06:48:42 <colinclark> lol
2013-10-16T06:48:43 <colinclark> yes
2013-10-16T06:49:09 <colinclark> I need to pass out myself
2013-10-16T06:49:19 <Bosmon> Although one slacker we SHOULD expect to see at this time is that damnable ***KASPPARNETT***
2013-10-16T06:49:22 <colinclark> I think I\'m getting a Node Buffer object chewed up by the expansion system
2013-10-16T06:49:43 <Bosmon> Oh dear.... have you tried the fluid.isPlainObject test on it to see what it says?
2013-10-16T06:49:55 <colinclark> just testing that now
2013-10-16T06:50:02 <Bosmon> If it is wrong, at least you now have an easier place to monkey-patch :)
2013-10-16T06:50:44 <colinclark> isPlainObject reports true for it, yes
2013-10-16T06:50:51 <Bosmon> Ouch..... SIR
2013-10-16T06:51:07 <colinclark> easy fix as you say
2013-10-16T06:51:09 <colinclark> for the morning!
2013-10-16T06:51:18 <Bosmon> After we release 1.5 we can ditch support for IE8 I believe
2013-10-16T06:51:26 <Bosmon> Which means that we can go ahead with a more stringent test
2013-10-16T06:51:29 <colinclark> that would be awfully nice
2013-10-16T06:51:33 <colinclark> though we still have the XP issue
2013-10-16T06:51:37 <Bosmon> Yes
2013-10-16T06:51:46 <Bosmon> It seems Microsoft themselves will ditch that lot in April
2013-10-16T06:51:55 <colinclark> then perhaps it\'s time
2013-10-16T06:51:57 <Bosmon> Even though I am still quite fond of XP myself.....
2013-10-16T06:52:06 <colinclark> aren\'t we all, yes
2013-10-16T06:52:29 <Bosmon> Millions of our users may be too
2013-10-16T06:52:41 <Bosmon> But I guess none of them would expect any a11y features on using IE8 anyway
2013-10-16T06:54:00 <colinclark> ARIA support wasn\'t great
2013-10-16T06:54:15 <colinclark> though there are still a lot of users
2013-10-16T06:54:29 <colinclark> since upgrades tend to be slower when AT is involved in the mix
2013-10-16T06:55:17 <Bosmon> If push comes to shove, we could always have the framework monkey-patch isPlainObject by itself, using a browser detect
2013-10-16T06:55:35 <colinclark> ok, my two udp-chattering robot buddies are shut down
2013-10-16T06:55:40 <Bosmon> The awful issue is that IE8 and below will throw an exception when accessing the prototype or constructor properties of a "host object"
2013-10-16T06:55:47 <colinclark> insane
2013-10-16T06:56:06 <Bosmon> And, despite a JSfiddle to the contrary, having a try/catch block in this very innermost part of the framework would be completely unacceptable performance-wise
2013-10-16T06:56:25 <Bosmon> Although I guess we could try getting the JSfiddle working properly, I didn\'t spend too much time with it
2013-10-16T06:57:09 <colinclark> remind me what the nature of the performance impact with try/catch blocks is?
2013-10-16T06:57:22 <Bosmon> It causes the VM to "deoptimise" the function containing them
2013-10-16T06:57:25 <colinclark> ouch
2013-10-16T06:57:38 <colinclark> both *Monkey and V8?
2013-10-16T06:58:10 <Bosmon> Unknown.... we would have to "fiddle" that too : P Although testing performance on these micro-operations is always extremely fraught
2013-10-16T06:58:30 <Bosmon> We really need a performance benchmark which assesses the performance of the framework as a whole on a sizeable task
2013-10-16T06:58:43 <Bosmon> But that would reveal a number of other more serious problems
2013-10-16T06:58:58 <Bosmon> I\'m not sure that actually a "constructor" or "prototype"-based detection can be performant either
2013-10-16T06:59:12 <Bosmon> Since if we require cross-frame resistance, it means calling "toString" on them
2013-10-16T06:59:18 <Bosmon> Which can result in truly huge representations
2013-10-16T06:59:48 <Bosmon> The great thing about the Object.prototype.toString test was that it only ever produces short and standard strings like [object Object] which can certainly be generated performantly
2013-10-16T07:02:56 <Bosmon> https://github.com/jashkenas/underscore/pull/102
2013-10-16T07:03:01 <Bosmon> Endless discussion on _ here
2013-10-16T07:10:02 * colinclark has quit
2013-10-16T07:41:20 * thealphanerd has quit
2013-10-16T08:00:24 * kasparnet joined the channel
2013-10-16T08:57:02 * kasparnet has quit
2013-10-16T08:57:37 * kasparnet joined the channel
2013-10-16T09:02:13 * kasparnet has quit
2013-10-16T09:09:58 * kasparnet joined the channel
2013-10-16T09:10:25 * kasparnet has quit
2013-10-16T09:11:01 * kasparnet joined the channel
2013-10-16T09:15:53 * kasparnet has quit
2013-10-16T09:16:00 * kasparnet joined the channel
2013-10-16T10:46:23 * mrvisser joined the channel
2013-10-16T11:37:19 * mrvisser_ joined the channel
2013-10-16T11:37:35 * mrvisser has quit
2013-10-16T11:37:38 * jhung joined the channel
2013-10-16T12:27:21 * mrvisser_ has quit
2013-10-16T12:33:29 * anvk joined the channel
2013-10-16T12:47:35 * mrvisser joined the channel
2013-10-16T12:48:07 * kasparnet has quit
2013-10-16T12:48:39 * kasparnet joined the channel
2013-10-16T12:53:11 * kasparnet has quit
2013-10-16T12:55:30 * kasparnet joined the channel
2013-10-16T12:56:04 * michelled joined the channel
2013-10-16T13:06:36 * cindyli joined the channel
2013-10-16T13:08:33 * colinclark joined the channel
2013-10-16T13:11:43 * greggy joined the channel
2013-10-16T13:12:35 * jessm joined the channel
2013-10-16T13:16:10 * kasparne_ joined the channel
2013-10-16T13:16:10 * kasparnet has quit
2013-10-16T13:30:00 * amilchev joined the channel
2013-10-16T13:30:55 * yzen joined the channel
2013-10-16T13:39:03 * clown joined the channel
2013-10-16T13:47:12 * anastasiac joined the channel
2013-10-16T14:16:47 * vjoanna joined the channel
2013-10-16T14:53:26 <michelled> Justin_o, cindyli, yzen: do you think it\'s possible to arrange for a pull request of the most recent prefs framework into the gpii repo?
2013-10-16T14:53:41 <michelled> sorry, I mean the exploration tool
2013-10-16T14:53:51 <michelled> the nightly for gpii is still showing the discovery tool
2013-10-16T14:54:04 <michelled> and I\'d rather not send links around that will be obsolete very soon
2013-10-16T15:04:52 * amilchev has left the channel
2013-10-16T15:18:49 <Justin_o> michelled: sure... we could do that
2013-10-16T15:19:30 <michelled> thanks Justin_o
2013-10-16T15:20:46 <Justin_o> michelled: https://github.com/GPII/prefsEditors/pull/8
2013-10-16T15:21:01 <michelled> cool - yzen can you review it?
2013-10-16T15:21:22 <yzen> michelled: sure ill try to get to it today
2013-10-16T15:21:50 <michelled> great!
2013-10-16T15:29:59 * avtar joined the channel
2013-10-16T15:57:31 * avtar has quit
2013-10-16T17:40:30 * cindyli has quit
2013-10-16T18:02:22 * michelled has quit
2013-10-16T18:13:24 * mrvisser has quit
2013-10-16T18:17:16 * kasparne_ has quit
2013-10-16T18:25:58 * cindyli joined the channel
2013-10-16T18:28:00 * mrvisser joined the channel
2013-10-16T18:28:10 * yzen has quit
2013-10-16T18:32:19 <Justin_o> fluid-everyone: would anyone like to join the community meeting remotely. Today we will be doing another doc sprint.
2013-10-16T18:32:34 <Bosmon> Sure, Justin_o - I will need a few minutes first
2013-10-16T18:32:47 <anastasiac> Justin_o, yura just left, but he\'ll join once he\'s available again
2013-10-16T18:32:59 <Justin_o> Bosmon, anastasiac okay.. thanks
2013-10-16T18:33:03 * mrvisser has quit
2013-10-16T18:33:22 <Justin_o> Bosmon: by the way.. i ran into an issue with the message resolver stuff.. if you have a couple minutes to chat with me about that, it would be helpful
2013-10-16T18:33:39 <Justin_o> Bosmon: i left a comment on the jira about it http://issues.fluidproject.org/browse/FLUID-5180
2013-10-16T18:36:54 * mrvisser joined the channel
2013-10-16T18:43:12 * anastasiac has quit
2013-10-16T18:45:37 * jhung has quit
2013-10-16T18:48:13 * yzen joined the channel
2013-10-16T18:48:30 * cindyli has quit
2013-10-16T18:49:00 * anastasiac joined the channel
2013-10-16T18:49:13 * cindyli joined the channel
2013-10-16T18:49:23 <anastasiac> fluid-everyone: Planning page for today\'s Docs Sprint: http://wiki.fluidproject.org/display/fluid/Docs+Sprint+Planning
2013-10-16T18:50:31 <anastasiac> jessm, vjoanna, clown: we have some apple cider donuts and girl guide cookies here in the collar room; feel free to come help yourself (we have too many!)
2013-10-16T18:54:23 <Justin_o> anastasiac: http://wiki.gpii.net/index.php/Architecture_-_Available_transformation_functions
2013-10-16T19:00:10 * kasparnet joined the channel
2013-10-16T19:06:51 * michelled joined the channel
2013-10-16T19:09:45 * anastasiac has quit
2013-10-16T19:10:04 * anastasiac joined the channel
2013-10-16T19:11:27 <Bosmon> Justin_o - is the meeting running now?
2013-10-16T19:14:26 * thealphanerd joined the channel
2013-10-16T19:15:51 <Bosmon> Hi anastasiac
2013-10-16T19:16:05 <anastasiac> hi, Bosmon, are you available for the docs sprint now?
2013-10-16T19:16:11 <Bosmon> yes
2013-10-16T19:25:11 * thealphanerd has quit
2013-10-16T19:35:53 <anastasiac> http://wiki.fluidproject.org/display/fluid/Docs+Sprint+Planning
2013-10-16T19:43:28 * kasparnet has quit
2013-10-16T19:53:16 * kasparnet joined the channel
2013-10-16T19:58:35 * colinclark has quit
2013-10-16T19:59:27 * colinclark joined the channel
2013-10-16T20:12:00 * anastasiac has quit
2013-10-16T20:12:16 <Justin_o> Bosmon: did you have a chance to look at the issue i\'m having with FLUID-5180
2013-10-16T20:12:19 <Justin_o> ?
2013-10-16T20:14:17 * anastasiac joined the channel
2013-10-16T20:14:19 <Bosmon> Justin_o - yes, I have commented on the JIRA
2013-10-16T20:15:33 <Justin_o> great thanks.
2013-10-16T20:17:54 * kasparnet has quit
2013-10-16T20:28:18 * thealphanerd joined the channel
2013-10-16T20:30:52 * colinclark has quit
2013-10-16T20:33:16 * mrvisser_ joined the channel
2013-10-16T20:33:23 * mrvisser has quit
2013-10-16T20:34:43 * kasparnet joined the channel
'

b'2013-10-16T00:23:57 * mrvisser has quit
2013-10-16T01:35:06 * mrvisser joined the channel
2013-10-16T01:42:04 * mrvisser has quit
2013-10-16T01:58:50 * michelled joined the channel
2013-10-16T02:04:16 * michelled has quit
2013-10-16T03:44:20 * yzen joined the channel
2013-10-16T04:30:50 * sgithens has quit
2013-10-16T04:51:07 * colinclark joined the channel
2013-10-16T04:51:38 <colinclark> yzen: zomg
2013-10-16T04:52:06 <yzen> colinclark: hey
2013-10-16T04:52:15 <colinclark> fucking node.js
2013-10-16T04:53:28 <colinclark> A line like this has cost me a couple hours of debugging time: https://github.com/fluid-project/kettle/blob/master/kettle.js#L26
2013-10-16T04:54:08 <colinclark> not that line, in particular, but one like it
2013-10-16T04:54:28 <yzen> hm, how come?
2013-10-16T04:55:03 <colinclark> Well, it\'s interesting
2013-10-16T04:55:24 <colinclark> So, I have a module and an app
2013-10-16T04:55:35 <colinclark> The module is called node-flocking, and it is a "Node wrapper" around Flocking
2013-10-16T04:55:41 <colinclark> which of course depends on Infusion
2013-10-16T04:56:11 <colinclark> The application is a Node.js that uses node-flocking
2013-10-16T04:56:20 <colinclark> of course, it too uses Infusion
2013-10-16T04:56:37 <colinclark> Today, I thought, "I should make Flocking a proper Node module"
2013-10-16T04:56:53 <colinclark> and so I did something like this: https://github.com/colinbdclark/node-flocking/blob/master/index.js#L13
2013-10-16T04:57:16 <colinclark> So, node-flocking has its own copy of Infusion
2013-10-16T04:57:23 <colinclark> and then my app, in turn, has its copy of Infusion
2013-10-16T04:57:38 <colinclark> The thing is, they\'re separate instances of Infusion
2013-10-16T04:58:14 <colinclark> thus the result of require("fluid") in node-flocking is different from the same line in my app
2013-10-16T04:58:19 <yzen> colinclark: ya i was a bit worried about it some time ago but then convinced myself that as long as the commit aha of my infusions is in sync in kettle and universal I\'m  ok
2013-10-16T04:58:35 <colinclark> It\'s worse than that
2013-10-16T04:58:51 <colinclark> So IoC in my app can\'t see references to "flock"
2013-10-16T04:59:37 <colinclark> because the instance of fluid in the app, including its "global namespace," is isolated from that in node-flocking
2013-10-16T04:59:52 <colinclark> or this Bosmon\'s theory, anyway
2013-10-16T05:00:06 <colinclark> it\'s essentially impossible to actually make the two worlds meet directly, I think
2013-10-16T05:00:16 <Bosmon> For reference here is the only lore I have found on this issue: http://justjs.com/posts/singletons-in-node-js-modules-cannot-be-trusted-or-why-you-can-t-just-do-var-foo-require-baz-init
2013-10-16T05:00:47 <Bosmon> "If your main project also requires "shared," and that copy is installed with npm first before either one or two is installed with npm, and they depend on the same version, then npm will be clever and install the module only once at the main project\'s level, allowing the require statements in one/index.js and two/index.js to search upwards in the tree until they find the same file and return
2013-10-16T05:00:47 <Bosmon> the same object."
2013-10-16T05:01:05 <Bosmon> It seems very chancy
2013-10-16T05:01:36 <yzen> oh ya that too, i think only 1 will be installed
2013-10-16T05:01:50 <yzen> so recursively if she\'s match it will be the top level infusion
2013-10-16T05:03:37 <colinclark> certainly npm hasn\'t done this in my case
2013-10-16T05:03:45 <colinclark> though that may well be due to incompetence on my part
2013-10-16T05:04:34 <colinclark> I guess I could blast the deeper copy of Infusion and see if it has any impact
2013-10-16T05:04:45 <yzen> i would try that yes
2013-10-16T05:09:16 <colinclark> is it possible that npm refrains from the kind of "cleverness" described above in cases where the dependency is expressed as a git url?
2013-10-16T05:10:05 <colinclark> AHA
2013-10-16T05:10:23 <colinclark> no
2013-10-16T05:10:26 <colinclark> :)
2013-10-16T05:11:42 <Bosmon> colinclark - what have you discovered?
2013-10-16T05:12:01 <colinclark> well, I seem to have moved on to a more interesting error
2013-10-16T05:12:18 <Bosmon> I think it is unavoidable that we would have run into this issue with kettle/GPII had it not been the case that npm actually somehow believes in the SHA at the end of a git url
2013-10-16T05:12:32 <colinclark> though fluid.require("flock") and fluid.registerNamespace("flock") are still claiming to be different objects
2013-10-16T05:12:52 <Bosmon> Since all the clients of universal make use of universal\'s infusion
2013-10-16T05:13:02 <Bosmon> Whereas all the configuration is loaded via kettle\'s infusion
2013-10-16T05:13:35 <colinclark> interesting
2013-10-16T05:13:53 <Bosmon> As far as I can see, it would be a recipe for "instant mayhem"
2013-10-16T05:14:28 <colinclark> ok, it\'s making sound!
2013-10-16T05:14:36 <colinclark> slightly jankily
2013-10-16T05:14:38 <Bosmon> wow!
2013-10-16T05:14:41 <Bosmon> What did you do?
2013-10-16T05:14:55 <colinclark> I hosed the inner copy of Infusion
2013-10-16T05:15:02 <colinclark> which doesn\'t really help my users
2013-10-16T05:15:11 <Bosmon> cool
2013-10-16T05:15:16 <colinclark> I guess we have to figure out how npm allowed it to be there
2013-10-16T05:15:23 <Bosmon> So, yzen - I believe we can put a "guard" into the implementation of fluid.require
2013-10-16T05:15:27 <colinclark> I\'m also still worried about this...
2013-10-16T05:15:29 <colinclark> console.log("app: ", flock === fluid.getGlobalValue("flock"));
2013-10-16T05:15:33 <colinclark> still returns false
2013-10-16T05:15:50 <colinclark> where flock is defined by:
2013-10-16T05:15:51 <colinclark> flock = fluid.require("flocking"),
2013-10-16T05:16:03 <colinclark> can anyone explain that?
2013-10-16T05:16:14 <yzen> have you tried passing local require as the second arg?
2013-10-16T05:16:19 <Bosmon> No, I can\'t explain it
2013-10-16T05:16:36 <colinclark> yzen: No, I haven\'t
2013-10-16T05:16:43 <yzen> flock = fluid.require("flocking", require)
2013-10-16T05:16:49 <colinclark> I\'m not sure I understand when I should do that
2013-10-16T05:16:52 <colinclark> can you elaborate?
2013-10-16T05:17:00 <Bosmon> It shouldn\'t make any difference in this case
2013-10-16T05:17:15 <Bosmon> Either flocking is resolvable or it isn\'t.... I imagine it\'s impossible for you to have two copies of THAT
2013-10-16T05:17:30 <colinclark> passing the second argument doesn\'t help, no
2013-10-16T05:17:36 <colinclark> hmm
2013-10-16T05:17:41 <colinclark> I would hope there\'s only one, yes
2013-10-16T05:18:11 <Bosmon> You pass the 2nd argument when the module is only visible from your own directory level and not from infusion\'s
2013-10-16T05:18:24 <Bosmon> Since you now have infusion at the outer level, it should make no difference
2013-10-16T05:19:15 <Bosmon> So, colinclark, "how different" are the two versions of your "flock" object? : P
2013-10-16T05:19:32 <colinclark> I will check momentarily
2013-10-16T05:19:42 <Bosmon> There may be some subtleties about what module.exports actually does with an object reference it is sent
2013-10-16T05:19:54 <colinclark> you\'re wondering if they both resemble a full-featured instance of Flocking, I assume?
2013-10-16T05:19:58 <Bosmon> Yes, for example
2013-10-16T05:20:12 <colinclark> terrifying
2013-10-16T05:20:14 <Bosmon> And also, whether assigning a new property to one ends up surfacing the value in the other one
2013-10-16T05:20:25 <colinclark> ok
2013-10-16T05:20:31 <colinclark> the pi just rebooted
2013-10-16T05:20:32 <colinclark> let\'s see
2013-10-16T05:20:52 <Bosmon> Rather than sending around raw object references, node may arrange for one of them to be a proxy for the other in some kind of undercover way.....
2013-10-16T05:21:07 <Bosmon> Which might explain the inconsistent results you saw when checking for raw reference equality
2013-10-16T05:21:48 <Bosmon> Often in Firebug I use a system of "ticks", and constantly update a property in what should be one alias of an object with increasing "version numbers" until I either start or stop seeing the changes showing up in the other .......
2013-10-16T05:27:11 * scott_gonzalez has quit
2013-10-16T05:29:32 * scott_gonzalez joined the channel
2013-10-16T05:40:50 <colinclark> So I\'m embarrassed to say that the reason my two flocks weren\'t equal was because I had left my module.exports = flock line commented out :P
2013-10-16T05:41:05 <colinclark> they are now happily equal
2013-10-16T05:41:07 <colinclark> which I guess leaves the main two mysteries as:
2013-10-16T05:41:40 <colinclark> 1. Under what circumstances does npm\'s aforementioned cleverness not kick in?
2013-10-16T05:42:11 <colinclark> 2. How should users of a library like Flocking (or Universal, for that matter) handle this multi-tied dependency on Infusion
2013-10-16T05:42:31 <colinclark> aside from just manually deleting dependencies when npm has failed to do its job
2013-10-16T05:43:04 <Bosmon> I suggested our first line of defence would be to put a "guard" into our implementation of fluid.require
2013-10-16T05:43:14 <colinclark> yes
2013-10-16T05:43:18 <colinclark> that makes a lot of sense
2013-10-16T05:43:25 <Bosmon> Although this would not protect anyone who had not supplied the 2nd argument
2013-10-16T05:43:38 <Bosmon> It would at least protect current users of kettle
2013-10-16T05:44:44 <colinclark> I need to provision a fresh Pi now
2013-10-16T05:44:56 <colinclark> so we\'ll see if npm does the same thing in this case
2013-10-16T05:45:59 <Bosmon> Perhaps it can ONLY detect equal versions if the git SHA is supplied explicitly
2013-10-16T05:46:09 <Bosmon> Given, as we saw, it strips out all "gitliness" from the files it checks out
2013-10-16T05:46:41 <Bosmon> After all, if the files in the FS are all it has to go on, there can\'t be any "hidden magic"
2013-10-16T05:47:00 <Bosmon> So in fact anyone who points at "master" of a project could not be proved ever to have the same checkout as anyone else
2013-10-16T05:49:45 <Bosmon> yzen - what became of the "kettleModuleLoader.js" concept?
2013-10-16T05:51:04 <yzen> Bosmon: in what sense, it\'s in master for a while now
2013-10-16T05:51:18 <Bosmon> yzen - yes, but why can\'t I see any such files in our projects?
2013-10-16T05:51:42 <yzen> https://github.com/GPII/universal/blob/master/gpii/node_modules/deviceReporter/configs/kettleModuleLoader.js
2013-10-16T05:51:49 <yzen> for example ?
2013-10-16T05:52:21 <Bosmon> Ah of course, they go with the configs
2013-10-16T05:52:22 <Bosmon> Thanks
2013-10-16T05:52:41 <Bosmon> Ok, so we can\'t really rely on this for general 3rd-party protection ......
2013-10-16T05:53:31 <Bosmon> We really don\'t have any alternative but to construct our own module loader
2013-10-16T05:53:37 <Bosmon> We were planning this at Linz anyway
2013-10-16T05:55:11 <Bosmon> It\'s very unfortunate, since it\'s a big undertaking
2013-10-16T05:55:36 <Bosmon> We can at least protect all kettle users since we have control over its codebase
2013-10-16T05:55:54 <Bosmon> And, for example, can prove that it always uses the 2-arg fluid.require, etc.
2013-10-16T06:07:49 <colinclark> sounds like fun, yzen
2013-10-16T06:07:55 <colinclark> your own module loader
2013-10-16T06:32:40 <colinclark> for whatever reason, a fresh install of my app did not include a nested copy of Infusion
2013-10-16T06:32:52 <colinclark> perhaps I just did something dumb during the installation process
2013-10-16T06:37:14 <Bosmon> colinclark - don\'t both your app and flocking have an expressed npm dependency on infusion?
2013-10-16T06:37:28 <colinclark> yes, they both do
2013-10-16T06:37:43 <colinclark> this time, it seemed to be clever enough to not install the nested copy
2013-10-16T06:37:45 <Bosmon> So isn\'t it then proper for both of them to install infusion as a submodule when you run "npm install" on them?
2013-10-16T06:38:13 <colinclark> I ran an "npm install" on the app
2013-10-16T06:38:42 <colinclark> So I\'m assuming this did indeed occur:
2013-10-16T06:38:43 <colinclark> "npm will be clever and install the module only once at the main project\'s level, allowing the require statements in one/index.js and two/index.js to search upwards in the tree until they find the same file and return"
2013-10-16T06:38:49 <Bosmon> ah
2013-10-16T06:38:55 <Bosmon> Now we can understand this mystical text!
2013-10-16T06:39:05 <colinclark> yes
2013-10-16T06:39:07 <Bosmon> Will be clever and **INSTALL** the module only once, it says!
2013-10-16T06:39:10 <Bosmon> INSTALL!
2013-10-16T06:39:27 <colinclark> Were any changes pushed to Infusion in the past 24 hours or so?
2013-10-16T06:39:33 <Bosmon> So in fact having two physical copies of the same module ALWAYS spells certain doom
2013-10-16T06:40:00 <Bosmon> I\'m not aware of any
2013-10-16T06:40:06 <Bosmon> github shows no changes for 5 days
2013-10-16T06:40:31 <Bosmon> The initial version of the module loader need not be very sophisticated.... it could just run a directory scan and then issue full relative file paths to the standard "require"
2013-10-16T06:40:40 <Bosmon> But I think we should patch fluid.require to do this
2013-10-16T06:40:50 <Bosmon> As well as report on any duplicates of infusion found anywhere in the tree
'


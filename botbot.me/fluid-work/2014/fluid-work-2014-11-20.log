b'2014-11-20T22:28:38 * jhung joined the channel
2014-11-20T22:39:43 * anastasiac has quit
2014-11-20T22:48:29 * jessm has quit
2014-11-20T23:01:30 * kasparne_ has quit
2014-11-20T23:02:09 * avtar_ has quit
2014-11-20T23:06:37 * simonjb has quit
2014-11-20T23:06:54 * Justin_o has quit
2014-11-20T23:15:55 * kasparnet joined the channel
2014-11-20T23:18:34 * yzen joined the channel
2014-11-20T23:21:28 * yzen is now known as yzen_
2014-11-20T23:26:00 * yzen_ has quit
2014-11-20T23:26:26 * danaayotte has quit
'

b'2014-11-20T15:49:29 <Justin_o> could you explain the flow of that
2014-11-20T15:49:46 <Bosmon> Justin_o - it could arrange that all I/O is issued at one point - in the "resourceLoader" at the top of the component tree
2014-11-20T15:49:58 <Bosmon> Rather than it starting haphazardly in every individual component
2014-11-20T15:50:00 <Justin_o> i\'d also like to be able to handle the case where we have a UIEnhancer without a prefsEditor
2014-11-20T15:50:35 <Justin_o> Bosmon: so you mean it just notifies when it will do an operation on it\'s own
2014-11-20T15:50:45 <Justin_o> but the stack may not actually do anything with thiat
2014-11-20T15:50:45 <Justin_o> this
2014-11-20T15:50:49 <Justin_o> but it will be there if needed
2014-11-20T15:50:51 <Justin_o> is that the idea?
2014-11-20T15:51:11 <Bosmon> Justin_o - I think my idea doesn\'t really help us much now : P
2014-11-20T15:51:27 <Justin_o> Bosmon: :)  okay
2014-11-20T15:51:48 <Bosmon> You should feel ok to have each component do its I/O for now, so long as you coordinate properly with "onReady" events etc ...........
2014-11-20T15:51:52 <Justin_o> Bosmon: so the plan we had was to make the ToC enactor fetch it\'s own message bundle
2014-11-20T15:52:11 <Bosmon> Justin_o - yes well, this just raises the risks that I mentioned
2014-11-20T15:52:15 <Justin_o> Bosmon: okay.. i should be able to do that, and it should only be the ToC enactor for now
2014-11-20T15:52:28 <Bosmon> What happens if we receive a request for the enactor to do some work, and its bundle is not ready?
2014-11-20T15:52:49 <Bosmon> All of this "onReady"-ness just keeps cascading, creating more and more requirements for awareness amongst components
2014-11-20T15:53:07 <Bosmon> This is why I was more comfortable with a model where all I/O happens in a "big bang" and then everyone can initialise synchronously
2014-11-20T15:53:17 <Bosmon> It may be inefficient and clunky, but at least it is reliable
2014-11-20T15:54:56 <Justin_o> Bosmon: we could push the message loading up to the top of the UIEnhancer
2014-11-20T15:55:18 <Justin_o> it\'s just that only the ToC would use it for now
2014-11-20T15:55:22 <Bosmon> Justin_o - ok
2014-11-20T15:55:43 <Bosmon> This is also why I was keen for us to just establish a "generalised pattern" for this so that we didn\'t special-case it in each hierarchy
2014-11-20T15:55:47 <Justin_o> Bosmon: so in this case we\'d have messgeLoading for the panels, and a separate messageLoading for enactors
2014-11-20T15:55:56 <Bosmon> We would create a new grade entitled something like "resourceLoaderAware"
2014-11-20T15:56:08 <Bosmon> And then a grade which participates would have this standard event injected into it
2014-11-20T15:56:23 <Justin_o> which event
2014-11-20T15:56:28 <Bosmon> The top level resource loader would then fire the event on "onCreate" of the top-level tree
2014-11-20T15:56:31 <Bosmon> "onContributeResource"
2014-11-20T15:56:33 <Bosmon> "onContributeResources"
2014-11-20T15:56:52 <Bosmon> Then each component would contribute into the argument structure a list of what it wanted fetched
2014-11-20T15:57:17 <Bosmon> Once the event had finished firing, the top-level component (whatever it is) would then issue a request for all the I/O in a single bundle
2014-11-20T15:57:26 <Bosmon> And then when it arrived, would notify each of the requestors of the results
2014-11-20T15:57:37 <Justin_o> but that would have to happen before those components were actually created
2014-11-20T15:57:45 <Bosmon> Well, it couldn\'t...
2014-11-20T15:57:57 <Bosmon> Just as now, there would have to be a separate period between "onCreate" and "onReady"
2014-11-20T15:58:02 <Bosmon> Which is very similar to what we have now
2014-11-20T15:58:19 <Bosmon> The only advantage would be that the workflow would be more standardised, and there would be less coupling between the participants
2014-11-20T15:59:02 <Justin_o> Bosmon: i\'m a bit fuzzy on the whole process, but the idea sounds good.. however i think it might be out of scope for this fix
2014-11-20T15:59:12 <Justin_o> Bosmon: we are hoping to fix things for both 2.0 and 1.5.x lines
2014-11-20T15:59:26 <Justin_o> Bosmon: what do you think?
2014-11-20T16:01:29 <Justin_o> Bosmon: here\'s the jira i just filed http://issues.fluidproject.org/browse/FLUID-5567
2014-11-20T16:02:00 <Justin_o> there was a bug in ToC where it wasn\'t localizing the ToC Header
2014-11-20T16:02:37 <Justin_o> Bosmon: that was fairly straightforward to address, but it should be propagated to work in the prefs framework as well
2014-11-20T16:09:00 * kasparne_ has quit
2014-11-20T16:14:36 * colinclark has quit
2014-11-20T16:15:36 <cindyli> Justin_o: can you review my pull request for GPII-1014 - https://github.com/GPII/prefsEditors/pull/85
2014-11-20T16:17:37 <cindyli> Justin_o: let me know there are other things you want me to work on, otherwise, i will be starting on GPII-1016 - http://issues.gpii.net/browse/GPII-1016
2014-11-20T16:22:22 * kasparnet joined the channel
2014-11-20T16:23:36 * avtar_ joined the channel
2014-11-20T16:27:30 * jhung1 joined the channel
2014-11-20T16:28:50 <Justin_o> cindyli: there might be... let\'s check in after starndup
2014-11-20T16:28:52 <Justin_o> standup
2014-11-20T16:29:02 <cindyli> ok
2014-11-20T16:29:19 * jhung1 has quit
2014-11-20T16:30:06 * jhung has quit
2014-11-20T16:30:33 * jhung joined the channel
2014-11-20T16:31:15 * danaayotte has quit
2014-11-20T16:50:27 * michelled joined the channel
2014-11-20T16:55:05 * danaayotte joined the channel
2014-11-20T17:07:56 <jhernandez> kasparnet: hey, merged GPII-941 into my android fireball branch and I can\'t get tests with common terms running :/ (app-specific terms work with any problem)
2014-11-20T17:09:42 <jhernandez> besides updating the NP sets and android\'s solutions registry, is there anything else I can be missing? my tests were passing well with antranig\'s GPII-434
2014-11-20T17:11:17 <jhernandez> Bosmon: got it, now I have to leave, later I\'ll update my android native tests according to your recommendation
2014-11-20T17:17:34 * kasparnet has quit
2014-11-20T17:21:26 * danaayotte has quit
2014-11-20T17:41:08 * jessm joined the channel
2014-11-20T17:44:48 * kasparnet joined the channel
2014-11-20T17:52:08 * cindyli has quit
2014-11-20T17:58:53 * yzen is now known as yzen_
2014-11-20T18:00:10 * danaayotte joined the channel
2014-11-20T18:01:25 * cindyli joined the channel
2014-11-20T18:04:13 * yzen_ is now known as yzen
2014-11-20T18:40:45 * danaayotte has quit
2014-11-20T18:45:50 <cindyli> Justin_o: the jira for localizing toc texts in prefs framework - http://issues.fluidproject.org/browse/FLUID-5568
2014-11-20T18:46:03 <Justin_o> cindyli: thanks
2014-11-20T18:46:06 <cindyli> np
2014-11-20T19:03:47 * danaayotte joined the channel
2014-11-20T19:04:22 <Justin_o> cindyli: i\'ve filed pull requests for FLUID-5567 for both the master and infusion-1.5.x branches
2014-11-20T19:14:41 * cindyli has quit
2014-11-20T19:42:34 * cindyli joined the channel
2014-11-20T19:52:25 * kasparnet has quit
2014-11-20T20:03:20 * kasparnet joined the channel
2014-11-20T20:09:37 * kasparnet has quit
2014-11-20T20:20:39 * kasparne_ joined the channel
2014-11-20T20:24:44 * kasparnet joined the channel
2014-11-20T20:27:44 * kasparne_ has quit
2014-11-20T20:30:55 <Bosmon> Hi there Justin_o - I think it is now time to turn back to your horrifying QUnit issues....
2014-11-20T20:31:07 <Bosmon> I am trying to locate the branch that had them in - was it a prefsEditors branch?
2014-11-20T20:33:58 <Justin_o> Bosmon: which qunit issue was that?
2014-11-20T20:34:09 <Justin_o> i think i\'ve repressed the memory
2014-11-20T20:34:23 <Bosmon> Well
2014-11-20T20:34:28 <Bosmon> It was rather hard to characterise
2014-11-20T20:34:36 <Bosmon> You had an IoC testing fixture which was malfunctioning
2014-11-20T20:34:46 <Bosmon> And in addition appeared to be trying to run multiple fixtures simultaneously
2014-11-20T20:35:09 <Bosmon> In addition, on my machine, it was waiting for an event from a model change that never arrived - although it seems that on your machine this behaviour wasn\'t the same
2014-11-20T20:35:19 <Justin_o> oh right
2014-11-20T20:35:20 <Justin_o> okay..
2014-11-20T20:35:24 <Justin_o> let me find that for you
2014-11-20T20:35:40 <Bosmon> I feel sure I even wrote a JIRA for it
2014-11-20T20:35:44 <Bosmon> But I don\'t seem to be able to find it right now
2014-11-20T20:36:59 <Justin_o> Bosmon: i believe it is this one https://github.com/fluid-project/metadata/pull/42
2014-11-20T20:38:15 <Justin_o> Bosmon: you thought it might be related to http://issues.fluidproject.org/browse/FLUID-5387
2014-11-20T20:38:45 <Bosmon> ok great, thanks
2014-11-20T20:39:29 <Justin_o> Bosmon: thanks
2014-11-20T20:39:46 <Bosmon> Justin_o - it looks like I was last looking at http://issues.fluidproject.org/browse/FLOE-230
2014-11-20T20:40:08 <Bosmon> ah
2014-11-20T20:40:12 <Bosmon> I guess this is an unrelated issue
2014-11-20T20:40:40 <Justin_o> Bosmon: yes.. i ran into a couple of issues with work for FLOE :(
2014-11-20T20:41:28 <Bosmon> Well this is annoying... I was sure I was keeping a branch around with my highly instrumented copy of QUnit....
2014-11-20T20:42:47 <Bosmon> aha
2014-11-20T20:42:52 <Bosmon> I think I\'ve at least found the branch of yours
2014-11-20T20:42:53 <Bosmon> https://github.com/jobara/metadata/tree/FLOE-116-broken-IoCTestingSequence
2014-11-20T20:43:09 <Bosmon> No, this can\'t be right
2014-11-20T20:43:12 <Bosmon> This one is 7 months old...
2014-11-20T20:44:10 <Bosmon> ok, it\'s this one: https://github.com/jobara/metadata/tree/FLOE-196-with-FLUID-5506
2014-11-20T20:44:35 <Justin_o> Bosmon: yes.. that sounds right
2014-11-20T20:45:10 <Bosmon> At least we have a date now
2014-11-20T20:45:12 <Bosmon> Sep 16th....
2014-11-20T20:45:28 <Justin_o> just over 2 months
2014-11-20T20:45:53 <Bosmon> I\'m noticing horrifyingly that our logbot has nothing for the entire month of September :( :(
2014-11-20T20:46:05 <Bosmon> Good grief
2014-11-20T20:46:10 <Justin_o> :(
2014-11-20T20:46:16 <Bosmon> Oh wait
2014-11-20T20:46:18 <Justin_o> there is a mailing list thread if that helps http://fluid.2324889.n4.nabble.com/Unit-test-issues-with-the-feedback-tool-td9179.html
2014-11-20T20:46:21 <Bosmon> I think just its interface is broken
2014-11-20T20:46:26 <Bosmon> Yes, that is where I got the date from...
2014-11-20T20:46:39 <Justin_o> Bosmon: oh yes.. i was experiencing issues with setting specific dates with logbot
2014-11-20T20:46:56 <Bosmon> Ok it has stuff for Sept 29th
2014-11-20T20:47:48 <Bosmon> oh great
2014-11-20T20:47:48 <Justin_o> i\'m heading off now, let me know if you have any more questions about this. thanks for looking into it again
2014-11-20T20:47:56 <Bosmon> If you type the URL in manually, you can get content
2014-11-20T20:47:59 <Bosmon> ok
2014-11-20T20:48:04 <Bosmon> Could you remind me which test was failing?
2014-11-20T20:49:05 <Justin_o> Sorry I shut down. If you look in the pull request it has them commented out.
2014-11-20T20:49:12 <Bosmon> Ok, the verifyRequests and verifyNumRequests stuff...... this is coming back to me now
2014-11-20T20:49:13 <Bosmon> Ok, thanks
2014-11-20T21:02:22 * yzen has quit
2014-11-20T21:04:44 * yzen_ joined the channel
2014-11-20T21:04:50 * yzen_ is now known as yzen
2014-11-20T21:05:01 * yzen is now known as yzen_
2014-11-20T21:06:27 * yzen_ has quit
2014-11-20T21:06:33 * yzen joined the channel
2014-11-20T21:06:52 * yzen has quit
2014-11-20T21:16:47 * kasparne_ joined the channel
2014-11-20T21:20:13 * kasparnet has quit
2014-11-20T21:39:27 * anvk has quit
2014-11-20T21:47:40 * cindyli has quit
2014-11-20T21:56:16 * clown has quit
2014-11-20T22:03:04 * michelled has quit
2014-11-20T22:05:38 * jhung has quit
'

b'2014-11-20T00:19:18 <jhernandez> git status
2014-11-20T00:19:36 <jhernandez> definetly, wrong terminal
2014-11-20T00:19:38 <jhernandez> xDDDDD
2014-11-20T00:47:34 * danaayotte joined the channel
2014-11-20T00:48:30 * danaayotte has left the channel
2014-11-20T01:11:27 * yzen joined the channel
2014-11-20T01:17:15 * colinclark has quit
2014-11-20T01:17:41 * simonjb has quit
2014-11-20T01:41:25 * yzen is now known as yzen_
2014-11-20T01:45:42 * yzen_ has quit
2014-11-20T01:51:25 * yzen joined the channel
2014-11-20T01:52:55 * avtar has quit
2014-11-20T01:54:58 <Bosmon> VVERNNANDDEZZZ!
2014-11-20T01:55:16 <jhernandez> ANTVANIG!!!!!
2014-11-20T01:55:16 <sgithens____> !!!!!!!
2014-11-20T01:55:24 <jhernandez> HENS!!!!!!!!!!!
2014-11-20T01:55:33 <sgithens____> ANTUNEZ!!!!!!!!
2014-11-20T01:55:37 <jhernandez> xDD
2014-11-20T01:56:45 <jhernandez> Bosmon: now, zigging to the android side again to address your comments
2014-11-20T01:58:24 <Bosmon> Well done on your FIREBALL *PUL*!
2014-11-20T01:58:41 <jhernandez> :)
2014-11-20T02:13:44 <jhernandez> Bosmon: I\'m not sure what to do with the \'Missing "use strict" statement\'
2014-11-20T02:14:35 <jhernandez> we are including "var thatall = this", which is offending the strict mode
2014-11-20T02:16:17 <jhernandez> I can wrap it in a function but not sure about the consequences or if it\'s a good practice
2014-11-20T02:52:22 <jhernandez> (done)
2014-11-20T03:14:55 * yzen is now known as yzen_
2014-11-20T04:00:35 * yzen_ is now known as yzen
2014-11-20T04:01:50 * yzen is now known as yzen_
2014-11-20T04:06:20 * yzen_ has quit
2014-11-20T04:15:30 * jhung joined the channel
2014-11-20T04:17:58 * jhung has quit
2014-11-20T04:38:52 * jhung joined the channel
2014-11-20T04:55:35 * jhung has quit
2014-11-20T06:03:41 * yzen joined the channel
2014-11-20T06:08:23 * yzen has quit
2014-11-20T07:16:06 * kasparnet joined the channel
2014-11-20T07:46:55 * kasparnet has quit
2014-11-20T08:26:07 * kasparnet joined the channel
2014-11-20T09:36:05 <Bosmon> jhernandez - which file contains this?
2014-11-20T10:35:03 * slim_jim joined the channel
2014-11-20T10:35:11 * slim_jim has quit
2014-11-20T10:36:55 <jhernandez> Bosmon: android*Tests
2014-11-20T10:36:57 <jhernandez> https://github.com/javihernandez/android/commit/c962fcdbba6d697b5224b441e31aecca637e2988
2014-11-20T10:37:27 <jhernandez> this is, androidSettingsTests, androidAudioManagerTests and androidPersistentConfigTests
2014-11-20T10:43:11 * slim_jim joined the channel
2014-11-20T11:15:13 * slim_jim has quit
2014-11-20T12:10:34 * kasparnet has quit
2014-11-20T12:19:23 * jhernandez has quit
2014-11-20T12:28:14 * jhernandez joined the channel
2014-11-20T12:29:36 * kasparnet joined the channel
2014-11-20T12:52:35 <Bosmon> jhernandez - you can just write a comment with /* global this */ at the head of the file
2014-11-20T12:52:59 <Bosmon> ah wait, it\'s the strict mode which is the problem....
2014-11-20T12:53:31 <Bosmon> Well I believe node.js allows you access to a special variable "global"
2014-11-20T12:53:35 <Bosmon> In which case you can use that rather than this
2014-11-20T12:53:45 <Bosmon> And then write /* global global */ to pacify the linter
2014-11-20T12:53:53 <Bosmon> http://nodejs.org/api/globals.html
2014-11-20T13:08:28 * cindyli joined the channel
2014-11-20T13:13:20 <Bosmon> jhernandez - actually it appears that "reference to global this" is permitted in strict mode
2014-11-20T13:13:30 <Bosmon> Is this offending the actual runtime or just jshint?
2014-11-20T13:15:13 <jhernandez> just jshint
2014-11-20T13:16:09 <jhernandez> but I already fixed it by wrapping the code into a funcion itself
2014-11-20T13:16:28 <jhernandez> now jshint is happier
2014-11-20T13:18:21 * jhung joined the channel
2014-11-20T13:24:08 * cindyli has quit
2014-11-20T13:27:06 * cindyli joined the channel
2014-11-20T13:37:33 * cindyli has quit
2014-11-20T13:56:01 * anvk joined the channel
2014-11-20T14:09:49 * cindyli joined the channel
2014-11-20T14:12:44 * anastasiac joined the channel
2014-11-20T14:15:13 <Justin_o> cindyli: do you know if our enactors support message bundles?
2014-11-20T14:15:39 <Justin_o> I fixed the table of contents component itself to use a strings bundle for its heading
2014-11-20T14:15:44 * kasparnet has quit
2014-11-20T14:15:52 <Justin_o> now i want to pass in that value from the string bundle in UIO
2014-11-20T14:16:11 * cindyli has quit
2014-11-20T14:18:58 * cindyli joined the channel
2014-11-20T14:23:07 * yzen joined the channel
2014-11-20T14:40:42 * danaayotte joined the channel
2014-11-20T14:50:34 * colinclark joined the channel
2014-11-20T14:53:11 <Justin_o> cindyli: so it doesn\'t seem like the enactors are hooked up to a message resolver
2014-11-20T14:53:32 * amilchev has left the channel
2014-11-20T14:55:19 * clown joined the channel
2014-11-20T14:59:00 <cindyli> yes, Justin_o, all our current enactors are doing backend handling and they don\'t need to render texts. i know now you need it for rendering table of contents. so we will need to hook it up ourselves, just like what it does in panels.js, line 606
2014-11-20T14:59:22 * kasparnet joined the channel
2014-11-20T14:59:55 <cindyli> Justin_o: your thoughts?
2014-11-20T15:01:33 <Justin_o> cindyli: i\'m not sure that\'s the correct location because we could theoretically have enactors but no prefsEditor
2014-11-20T15:02:14 <Justin_o> cindyli: i wonder if we need to move over all the functionality from this workflow https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/PrefsEditor.js#L92 into a place that can be shared by the prefsEditor and uienhancer
2014-11-20T15:02:17 <Justin_o> what do you think?
2014-11-20T15:03:11 * kasparne_ joined the channel
2014-11-20T15:03:27 <Justin_o> cindyli: also not sure how the messages are filtered out to each panel right now
2014-11-20T15:03:35 <Justin_o> how do they look in the correct spot?
2014-11-20T15:06:48 * kasparnet has quit
2014-11-20T15:06:50 <cindyli> you were right, Justin_o, prefEditorLoader is paired with prefsEditor and panel rendering. yes, we probably should create a independent grade for message resolver to be shared by both prefsEditor and UIE
2014-11-20T15:10:01 <cindyli> Justin_o: the message resolver hooked up on prefsEditorLoader currently contains all msgs for all panels. each panel just looks up what it needs in there
2014-11-20T15:11:18 <Justin_o> cindyli: are all the messages bundles merged? so there is a potential of collision?
2014-11-20T15:11:59 <cindyli> Justin_o: unfortunately, i think yes
2014-11-20T15:15:19 <Justin_o> cindyli: okay.. good to know.. i guess i\'ll look at some refactoring.. i wonder if this is something we should try to fix for both 1.5.x and 2.0
2014-11-20T15:16:16 <cindyli> i think we should be able to fix both, Justin_o, since there are not much change made for prefs framework since 1.5 was tagged
2014-11-20T15:16:32 <Justin_o> cindyli: okay
2014-11-20T15:29:41 <Justin_o> cindyli: another interesting thing is that ToC fetches it\'s own template.. i wonder if this is something else that we should change
2014-11-20T15:29:42 <Justin_o> or not
2014-11-20T15:30:06 <Justin_o> currently the lazy loading is nice for cases where the ToC is never used
2014-11-20T15:30:30 <Justin_o> maybe it should also lazy load it\'s messages?
2014-11-20T15:30:32 <cindyli> agree, Justin_o. where else do you think toc template can be loaded?
2014-11-20T15:30:39 <Justin_o> cindyli: what do yo think?
2014-11-20T15:30:45 <cindyli> a good point
2014-11-20T15:31:02 <Justin_o> cindyli: all other templates are loaded at the beginning by the template loader
2014-11-20T15:31:40 <cindyli> i think toc itself should load its own template and messages
2014-11-20T15:32:29 <Justin_o> cindyli: okay.. so we should move out the resourceLoader and the message resolver creation to a common file
2014-11-20T15:32:57 <Justin_o> i\'m not really sure what to call this file though.. Resources.js?
2014-11-20T15:32:58 <Bosmon> jhernandez - better to get rid of the function if you can, it is just noise and extra indentation...
2014-11-20T15:33:32 <cindyli> Justin_o: that name sounds good to me
2014-11-20T15:33:46 <cindyli> one sec, let me check where the toc template is
2014-11-20T15:35:17 <Justin_o> cindyli: okay
2014-11-20T15:36:29 <cindyli> Justin_o: i\'m thinking perhaps toc should have its own message resolver
2014-11-20T15:36:52 <Justin_o> cindyli: yep, that\'s what i\'m thinking too now
2014-11-20T15:36:54 <cindyli> if you look at how we handle toc template
2014-11-20T15:37:00 <Justin_o> or maybe every enhancer should have this
2014-11-20T15:37:22 <Justin_o> maybe that\'s not necessary, maybe just toc
2014-11-20T15:37:47 <cindyli> https://github.com/fluid-project/infusion/blob/master/demos/prefsFramework/js/prefsEditorDemo.js#L72-L76
2014-11-20T15:38:14 <cindyli> toc only seems making more sense
2014-11-20T15:38:28 <Justin_o> cindyli: it actually filters down to here https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/Enactors.js#L430
2014-11-20T15:38:38 <cindyli> \'cuz enactors cannot live on their own without the context of prefs framework
2014-11-20T15:38:41 <Justin_o> and then specifically to https://github.com/fluid-project/infusion/blob/master/src/framework/preferences/js/Enactors.js#L444
2014-11-20T15:38:53 <Justin_o> so you can see that the ToC actually does it\'s own resource fetching
2014-11-20T15:38:59 <Justin_o> since it takes the url all the way down
2014-11-20T15:39:02 <cindyli> yes
2014-11-20T15:39:35 <cindyli> this tells us toc should be treated as an independent component without relying on prefs framework
2014-11-20T15:40:35 <Justin_o> cindyli: so i think the enactor should have the message resolver as opposed to the component
2014-11-20T15:40:36 <cindyli> it just takes in template or message locations and deal with them on its own
2014-11-20T15:41:03 <Justin_o> the ToC component just has a strings block, like most of our other components
2014-11-20T15:41:23 <Justin_o> Bosmon: do you have an opinion on this?
2014-11-20T15:41:24 <cindyli> Justin_o: so you wanna do the string parsing at a higher level
2014-11-20T15:41:39 <Justin_o> Bosmon:  and it would be great to make the who message bundle loading workflow easier to hook up
2014-11-20T15:41:53 * simonjb joined the channel
2014-11-20T15:42:02 <Justin_o> cindyli: i want the ToC enactor to fetch the message, rather than the ToC component
2014-11-20T15:42:19 <Bosmon> Justin_o - we can\'t really have toc being in charge of its own I/O - or indeed anyone being in charge of their own I/O - at least with the framework the way it is now
2014-11-20T15:42:20 <Justin_o> so fluid.prefs.enactor.tableOfContents vs fluid.tableOfContents
2014-11-20T15:42:49 <Justin_o> Bosmon: the ToC is already in charge of its own template right now
2014-11-20T15:42:58 <Bosmon> Yes, horrifyingly so : P
2014-11-20T15:43:22 <Bosmon> Just creates new ways for the user to experience "jank" on page load
2014-11-20T15:43:28 <Justin_o> Bosmon: one of the nice things though is that it doesn\'t bother fetching the template when the ToC isn\'t used.. which could be quite often really
2014-11-20T15:43:31 <Bosmon> And new kinds of race conditions that could occur during instantiation
2014-11-20T15:45:10 <Bosmon> But I suppose what solution we pick right now perhaps doesn\'t matter all that much, given it will "all be swept away when the revolution comes"
2014-11-20T15:45:28 <Justin_o> Bosmon: :) how far are we from the revolution?
2014-11-20T15:45:55 <Bosmon> Well some parts of the revolution could come reasonably soon
2014-11-20T15:47:09 <Bosmon> Perhaps the best thing you could do for now is to create a "fake event" - "onContributeResources" or so, which every component which wants to do some I/O can subscribe to ....
2014-11-20T15:47:18 <Bosmon> Well, I suppose it doesn\'t make much difference to the current model
2014-11-20T15:47:28 <Bosmon> Where I imagine every component already advertises a fake "onReady" event
2014-11-20T15:48:17 <Bosmon> It\'s just the same obstruction, only going in the other direction
2014-11-20T15:49:22 <Justin_o> Bosmon: not really sure how an onContributeResources event would help
'


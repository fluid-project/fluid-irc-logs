b'2014-12-09T21:57:52 <Bosmon> And so we should also knock on the head this "scr=rewrite-url" rubbish too
2014-12-09T21:58:01 * michelled joined the channel
2014-12-09T21:58:16 <Bosmon> Noone writes rsf:ids any more so we don\'t need to maintain a system that pretends that they do....
2014-12-09T21:58:38 <Justin_o> Bosmon: :) makes sense
2014-12-09T22:02:39 <Bosmon> Justin_o - you have a typo at "gpii-ouath-footer" in login.handlebars
2014-12-09T22:03:43 * Sepideh joined the channel
2014-12-09T22:04:44 <Justin_o> Bosmon: thanks.. i\'ll take a look at that
2014-12-09T22:04:54 <Justin_o> Bosmon: here\'s the jira http://issues.fluidproject.org/browse/FLUID-5580
2014-12-09T22:05:07 <Justin_o> by the way, if you see anything else i should change about that branch please let me know
2014-12-09T22:06:05 * Sepideh has quit
2014-12-09T22:07:54 * yzen_ has quit
2014-12-09T22:12:37 <Bosmon> Thanks Justin_o, I\'ve fleshed out the JIRA with some more info from our conversation
2014-12-09T22:12:56 <Justin_o> Bosmon: thanks
2014-12-09T22:16:05 <Justin_o> Bosmon: do we have a good strategy for rendering and localization for things cases where we have what would normally be a single string of text but has markup mixed in. For example <span> some text with a word <strong> highlighted </strong> in the middle</span>
2014-12-09T22:16:38 <Justin_o> or where long text is broken up into paragraphs.. so each actual paragraph should correspond to separate <p> tags
2014-12-09T22:31:07 * colinclark has quit
2014-12-09T22:31:34 * simonjb has quit
2014-12-09T22:46:07 <Bosmon> Justin_o - I think we\'ve just tended to write extended blocks of markup in the string bundle in the case, and then render with a UIVerbatim
2014-12-09T22:58:37 * michelled has quit
2014-12-09T23:03:20 * jessm has quit
2014-12-09T23:07:11 * danaayotte has quit
2014-12-09T23:17:08 <Justin_o> Bosmon: i thought we used markup blocks instead for this, but i don\'t think they are localizable
2014-12-09T23:17:17 <Justin_o> can you use messagekey still?
2014-12-09T23:17:45 <Bosmon> Justin_o - yes, that feature hasn\'t changed
2014-12-09T23:47:56 * avtar has quit
'

b'2014-12-09T16:52:56 <Bosmon> kasparnet - it\'s true that it doesn\'t have the ability to object to tabs - the version we use is only able to object to a mixture of tabs and spaces
2014-12-09T16:52:59 * michelled has quit
2014-12-09T16:53:16 <Bosmon> And unfortunately the latest versions are completely insensitive to all forms of whitespace
2014-12-09T16:53:22 <Bosmon> This is why we use the specially ancient version that we do
2014-12-09T16:53:40 * colinclark joined the channel
2014-12-09T16:53:56 <Bosmon> I believe that white: true is the default for our version, no?
2014-12-09T16:54:25 <kasparnet> nope, it\'s not
2014-12-09T16:54:39 <kasparnet> I can perhaps do a pull for it at some point
2014-12-09T16:54:45 <Bosmon> well, wait
2014-12-09T16:54:48 <Bosmon> What is the effect of the option?
2014-12-09T16:55:41 <kasparnet> http://pastebin.com/BnuafRch
2014-12-09T16:55:43 <Bosmon> I don\'t think it will be what you are hoping for
2014-12-09T16:55:59 <Bosmon> quite
2014-12-09T16:56:09 <kasparnet> no, I realize
2014-12-09T16:56:14 <kasparnet> it wont help the tab issue
2014-12-09T16:56:14 <Bosmon> It will just make a mess of all our existing expressions and cause a nearly 100% diff
2014-12-09T16:56:29 <kasparnet> 130 errors in 102 files
2014-12-09T16:56:34 <kasparnet> that\'ll take me 45 mins to fix
2014-12-09T16:56:39 <Bosmon> ok
2014-12-09T16:56:42 <kasparnet> :)
2014-12-09T16:56:44 <Bosmon> Still, I think it won\'t be helpful
2014-12-09T16:56:48 <kasparnet> and it makes the code nice and pretty :)
2014-12-09T16:57:28 <Bosmon> Well, it\'s interesting
2014-12-09T16:57:33 <kasparnet> as in "it wont solve my problem" or "it\'s just stupid details that no-one cares about"
2014-12-09T16:57:43 <Bosmon> I had assumed there was an implementation bug which stopped us using this option
2014-12-09T16:57:46 <kasparnet> (the "wont be helpful" comment
2014-12-09T16:57:57 <Bosmon> Just checking through the list of errors...
2014-12-09T16:59:57 * slim_jim has quit
2014-12-09T17:00:15 <Bosmon> Actually it looks harmless enough - I think somehow I assumed we had this option enabled already
2014-12-09T17:00:22 <Bosmon> It\'s something you should check up with Justin_o though
2014-12-09T17:00:31 <Bosmon> Since if we change it, we should do it for all our projects
2014-12-09T17:03:43 <Justin_o> Bosmon: i thought we had that on by default too
2014-12-09T17:06:35 * colinclark has quit
2014-12-09T17:10:25 * danaayotte joined the channel
2014-12-09T17:20:02 <kasparnet> Bosmon, Justin_o: ok - so if I at some point during a meeting feel like doing some braindead side-work, is this something I could do - or should I wait until we at some point are ready for a cross-repository wide coordinated attack on whitespaces?
2014-12-09T17:20:19 <Bosmon> kasparnet - sure, do it when you have some time
2014-12-09T17:20:31 <kasparnet> oki
2014-12-09T17:20:33 <kasparnet> cheers
2014-12-09T17:20:35 <Justin_o> sounds good to me
2014-12-09T17:20:37 <Justin_o> thanks kasparnet
2014-12-09T17:24:25 * avtar joined the channel
2014-12-09T17:58:34 * Sepideh has quit
2014-12-09T18:02:05 * Sepideh joined the channel
2014-12-09T18:10:27 * Sepideh has quit
2014-12-09T18:22:48 * Sepideh joined the channel
2014-12-09T18:56:40 <cindyli> hi, Bosmon
2014-12-09T18:56:54 <Bosmon> Hi cindyli
2014-12-09T18:57:03 <cindyli> does fluid.rendererRelayComponent still support that.applier.guards.addListener?
2014-12-09T18:57:23 <cindyli> seems not
2014-12-09T18:57:40 <cindyli> if not, how do we guard model values
2014-12-09T19:03:12 * Sepideh has quit
2014-12-09T19:13:54 <cindyli> Bosmon: ^
2014-12-09T19:15:10 <Bosmon> cindyli - guards, of course, have been abolished
2014-12-09T19:16:00 <cindyli> Bosmon: so do we now use model transformation to guard the model?
2014-12-09T19:16:06 <Bosmon> cindyli - yes
2014-12-09T19:16:17 <cindyli> both "source" and "target" are {that}.model?
2014-12-09T19:16:30 <cindyli> would that cause circulation?
2014-12-09T19:16:31 <Bosmon> cindyli - yes, or preferably something more specific
2014-12-09T19:16:38 <Bosmon> What effect are you trying to achieve?
2014-12-09T19:16:53 <cindyli> i\'m rewriting text feild slider to use the model relay
2014-12-09T19:17:02 <cindyli> it needs to gurad min and max vals
2014-12-09T19:17:18 <cindyli> for model.value
2014-12-09T19:17:19 <Bosmon> Oh yes
2014-12-09T19:17:48 * michelled joined the channel
2014-12-09T19:18:20 <Bosmon> You can see an example use of the "limitRange" transform here:
2014-12-09T19:18:20 <Bosmon> https://github.com/fluid-project/infusion/blob/master/src/components/pager/js/Pager.js#L487
2014-12-09T19:18:57 <cindyli> got it. thanks, Bosmon. very helpful
2014-12-09T19:31:02 * Sepideh joined the channel
2014-12-09T19:39:02 * clown has quit
2014-12-09T19:44:42 * clown joined the channel
2014-12-09T19:44:46 * clown is now known as clown_mtg
2014-12-09T20:22:07 * jhung has quit
2014-12-09T20:33:44 <cindyli> Bosmon: a model transformation question: how to transform a string value to a number, for example, "1.5" -> 1.5
2014-12-09T20:33:44 <cindyli> i tried this but didn\'t work:
2014-12-09T20:33:44 <cindyli> \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 singleTransform: {
2014-12-09T20:33:44 <cindyli> \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0type: "fluid.transforms.linearScale",
2014-12-09T20:33:44 <cindyli> \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0value: "{that}.model.value",
2014-12-09T20:33:44 <cindyli> \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0factor: 1
2014-12-09T20:33:44 <cindyli> \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0 \xc2\xa0}
2014-12-09T20:34:59 <Bosmon> cindyli - no, you will have to write your own stringParser transform
2014-12-09T20:35:03 <Bosmon> I don\'t think anyone made one yet
2014-12-09T20:35:12 <cindyli> ok. thanks, Bosmon
2014-12-09T20:35:18 <Bosmon> It\'s a little annoying, to be sure
2014-12-09T20:36:04 <cindyli> just to make sure I didn\'t miss anything that has been built into the framework
2014-12-09T20:37:34 * simonjb has quit
2014-12-09T20:38:51 * kasparnet has quit
2014-12-09T20:39:13 * kasparnet joined the channel
2014-12-09T20:56:07 * colinclark joined the channel
2014-12-09T20:58:33 * clown_mtg has quit
2014-12-09T21:08:56 * michelled has quit
2014-12-09T21:10:05 <Bosmon> Justin_o - how did your component tree issue work out?
2014-12-09T21:10:24 <Justin_o> Bosmon: it worked as you suggested.. using {}
2014-12-09T21:10:30 <Bosmon> cool
2014-12-09T21:11:01 <Justin_o> Bosmon: thanks for your help on that
2014-12-09T21:11:20 <Justin_o> Bosmon: by the way there is an example of the id disappearing after rendering in this branch https://github.com/jobara/gpii-oauth2/tree/login-page
2014-12-09T21:11:21 <Bosmon> no problem - in theory we should improve the documentation, if we expected anyone to use the renderer again...
2014-12-09T21:11:24 <Justin_o> if you run the login page
2014-12-09T21:11:31 <Bosmon> Oh, thanks
2014-12-09T21:11:32 <Justin_o> Bosmon: :)
2014-12-09T21:11:41 <Justin_o> i think we were sort of waiting for the new one
2014-12-09T21:12:09 <Justin_o> Bosmon: if you want to run that you have to do the npm installs from both the root and the authorization server directories
2014-12-09T21:12:20 <Justin_o> then run the app.js from the authorization server in node
2014-12-09T21:12:26 <Bosmon> oh, I see
2014-12-09T21:12:34 <Justin_o> which you can open in your browser at localhost:3000/login
2014-12-09T21:13:11 <Justin_o> you should see that this id is removed when the page is rendered. https://github.com/jobara/gpii-oauth2/blob/login-page/gpii-oauth2-authorization-server/views/login.handlebars#L18
2014-12-09T21:28:11 * anvk has quit
2014-12-09T21:30:54 * cindyli has quit
2014-12-09T21:32:26 * Sepideh has quit
2014-12-09T21:38:08 <Justin_o> Bosmon: i made this fiddle, but it doesn\'t have the same problem http://jsfiddle.net/0e136tzL/
2014-12-09T21:39:04 <Bosmon> Justin_o - thanks for that
2014-12-09T21:39:08 <Bosmon> That\'s a bit mysterious
2014-12-09T21:39:30 <Justin_o> yah.. i wonder what else might be different
2014-12-09T21:41:36 <Justin_o> Bosmon: here\'s an updated fiddle
2014-12-09T21:41:37 <Justin_o> http://jsfiddle.net/0e136tzL/1/
2014-12-09T21:41:48 <Justin_o> Bosmon: the id is removed when there\'s an action attribute
2014-12-09T21:41:51 <Bosmon> I was unable to find any special treatment of form tags in the renderer
2014-12-09T21:41:52 <Bosmon> aha!
2014-12-09T21:42:05 <Bosmon> Ok
2014-12-09T21:42:07 <Bosmon> That\'s a good clue
2014-12-09T21:43:33 <Bosmon> In that case I suspect the action of this branch https://github.com/fluid-project/infusion/blob/master/src/framework/renderer/js/fluidParser.js#L239
2014-12-09T21:45:41 <Justin_o> Bosmon: that looks promising.. what does ID = "scr=rewrite-url"; do?
2014-12-09T21:46:02 <Bosmon> Well, it makes a notation to the renderer that there is an HTML tag which needs a URL rewritten, that has not otherwise been paired up with a component
2014-12-09T21:46:07 <Justin_o> i can only guess that since it isn\'t part of the renderer\'s component tree that it has nothing to rewrite the ID to
2014-12-09T21:46:47 <Bosmon> typically the "action" would hold a URL which might have been written as a URL relative to the template\'s location
2014-12-09T21:47:01 <Bosmon> And the renderer would imagine that it was its job to rebase this URL once the final markup was written
2014-12-09T21:48:27 <Bosmon> Which it then does by fabricating a little UILink component to match up with the form tag, to get the URL rewriting done
2014-12-09T21:48:44 <Bosmon> Unfortunately since the component is a fake and has no id, the renderer ends up removing the id attribute that is already there
2014-12-09T21:49:12 <Justin_o> ah
2014-12-09T21:49:26 <Bosmon> There are some workarounds, but they\'re probably all a lot less palatable than what you\'ve done already
2014-12-09T21:50:39 <Bosmon> The renderer was always expecting to have complete control over ids and urls in the final markup in any case
2014-12-09T21:51:00 <Bosmon> Couldn\'t you use a class name on the form instead?
2014-12-09T21:51:11 <Bosmon> It would be more proper, after all
2014-12-09T21:51:17 <Justin_o> Bosmon: ah okay.. could it ever have been expected to handle this case where a submit input was outside of the form but referencing it by id?
2014-12-09T21:51:52 <Bosmon> Oh, I see
2014-12-09T21:52:02 <Justin_o> Bosmon: I don\'t actually need the id anymore, it would have just been for the above case where i had an submit input outside of the form element, but associated them by using the form attribute and the id of the form
2014-12-09T21:54:01 * simonjb joined the channel
2014-12-09T21:54:14 <Justin_o> Bosmon: is it worth filing a jira for this
2014-12-09T21:54:15 <Justin_o> ?
2014-12-09T21:55:08 <Bosmon> Justin_o - no, the renderer didn\'t understand the "form" relation
2014-12-09T21:55:14 <Bosmon> It wasn\'t a part of HTML4, I think
2014-12-09T21:55:32 <Bosmon> Justin_o - yes, I think it is - since for a start we need to be aware of the new HTML5 relations
2014-12-09T21:55:32 <Justin_o> Bosmon: yes, i think it\'s a new thing
2014-12-09T21:55:40 <Bosmon> So the new renderer will need to support them
2014-12-09T21:56:07 <Justin_o> Bosmon: okay.. i\'ll write up  jira for it
2014-12-09T21:56:17 <Bosmon> Justin_o - thank
2014-12-09T21:56:30 <Justin_o> np, thank you
2014-12-09T21:56:35 <Bosmon> I think the old renderer only understood the relations "for" and "headers"
2014-12-09T21:57:04 <Bosmon> And I think we will end up reusing something very similar to this code in the new renderer
2014-12-09T21:57:09 <Bosmon> So we may as well fix it in the old
2014-12-09T21:57:29 <Bosmon> We\'ll also be using the same template parsing code
'

b'2014-12-09T02:26:48 * kasparnet joined the channel
2014-12-09T02:31:05 * kasparnet has quit
2014-12-09T03:26:56 * Justin_o has quit
2014-12-09T07:49:21 * the-t-in-rtf has quit
2014-12-09T08:17:36 * the-t-in-rtf joined the channel
2014-12-09T09:21:39 * kasparnet joined the channel
2014-12-09T10:07:31 * slim_jim joined the channel
2014-12-09T11:48:31 * slim_jim has quit
2014-12-09T12:05:55 * jhernandez has quit
2014-12-09T12:11:57 * Bosmon has quit
2014-12-09T12:16:04 * Bosmon joined the channel
2014-12-09T12:17:59 * jhernandez joined the channel
2014-12-09T12:23:42 * slim_jim joined the channel
2014-12-09T13:06:07 * Justin_o joined the channel
2014-12-09T13:10:26 * colinclark joined the channel
2014-12-09T13:11:37 * jhung joined the channel
2014-12-09T13:43:00 * the-t-in-rtf has quit
2014-12-09T13:43:06 * cindyli joined the channel
2014-12-09T13:43:16 * the-t-in-rtf joined the channel
2014-12-09T13:56:06 * danaayotte joined the channel
2014-12-09T14:02:43 * the-t-in-rtf has quit
2014-12-09T14:03:41 * the-t-in-rtf joined the channel
2014-12-09T14:05:15 * michelled joined the channel
2014-12-09T14:08:45 * Sepideh joined the channel
2014-12-09T14:10:57 <Justin_o> Bosmon: i have a renderer question for you
2014-12-09T14:10:59 <Justin_o> if you have a minute
2014-12-09T14:11:09 <Bosmon> Hey there Justin_o!
2014-12-09T14:11:16 <Bosmon> Did you get any further with the mystery of the missing form id?
2014-12-09T14:12:19 <Justin_o> Bosmon: not really, but i\'ve worked around it in terms of styling.. so that i didn\'t need to pull the button out of the form.. which is probably clearer in terms of semantics anyways.. i\'ll have something pushed up today though that you could try which should still show the id being stripped.
2014-12-09T14:12:35 <Justin_o> the question I had now though was about how to set up some rendering.. basically i have markup like this
2014-12-09T14:12:38 <Justin_o> https://www.irccloud.com/pastebin/76IYsTpc
2014-12-09T14:13:03 <Justin_o> the span with class gpiic-oauth-login-error has it\'s text rendered
2014-12-09T14:13:12 <Justin_o> after a login has failed
2014-12-09T14:13:29 <Justin_o> however the icon, sibling span, should also only be rendered at this point
2014-12-09T14:13:36 <Justin_o> however there isn\'t really anything to render there
2014-12-09T14:13:42 <Bosmon> ok
2014-12-09T14:13:51 <Justin_o> any thoughts on what i should do to have that conditionally show/hide via rendering
2014-12-09T14:13:52 <Bosmon> Well, you can just peer it with a UIOutput component that does nothing
2014-12-09T14:14:16 <Justin_o> how does a UIOutput look in a prototree?
2014-12-09T14:14:44 <Bosmon> It\'s just a component with no members
2014-12-09T14:14:46 <Justin_o> Bosmon: is it a verbatim from this page http://wiki.fluidproject.org/display/Infusion13/Renderer+Component+Types
2014-12-09T14:15:31 <Justin_o> Bosmon: so it would look something like this?
2014-12-09T14:15:33 <Justin_o> https://www.irccloud.com/pastebin/7wbIDDEA
2014-12-09T14:17:26 <Bosmon> Justin_o, no, not a verbatim
2014-12-09T14:17:57 <Bosmon> Wow, what a terrible page
2014-12-09T14:18:01 <Bosmon> I had no idea it still existed : P
2014-12-09T14:18:30 <Bosmon> http://wiki.fluidproject.org/display/Infusion13/Fluid+Renderer+-+Background
2014-12-09T14:18:34 <Justin_o> it\'s v1.3 so it\'s more of an archive, but i find the more recent docs to be lacking some details
2014-12-09T14:18:39 <Bosmon> I guess "UIOutput" as such ceased to exist
2014-12-09T14:19:54 <Justin_o> thanks for the link, that\'s the page i usually look for but can never remember how to find :)
2014-12-09T14:20:00 <Justin_o> yes.. don\'t see UIOutput
2014-12-09T14:20:12 <Bosmon> It\'s really "UIBound"
2014-12-09T14:20:19 <Bosmon> But of course you don\'t actually want to bind it to anything
2014-12-09T14:23:14 <Bosmon> "by eye" it looks like giving the protocomponent a value of {} ought to work
2014-12-09T14:23:58 <Bosmon> "" is a bit of a hack but might work too
2014-12-09T14:24:08 <Bosmon> What a terrible dialect this protocomponent JSON is
2014-12-09T14:33:16 * yzen joined the channel
2014-12-09T14:37:07 <Justin_o> Bosmon: we\'re always moving towards improving it though, which is great.. i\'m really looking forward to the next version though
2014-12-09T14:37:45 * jessm joined the channel
2014-12-09T14:38:17 * slim_jim has quit
2014-12-09T14:39:38 <Bosmon> Justin_o - yes, I was thinking some more at the weekend about how to make the "new renderer" performant
2014-12-09T14:40:04 <Bosmon> I was excited to discover that the portability profile for Infusion is now so modern that we don\'t support any platforms without Object.freeze()
2014-12-09T14:40:16 <Justin_o> :)
2014-12-09T14:40:23 <Bosmon> I am imagining that the use of immutable components/objects will be crucial to performance in the new renderer
2014-12-09T14:40:36 <Justin_o> really..
2014-12-09T14:40:42 <Justin_o> i didn\'t know it would rely on them
2014-12-09T14:40:49 <Bosmon> As well as (horrors) the use of ... PROTOTYPE CHAINS
2014-12-09T14:41:18 <Bosmon> This seemed like an unacceptable programming technique in 2008 because of the horrible risk of members in the middle of the chains getting corrupted by people trying to write to them
2014-12-09T14:41:44 <Justin_o> oh i see
2014-12-09T14:41:48 <Bosmon> But if we can make each member of the chain, including members of the object at the head of it, immutable, than a lot of the objections can go away
2014-12-09T14:42:00 <Bosmon> As well as, interestingly, allowing the JS VM to make a few more optimisations
2014-12-09T14:42:13 <Bosmon> it seems that the latest Chrome, for example, is a little faster at iterating over frozen objects than unfrozen ones
2014-12-09T14:42:41 <Bosmon> So the first step towards this will be making the "options" member of all components immutable
2014-12-09T14:42:53 <Bosmon> It always morally was anyway, but we need to trap all the remaining cases of people trying to assign into it
2014-12-09T14:43:12 <Justin_o> Bosmon: oh interesting.. so members will be more important then... or there use enforced i guess
2014-12-09T14:43:45 <Bosmon> This means that, whenever we encounter a component with particularly "stereotypical" looking configuration, we can just pick a ready-baked one off the shelf and add it and its (immutable) options chain to our one as a prototype
2014-12-09T14:44:18 <Bosmon> And then hopefully reduce the cost of constructing a component back to just the cost of constructing a {}, a few data members, and then a bit of unavoidable book-keeping in the IoC system
2014-12-09T14:45:11 <Bosmon> Under the covers, access to the component\'s options and some of its other configuration is actually achieved via prototypes, but nobody need know about it
2014-12-09T14:45:34 <Bosmon> But in the past, all we could do was.... *TELL* people, "don\'t assign to that.options.x, or bad things might happen"
2014-12-09T14:45:42 * anvk joined the channel
2014-12-09T14:45:48 <Justin_o> Bosmon: how will options merging be affected? it would mean at creation time a new immutable object is created from the merge?
2014-12-09T14:45:50 <Bosmon> but the risk of the bad things was so appalling that we couldn\'t dream of actually implementing it using prototypes
2014-12-09T14:46:48 <Bosmon> Justin_o - options merging might also be almost completely abridged - since, for example, for a "new renderer component" there would only be a few tiny members with which its options differed from any other renderer component
2014-12-09T14:47:09 <Bosmon> So we would stick those few variant members at the head of the "options object" and then reference the rest from the prototype chain
2014-12-09T14:47:18 <Justin_o> ah i see
2014-12-09T14:47:22 <Bosmon> In fact those variant members would just be exactly the ones that we write in protocomponent trees today
2014-12-09T14:47:53 <Bosmon> It\'s just that there would cease to be special things called "renderer components" - there would just be very cheap "standard components"
2014-12-09T14:47:57 <Justin_o> Bosmon: so a call to fluid.defaults wouldn\'t create a prototype?
2014-12-09T14:48:11 <Justin_o> that\'s good
2014-12-09T14:48:16 <Justin_o> makes things simpler
2014-12-09T14:48:44 <Bosmon> Justin_o - it would probably create quite a few prototypes, but the user wouldn\'t see them
2014-12-09T14:48:50 <Bosmon> The system would seem to behave just as it does now
2014-12-09T14:49:16 <Bosmon> You would get a "that" with members etc.
2014-12-09T14:49:28 <Bosmon> invokers would still remain relatively expensive, but we wouldn\'t have any of those on renderer components
2014-12-09T14:49:33 <Bosmon> Since they never had any "behaviour" anyway
2014-12-09T14:50:19 <Justin_o> Bosmon: cool.. any expectations when we might start seeing this emerge?
2014-12-09T14:50:36 <Bosmon> You can never fake out the behaviour of a "that-ist" function with a "this-ist" one - unless you\'ve closed over something somewhere, the system could never find its context
2014-12-09T14:50:46 <Bosmon> So the cost of an invoker will always include the cost of a new function scope
2014-12-09T14:51:37 <Bosmon> Similarly for events, although many of these can be optimised out if we can discover that an event has no listeners - which will also be the case for everything which used to be a "renderer component"
2014-12-09T14:51:42 * danaayotte has quit
2014-12-09T14:51:44 <Bosmon> Justin_o - "some time in 2015" hopefully : P
2014-12-09T14:51:53 <Bosmon> Things should calm down a lot after we get past the EC review for the GPII
2014-12-09T14:51:55 <Bosmon> One would hope
2014-12-09T14:52:55 * danaayotte joined the channel
2014-12-09T14:53:41 * simonjb joined the channel
2014-12-09T14:54:14 * danaayotte has quit
2014-12-09T15:01:21 <Justin_o> Bosmon: :)
2014-12-09T15:01:28 <Justin_o> i hope so.. looking forward to all these things
2014-12-09T15:03:25 <Justin_o> for anyone that wants to laugh and feel old, please watch this https://www.youtube.com/watch?v=d0mg9DxvfZE we\'ve really come a long way
2014-12-09T15:05:45 <simonjb> good morning Justin_o, yesterday we were chatting briefly about jshint -- would you have some time now to chat more?
2014-12-09T15:13:13 <Justin_o> simonjb: sure
2014-12-09T15:13:50 <simonjb> Justin_o: meet you in my vidyo room?
2014-12-09T15:13:58 <Justin_o> simonjb: okay
2014-12-09T15:20:59 * clown joined the channel
2014-12-09T15:21:28 * yzen_ joined the channel
2014-12-09T15:24:16 * yzen has quit
2014-12-09T15:28:39 * slim_jim joined the channel
2014-12-09T15:42:09 <cindyli> hi Bosmon
2014-12-09T15:44:34 <Bosmon> Hi there cindyli
2014-12-09T15:45:11 * the-t-in-rtf has quit
2014-12-09T15:45:15 <cindyli> Bosmon: i have a unit test for model relay in btw standardRelayComponents: http://pastebin.com/U7xTXD8G
2014-12-09T15:45:37 <cindyli> the 2nd assertion fails
2014-12-09T15:45:46 <cindyli> that.fluid9999sub.applier.change("value", 5);
2014-12-09T15:45:46 <cindyli> jqUnit.assertEquals("The source model has been adjusted", 5, that.model.value);
2014-12-09T15:46:12 <Bosmon> cindyli - you changed the wrong value
2014-12-09T15:46:14 <cindyli> where when the modified 5 is expected in the source model, the value in there is still 42
2014-12-09T15:46:18 <Bosmon> Subcomponent\'s value you have named "subValue"
2014-12-09T15:46:23 <cindyli> right, subValue
2014-12-09T15:46:27 <cindyli> yes, one sec
2014-12-09T15:46:29 * slim_jim has quit
2014-12-09T15:46:42 <Bosmon> Your test just changes plain "value"
2014-12-09T15:46:43 <cindyli> passed
2014-12-09T15:47:02 <Bosmon> model relay has bugs, but not bugs THAT obvious : P
2014-12-09T15:47:12 <cindyli> oh man, now i need to figure something else for why prefs framework not working
2014-12-09T15:47:37 <cindyli> ;)
2014-12-09T16:01:15 * the-t-in-rtf joined the channel
2014-12-09T16:01:58 <simonjb> Justin_o: I just pushed my fixes for the jshint issues -- grunt lint is now clear
2014-12-09T16:07:42 <Justin_o> simonjb: excellent thanks.. i\'ll pull that down right after i have my unit tests written
2014-12-09T16:29:27 * slim_jim joined the channel
2014-12-09T16:36:18 * Sepideh has quit
2014-12-09T16:38:13 * Sepideh joined the channel
2014-12-09T16:48:38 * colinclark has quit
2014-12-09T16:49:27 <kasparnet> Bosmon: heya
2014-12-09T16:49:36 <Bosmon> Hey kasparnet
2014-12-09T16:49:47 <Bosmon> Let\'s see if you can run off this time :)
2014-12-09T16:49:52 <kasparnet> I was just looking at andys pull request and was annoyed at jshint for not having an option to disallow tabs
2014-12-09T16:49:52 <Bosmon> I think I answered you within about 10 seconds....
2014-12-09T16:49:55 <kasparnet> as indentation
2014-12-09T16:50:03 <kasparnet> haha, yeah - you were too fast
2014-12-09T16:51:31 <kasparnet> anyway - I didn\'t find any options, but stumbled upon the "white": true option
'


b'2014-12-03T19:39:32 * anastasiac_ joined the channel
2014-12-03T19:40:44 * danaayotte has quit
2014-12-03T19:41:09 * anastasiac has quit
2014-12-03T19:41:09 * anastasiac_ is now known as anastasiac
2014-12-03T19:41:37 <Justin_o> fluid-everyone: the community meeting today will be about infusion-docs
2014-12-03T19:41:58 * cindyli joined the channel
2014-12-03T19:42:07 * Sepideh has quit
2014-12-03T19:42:48 * michelled has quit
2014-12-03T19:42:48 * michelled_ is now known as michelled
2014-12-03T19:43:06 * yzen joined the channel
2014-12-03T19:47:52 <Bosmon> Hi Justin_o - is this taking place on.... VIDYYO?
2014-12-03T19:48:09 <Justin_o> sure, stand up
2014-12-03T19:48:18 <Justin_o> i\'ll double check that it\'s on
2014-12-03T19:57:33 * avtar joined the channel
2014-12-03T20:00:55 * jhung joined the channel
2014-12-03T20:03:44 * jhung1 has quit
2014-12-03T20:04:37 * jhernandez has quit
2014-12-03T20:18:29 * anvk has quit
2014-12-03T20:24:18 * yzen is now known as yzen_
2014-12-03T20:24:38 * kasparnet has quit
2014-12-03T20:26:55 * kasparnet joined the channel
2014-12-03T20:28:18 * yzen_ has quit
2014-12-03T20:32:19 * cindyli has quit
2014-12-03T20:42:33 * kasparnet has quit
2014-12-03T20:55:48 * kasparnet joined the channel
2014-12-03T20:57:54 * anastasiac has quit
2014-12-03T21:01:00 * jhernandez joined the channel
2014-12-03T21:03:48 * anastasiac joined the channel
2014-12-03T21:08:26 * cindyli joined the channel
2014-12-03T21:14:37 <simonjb> Bosmon: I just pushed my changes extracting the testdata from the datastore implementation -- are you able to have a look over? https://github.com/simonbates/gpii-oauth2/commit/899ba25e84b60b42e857cf8ae0c3ef109ec8cb54
2014-12-03T21:15:14 <simonjb> Bosmon: I also renamed gpii.oauth2.datastore to gpii.oauth2.inMemoryDatastore
2014-12-03T21:15:34 <cindyli> Justin_o: PMT/PCP issue due to the request API change - http://issues.gpii.net/browse/GPII-1029
2014-12-03T21:17:10 <simonjb> Bosmon: also, could you have a look at https://github.com/simonbates/gpii-oauth2/blob/master/gpii-oauth2-datastore/inMemoryDatastore.js#L6-L9
2014-12-03T21:21:13 <Bosmon> Thanks simonjb - looking now
2014-12-03T21:22:56 * Sepideh joined the channel
2014-12-03T21:28:37 <Bosmon> simonjb - looks great
2014-12-03T21:29:00 <Bosmon> You can skip the registerNamespace on line 4 since any defaults declarations achieve this automatically
2014-12-03T21:29:59 * cindyli has quit
2014-12-03T21:30:08 <Bosmon> As for the dataStore grade definition, may as well leave it there for now - it can join any other definitions that we find are common across all dataStores when we refactor in future
2014-12-03T21:30:19 <simonjb> Bosmon: ok, cool
2014-12-03T21:30:34 * kasparne_ joined the channel
2014-12-03T21:30:50 * danaayotte joined the channel
2014-12-03T21:31:12 <simonjb> Bosmon: I initially had the gpii.oauth2.datastoreWithSampleData live under the auth server but then moved it to datastore because the resource server needs it also
2014-12-03T21:31:19 <Bosmon> I imagine a few lines from the bodies of some of your impl functions will turn out to be universal, but I can\'t see which they are "by eye" right now
2014-12-03T21:33:22 <simonjb> Bosmon: so the commit seems reasonable? is so I will continue on with the tests now that I have the testdata separated
2014-12-03T21:33:45 <Bosmon> simonjb - very reasonable, thanks
2014-12-03T21:33:57 * kasparnet has quit
2014-12-03T21:34:03 <simonjb> Bosmon: thanks very much for looking it over :)
2014-12-03T21:36:29 <Bosmon> np
2014-12-03T21:40:04 * jhung has quit
2014-12-03T21:58:22 * anastasiac has quit
2014-12-03T22:01:53 * clown has quit
2014-12-03T22:02:09 * kasparne_ has quit
2014-12-03T22:03:00 * yzen joined the channel
2014-12-03T22:06:58 * Sepideh has quit
2014-12-03T22:19:04 * simonjb has quit
2014-12-03T22:31:39 * jessm has quit
2014-12-03T22:55:26 * avtar has quit
2014-12-03T23:02:30 * michelled has quit
2014-12-03T23:26:53 * Bosmon7 has quit
2014-12-03T23:30:56 * danaayotte has quit
2014-12-03T23:32:48 * colinclark has quit
2014-12-03T23:33:26 * colinclark joined the channel
2014-12-03T23:33:26 * colinclark has quit
2014-12-03T23:50:27 * yzen is now known as yzen_
2014-12-03T23:52:42 * yzen_ has quit
2014-12-03T23:52:48 * yzen joined the channel
'

b'2014-12-03T15:54:27 <Bosmon> Well, I see we have a tight deadline for January - for which we are not proposing to deliver a production-quality UI
2014-12-03T15:54:46 <colinclark> So you think that creating a custom Infusion build will delay us in our deadline?
2014-12-03T15:54:46 <Bosmon> How would you feel about having some temporary pollution, with a roadmap for getting rid of it?
2014-12-03T15:55:05 <colinclark> I\'m fascinated by the fact that Justin_o hasn\'t said much
2014-12-03T15:55:11 <colinclark> despite presumably being the one who has the need here?
2014-12-03T15:55:48 <Bosmon> Well I guess the issue centres on whether we expect there to be many or indeed any relevant updates to Infusion trunk, or, for example, some hard-to debug issues arising with the UI layer
2014-12-03T15:56:01 <colinclark> I guess we very clearly know the answer to that
2014-12-03T15:56:06 <colinclark> there always is
2014-12-03T15:56:17 <Bosmon> Certainly I find that debugging issues that arise from a built version of Infusion is significantly slower than debugging one broken out into files
2014-12-03T15:57:25 <colinclark> I guess it\'s "six of one"...
2014-12-03T15:57:42 <colinclark> I find juggling many scripts rather awkward
2014-12-03T15:57:57 <colinclark> but presumbly this project will push Infusion quite a lot
2014-12-03T15:58:11 <colinclark> and thus speed of debugging and rolling with changes is more important
2014-12-03T15:58:33 <colinclark> Justin_o: any thoughts here?
2014-12-03T16:08:16 <colinclark> I guess, as always, we should do what is expedient and convenient for users
2014-12-03T16:08:30 * yzen is now known as 
2014-12-03T16:08:33 <colinclark> and, as you say, Bosmon, write up a quick roadmap for what we\'d actually like in the future
2014-12-03T16:08:59 <Justin_o> to me it seems the issue isn\'t clear in the short term..
2014-12-03T16:09:47 <Justin_o> or rather the solution
2014-12-03T16:10:51 <Justin_o> i suppose this is the first case where we have infusion both on the server and client which is supplied by the server..
2014-12-03T16:11:29 <Justin_o> if we want to run the preferences framework on the client it will need to be built so that we have the stylus files compiled to css
2014-12-03T16:12:48 <Bosmon> ok
2014-12-03T16:13:04 <Bosmon> I wasn\'t aware we had that build step dependency, but I guess we always had it in one form or another
2014-12-03T16:13:32 <colinclark> i guess i\'ll overcomplicate things...
2014-12-03T16:13:43 <colinclark> is there any value in making an infusion-client npm module
2014-12-03T16:13:55 <colinclark> that even runs the build process as a postinstall step
2014-12-03T16:13:56 <colinclark> ?
2014-12-03T16:13:58 <Bosmon> Right now, our designs have the preferences framework itself (for the PMT) served entirely separately from the security UI, right?
2014-12-03T16:14:16 <colinclark> Our designs just show this as a seamless experience
2014-12-03T16:14:25 <colinclark> but I think technical we assumed there would be that separation
2014-12-03T16:14:29 <Bosmon> Sorry, yes
2014-12-03T16:14:38 <Bosmon> I meant "technical plan" rather than "designs"
2014-12-03T16:14:44 <colinclark> yep
2014-12-03T16:14:45 <colinclark> agreed
2014-12-03T16:15:21 <Bosmon> colinclark - I guess the blog posting would suggest value in an infusion-client module, but I\'m trying to think through how it could work in the short term
2014-12-03T16:16:04 <Bosmon> One of the problems that we face is that "an infusion" must only visibly appear at one point in an npm tree
2014-12-03T16:16:30 <Bosmon> Another problem that we face is that we can always make npm modules smaller, but not bigger - if that makes any sense
2014-12-03T16:16:42 <Bosmon> if we have pruned off a file via .npmignore, it is gone forever
2014-12-03T16:17:15 <Bosmon> unless you are suggesting that the behaviour of the infusion-client would be to check out infusion via git rather than npm
2014-12-03T16:18:14 <Bosmon> So I\'m not clear how we could implement infusion-client in the near term, before we had modularised the infusion git image itself
2014-12-03T16:19:17 <Bosmon> That is, I can\'t see how we could implement something conforming to this model of "an infusion-client" without reworking our git image
2014-12-03T16:19:56 <Justin_o> Bosmon: when you say infusion-client what do you mean exactly
2014-12-03T16:20:10 <Bosmon> Justin_o - I\'m referring to colinclark\'s most recent suggestion
2014-12-03T16:20:15 <Bosmon> Of about 7 minutes ago
2014-12-03T16:23:06 <colinclark> ok, so it sounds like it\'s not yet viable
2014-12-03T16:26:20 <Justin_o> colinclark: Bosmon: if we had a bower repo like we planned we could probably make an npm module of that as well
2014-12-03T16:28:15 <colinclark> So Justin_o, do you figure we should just do as Bosmon is proposing for the short time? i.e. to simply include a full image of Infusion in our npm module?
2014-12-03T16:30:23 <Justin_o> i\'m leaning towards no.. 1) it won\'t work for the pmt/pcp going forward 2) at least at the moment i can work around it in the authorization server by using foundation... i\'m not 100% that will always be the case.. i.e. that i won\'t need other infusion components
2014-12-03T16:30:51 * slim_jim has quit
2014-12-03T16:30:56 <Justin_o> i could go back to using a built version of infusion for the client, that is a second version of infusion, if need be
2014-12-03T16:37:21 * Sepideh has quit
2014-12-03T16:44:08 <colinclark> jhernandez and I were just chatting about Flow Manager/browser intergation over Skype
2014-12-03T16:44:27 <colinclark> I was saying that we really need a settings handler that provides a web socket connection for a browser extension to connect to
2014-12-03T16:45:02 <colinclark> so that settings can be pushed from the flow manager into the extension at the appropriate time
2014-12-03T16:45:44 <colinclark> In theory, it should be fairly straightforward
2014-12-03T16:46:04 <colinclark> but I guess there are lots of details
2014-12-03T16:46:35 <colinclark> Bosmon: Is it at this point fairly straightforward to do something like this with Kettle now?
2014-12-03T16:48:22 <Bosmon> colinclark, Justin_o - sorry to be afk, just making a cup of TTEA
2014-12-03T16:48:55 <colinclark> no problem
2014-12-03T16:49:05 <Bosmon> Justin_o - I\'m pretty sure we will need infusion components in the authorization server - especially when we do the security profile work
2014-12-03T16:49:13 <colinclark> I could use some tea myself
2014-12-03T16:49:40 <Bosmon> colinclark - It should be relatively straightforward to make our web sockets settings handler, yes - but we should be prepared for unexpected surprises
2014-12-03T16:49:45 <Bosmon> Given how little tested and understood that stack is
2014-12-03T16:49:53 <Bosmon> I realise how self-contradictory this statement is : P
2014-12-03T16:50:30 <Bosmon> i) we have a reasonably clear path to implementing this given the codebase we have, ii) given the codebase we have, we shouldn\'t be confident that the resulting implementation will work reliably
2014-12-03T16:50:33 * Sepideh joined the channel
2014-12-03T16:50:50 * danaayotte joined the channel
2014-12-03T16:51:26 <Bosmon> Justin_o - and although it won\'t work for the PMT/PCP going forward, we aren\'t planning to deploy that configuration on the server before January
2014-12-03T16:51:57 <Bosmon> However we ARE planning to implement a profile matching danaayotte\'s security profile designs before January, and that work is on a very tight timescale
2014-12-03T16:52:15 <Justin_o> Bosmon: you mean the privacy settings
2014-12-03T16:52:22 <Bosmon> Justin_o - those, yes
2014-12-03T16:52:36 <Justin_o> Bosmon: okay, and when you say infusion components do mean ones that exist, or new ones
2014-12-03T16:52:44 <Bosmon> Justin_o - new ones, I\'m imagining
2014-12-03T16:53:37 <Justin_o> Bosmon: okay.. i\'m not sure we\'ll need more than what\'s there for that.. although we might.. i have a new renderer component that seems to be working
2014-12-03T16:54:08 <Bosmon> Justin_o - ok - so the only lack we are feeling right now is just that of fluid.css?
2014-12-03T16:54:23 <Bosmon> And so we will just leave this network of pull requests where they are?
2014-12-03T16:54:29 <Justin_o> Bosmon: currently yes, and i can get around that with foundation
2014-12-03T16:54:33 <Bosmon> ok
2014-12-03T16:54:49 <Bosmon> Doing nothing is certainly always the cheapest option
2014-12-03T16:54:52 <Justin_o> Bosmon: i guess, i mean we could make that change now too and make new ones for later, it\'s up to you
2014-12-03T16:54:56 <Justin_o> :0
2014-12-03T16:54:57 <Justin_o> :0
2014-12-03T16:54:58 <Justin_o> :)
2014-12-03T16:55:00 <Justin_o> i can\'t type
2014-12-03T16:55:39 <Bosmon> Well I\'d certainly be happy to approve a pull request that just adjusts fluid.css, especially if it means more styling work that we won\'t have to do again later
2014-12-03T16:55:46 <Bosmon> i guess the removal of FSS has at least simplified this problem a lot
2014-12-03T16:56:39 <colinclark> Bosmon: Justin_o injured his hand the other day
2014-12-03T16:56:40 <Justin_o> Bosmon: yes.. that\'s true.. would you accept the existing pulls with fluid.css put back in?
2014-12-03T16:56:47 <colinclark> so typing must be tough
2014-12-03T16:56:51 <Bosmon> But I think I will write up a JIRA to summarise this discussion
2014-12-03T16:57:04 <Justin_o> thanks
2014-12-03T16:57:10 <Bosmon> Sorry about that, Justin_o :(
2014-12-03T16:57:14 <Bosmon> Hope it will mend well
2014-12-03T16:58:45 <Bosmon> I was just reviewing exactly how much of "tests" we include in our .npmignore
2014-12-03T16:58:52 <Bosmon> it\'s certainly quite a messy crosscut
2014-12-03T16:59:27 <Bosmon> We do a reasonable job of excluding tests themselves, but of course have to include a significant chunk of the testing machinery itself in order to support the writing of browser and node tests by 3rd party modules
2014-12-03T16:59:35 <Bosmon> Which I believe simonjb is right now taking advantage of
2014-12-03T16:59:45 <Bosmon> But this is another area which we really need to clean up in our modularisation
2014-12-03T17:00:04 <Bosmon> To reflect the disctinction which I perhaps rather opaquely like to reflect in the naming "test" vs "tests"
2014-12-03T17:00:15 <Bosmon> e.g. the kettle.test and gpii.test namespaces are for testing infrastructure
2014-12-03T17:00:21 <Bosmon> Whereas kettle.tests and gpii.tests are for actual test cases
2014-12-03T17:01:30 <Bosmon> We could adopt this or some other convention to separate out what is currently mixed contents of infusion/tests into separate hierarchies and eventually separate modules
2014-12-03T17:04:41 <Bosmon> Justin_o - actually it is seeming we don\'t have any JIRA for modularisation of Infusion at all, is this right?
2014-12-03T17:04:44 <Bosmon> I think we just have a wiki page with notes
2014-12-03T17:05:29 * kasparnet joined the channel
2014-12-03T17:05:56 <kasparnet> Bosmon, Bosmon7, jhernandez: arch meeting in https://global.gotomeeting.com/join/619028605
2014-12-03T17:07:09 <Bosmon> oh wow, ok
2014-12-03T17:08:17 <Justin_o> Bosmon: that could be right, i don\'t recall a specific jira
2014-12-03T17:09:39 <Bosmon> Sorry to treat sgithens_____ and co in the other room to a short blast of CANTATERS : P
2014-12-03T17:15:03 <colinclark> we didn\'t hear it, don\'t worry
2014-12-03T17:21:48 * anastasiac has quit
2014-12-03T17:25:43 * anastasiac joined the channel
2014-12-03T17:32:11 * michelled joined the channel
2014-12-03T17:38:29 * Sepideh has quit
2014-12-03T17:40:10 * Sepideh joined the channel
2014-12-03T17:45:13 * Sepideh has quit
2014-12-03T17:46:56 * Sepideh joined the channel
2014-12-03T18:03:49 * danaayotte has quit
2014-12-03T18:06:15 * jhung joined the channel
2014-12-03T18:06:48 * clown is now known as clown_mtg
2014-12-03T18:20:20 * jhung1 joined the channel
2014-12-03T18:22:42 * jhung has quit
2014-12-03T18:32:37 * danaayotte joined the channel
2014-12-03T18:41:31 <jessm> fluid-everyone: cool stuff http://www.wired.com/2014/12/guys-hacked-hearing-aids-let-listen-wi-fi-networks/?mbid=social_twitter
2014-12-03T18:53:42 * michelled has quit
2014-12-03T19:01:11 <simonjb> Bosmon: I\'d like to pull the test data out of the datastore; these lines: https://github.com/simonbates/gpii-oauth2/blob/master/gpii-oauth2-datastore/index.js#L21-40
2014-12-03T19:02:19 <simonjb> Bosmon: would the idea be to create a new grade which extends gpii.oauth2.datastore with a model containing the testdata?
2014-12-03T19:03:12 * kasparnet has quit
2014-12-03T19:04:24 <Bosmon> simonjb - that\'s right, yes
2014-12-03T19:04:47 * michelled joined the channel
2014-12-03T19:05:00 <simonjb> Bosmon: cool, I\'ll have a go at implementing and then maybe you could have a check over?
2014-12-03T19:05:43 <Bosmon> simonjb - certainly!
2014-12-03T19:05:52 <simonjb> Bosmon: thanks!
2014-12-03T19:08:13 <clown_mtg> cindyli:  http://lists.gpii.net/pipermail/architecture/
2014-12-03T19:08:23 <cindyli> cool. thanks
2014-12-03T19:08:23 * clown_mtg is now known as clown
2014-12-03T19:08:31 <simonjb> Bosmon: does the new grade with the testdata need "autoInit"? or does it get that from gpii.oauth2.datastore?
2014-12-03T19:09:13 <Bosmon> simonjb - we tend to write "autoInit" on every grade we right currently - just to make sure we don\'t get any unexpected regressions in future
2014-12-03T19:09:31 <simonjb> Bosmon: ok, will follow that pattern
2014-12-03T19:09:34 <Bosmon> As I was ramblingly explaining yesterday, we are at a point of transition to the world where "autoInit" is supplied automatically
2014-12-03T19:09:52 <Bosmon> But in order to make that transition painless, we need to make sure that it is supplied manually everywhere at the point of the transition
2014-12-03T19:10:01 <simonjb> ok
2014-12-03T19:10:20 <Bosmon> So currently omitting "autoInit" acts as a marker that "this code is oldfashioned and needs to be updated" rather than that "the framework shouldn\'t make this initialiser"
2014-12-03T19:10:42 <simonjb> ah
2014-12-03T19:10:46 <Bosmon> In the future there will be a new annotation that we use to actively suppress generation of the initialiser
2014-12-03T19:10:56 <Bosmon> Something like "manualInit" or "abstract" or so
2014-12-03T19:12:07 <Bosmon> But as of now, it was only about 2 months ago I removed the last old-fashioned "manual init" component from the framework image.... hopefully there aren\'t any other lurking anywhere although I know that the VideoPlayer contains some pretty old code that hasn\'t been looked at in a while
2014-12-03T19:32:27 * kasparnet joined the channel
2014-12-03T19:38:39 * cindyli has quit
2014-12-03T19:39:26 * michelled_ joined the channel
'

b'2014-12-03T00:22:22 * yzen joined the channel
2014-12-03T00:52:22 * yzen is now known as yzen_
2014-12-03T00:53:26 * yzen_ has quit
2014-12-03T00:54:03 * yzen joined the channel
2014-12-03T01:05:58 * yzen is now known as yzen_
2014-12-03T01:09:59 * yzen_ has quit
2014-12-03T01:12:46 * yzen joined the channel
2014-12-03T01:21:04 * cindyli joined the channel
2014-12-03T01:21:16 * yzen is now known as yzen_
2014-12-03T01:22:18 * cindyli has quit
2014-12-03T01:25:17 * yzen_ has quit
2014-12-03T02:32:53 * yzen joined the channel
2014-12-03T02:46:31 * yzen is now known as 
2014-12-03T03:32:19 * avtar has quit
2014-12-03T03:59:46 * andres_malarres joined the channel
2014-12-03T04:06:55 * Justin_o has quit
2014-12-03T04:28:48 * andres_malarres has left the channel
2014-12-03T06:27:30 * yzen joined the channel
2014-12-03T07:12:51 * yzen has quit
2014-12-03T07:13:59 * yzen joined the channel
2014-12-03T08:32:46 * slim_jim joined the channel
2014-12-03T10:58:09 * slim_jim has quit
2014-12-03T13:05:35 * slim_jim joined the channel
2014-12-03T13:06:04 * jhung joined the channel
2014-12-03T13:20:29 * anastasiac joined the channel
2014-12-03T13:39:50 * jhung has quit
2014-12-03T13:41:30 * cindyli joined the channel
2014-12-03T13:42:52 * jessm joined the channel
2014-12-03T13:46:26 * slim_jim has quit
2014-12-03T13:46:48 * Justin_o joined the channel
2014-12-03T13:49:43 * anvk joined the channel
2014-12-03T14:05:38 * Sepideh joined the channel
2014-12-03T14:06:12 * simonjb joined the channel
2014-12-03T14:42:05 <simonjb> Bosmon, Bosmon7: https://github.com/simonbates/gpii-oauth2/commit/780f0772bee2dae025586e0d2e2bd9318b799e45
2014-12-03T14:43:11 * danaayotte joined the channel
2014-12-03T14:44:03 <Bosmon> simonjb - that looks really great!
2014-12-03T14:44:05 <Bosmon> Does it work?
2014-12-03T14:44:25 <simonjb> Justin_o: I just pushed the Infusionization of the Auth Server to GitHub: https://github.com/simonbates/gpii-oauth2/commit/780f0772bee2dae025586e0d2e2bd9318b799e45
2014-12-03T14:44:30 <simonjb> Bosmon: yep :)
2014-12-03T14:44:40 <Bosmon> simonjb - marvellous :)
2014-12-03T14:44:50 <simonjb> Bosmon: thanks for all your help
2014-12-03T14:45:04 <Bosmon> np
2014-12-03T14:45:30 <Bosmon> I think this will form a really interesting case study as well, we should make sure to preserve this repository even if we migrate this work to a fork of universal
2014-12-03T14:45:30 <Justin_o> simonjb: thanks i\'ll update my local branch
2014-12-03T14:45:50 <simonjb> Bosmon: I think I will now continue on with the datastore unit tests
2014-12-03T14:45:56 <Bosmon> simonjb - great
2014-12-03T14:49:56 <Justin_o> Bosmon: i just noticed that our npm module doesn\'t include css
2014-12-03T14:50:08 <Justin_o> Bosmon: in this case the new fluid.css file
2014-12-03T14:50:12 <Bosmon> Justin_o - I see
2014-12-03T14:50:14 <Justin_o> from the core
2014-12-03T14:50:17 <Justin_o> Bosmon: should it?
2014-12-03T14:50:36 <Bosmon> Would you like to issue a quick pull to fix this?
2014-12-03T14:50:45 <Bosmon> I don\'t see why not
2014-12-03T14:50:54 <Bosmon> I think we were a little severe cutting things out of our npm image
2014-12-03T14:51:04 <Justin_o> Bosmon: thanks.. do i just need to add it to includes.json?
2014-12-03T14:51:18 <Bosmon> Justin_o - isn\'t it a case of the .npmignore file?
2014-12-03T14:51:33 <Bosmon> For which I think we already have another open pull
2014-12-03T14:51:50 <Justin_o> Bosmon: ah yes
2014-12-03T14:52:02 * clown joined the channel
2014-12-03T14:52:58 <Justin_o> Bosmon: https://github.com/fluid-project/infusion/pull/544 and https://github.com/fluid-project/infusion/pull/540
2014-12-03T14:53:19 <Justin_o> Bosmon: can i just update it in those pull requests and you review?
2014-12-03T14:59:28 <Justin_o> Bosmon: can you let me know what you think of the status of those pulls as is.. it looks like there are some open questions
2014-12-03T15:22:30 * danaayotte has quit
2014-12-03T15:24:00 * anastasiac_ joined the channel
2014-12-03T15:24:03 <Bosmon> Justin_o - they look generally ok - please update, yes
2014-12-03T15:24:28 * colinclark joined the channel
2014-12-03T15:24:54 <Bosmon> hey there colinclark!
2014-12-03T15:24:59 <colinclark> hey Bosmon / Bosmon7
2014-12-03T15:25:00 <colinclark> You were asking about https://github.com/fluid-project/infusion/pull/544
2014-12-03T15:25:03 <Bosmon> Yes
2014-12-03T15:25:18 <Bosmon> So the background is that we are thinking of how to host infusion in the oauth2 UI work
2014-12-03T15:25:32 <colinclark> ah, interesting
2014-12-03T15:25:33 <Bosmon> Clearly for production purposes it would be desirable to use a build
2014-12-03T15:25:38 <colinclark> It would be helpful to have some clarification from you and Justin_o about the scope of any refactoring to the preferences framework
2014-12-03T15:25:57 <Bosmon> But for dev purposes it would be highly convenient to be able to host the files from our node_modules image via npm
2014-12-03T15:26:00 * anastasiac has quit
2014-12-03T15:26:01 * anastasiac_ is now known as anastasiac
2014-12-03T15:26:05 <colinclark> ah, interesting
2014-12-03T15:26:10 <Bosmon> And we are noticing a few crucial files are missing - for example the new fluid.css
2014-12-03T15:26:30 <colinclark> I guess this is a curious new case
2014-12-03T15:26:31 <Bosmon> colinclark - I think this refactoring to the prefs framework is not expected, within, say 6 months
2014-12-03T15:26:56 <Bosmon> Well ok
2014-12-03T15:26:57 <colinclark> You want to host a "web" version of Infusion directly from the node module\'s source
2014-12-03T15:26:58 <Bosmon> Having said that
2014-12-03T15:27:30 <Bosmon> On our recent security call I suggested that parts of what kasparnet calls "the ontology server" really belong in the prefs framework image in Infusion
2014-12-03T15:27:50 <Bosmon> So I imagine that there might be some prefs framework refactoring starting soon after the EU review
2014-12-03T15:27:52 <colinclark> right
2014-12-03T15:28:23 <Bosmon> But of course this new use case makes all of this discussion moot, if we are no longer imagining that we plan to exclude all of the browser code from the npm image
2014-12-03T15:28:27 <colinclark> So are you proposing that you want to actually include more stuff in the module\'s source?
2014-12-03T15:28:33 <Bosmon> Yes
2014-12-03T15:28:35 <colinclark> i.e. stuff that is only viable on the browser
2014-12-03T15:28:39 <Bosmon> That, yes
2014-12-03T15:28:47 <colinclark> Seems awfully ugly
2014-12-03T15:28:57 <colinclark> given that you really want to serve a concat and minified file to the web
2014-12-03T15:29:04 <colinclark> and not so much the same thing on the node side
2014-12-03T15:29:16 <Bosmon> It\'s possible, I guess, that we could fork into two different npm modules
2014-12-03T15:29:24 <Bosmon> That we could call infusion-dev and infusion
2014-12-03T15:30:08 <colinclark> What\'s the distinction between -dev and not/
2014-12-03T15:30:20 <Bosmon> -dev would include all the browser-based code
2014-12-03T15:32:42 <Bosmon> I guess it\'s hopeless really
2014-12-03T15:33:09 <Bosmon> We\'ll have to just adopt builds for the oauth UI work
2014-12-03T15:36:18 <colinclark> I think it\'s probably a better approach to do so
2014-12-03T15:36:30 <colinclark> but I guess this points to something much more interesting
2014-12-03T15:36:42 <colinclark> which is a world where we have integrated tooling
2014-12-03T15:37:35 <colinclark> in which a user can download/clone/issue a command to get a full environment suitable for building full-stack web apps with Infusion
2014-12-03T15:38:04 <Bosmon> How would this work, colinclark?
2014-12-03T15:38:38 <colinclark> who knows?
2014-12-03T15:39:19 <colinclark> I can just see that when Kettle is a little more viable, you can imagine that a developer wants to be able to work with a unified environment, allowing them to develop on both the client and server with a minimum of setup time
2014-12-03T15:39:53 <colinclark> certainly asking someone to create an app, declare a dependency on Infusion, then go off and make a custom build of Infusion for their front-end is pretty cumbersome
2014-12-03T15:40:18 <Bosmon> It is
2014-12-03T15:40:18 <colinclark> I guess things might eventually get better when all "packages" are stored in npm
2014-12-03T15:40:28 <colinclark> and we don\'t have this fork between code managed by npm and by bower
2014-12-03T15:40:44 <colinclark> it\'s clear that npm is aiming to replace bower eventually
2014-12-03T15:40:47 <Bosmon> What do you mean by "all packages are stored in npm"?
2014-12-03T15:40:56 <colinclark> let me get the blog post
2014-12-03T15:40:57 <colinclark> one sec
2014-12-03T15:41:01 <Bosmon> cheers
2014-12-03T15:41:26 <colinclark> http://blog.npmjs.org/post/101775448305/npm-and-front-end-packaging
2014-12-03T15:41:38 <colinclark> they obviously don\'t yet have a plan
2014-12-03T15:41:47 <colinclark> but are positioning themselves sa the universal JS package manager
2014-12-03T15:42:01 <Bosmon> Ah, interesting
2014-12-03T15:43:03 <Bosmon> It still suggests that any solution they are imagining would be unviable for us without explicitly modularising infusion into two or more modules
2014-12-03T15:43:40 <Bosmon> Everyone loves many tiny modules, and I am already tired of working with them
2014-12-03T15:44:38 <Justin_o> Bosmon, colinclark: not sure where this conversation leaves me in terms of the pulls requests and authorization ui\'s
2014-12-03T15:45:53 <Bosmon> I think it\'s fair to say we don\'t have an alternative to moving your UI over to using a build, and continuing to exclude UI code from our npm module - although I don\'t see that it really makes much odds
2014-12-03T15:46:07 <Bosmon> colinclark has characterised including all code useful at runtime in our npm module as "ugly"
2014-12-03T15:46:14 <Bosmon> But I\'m not sure what this value judgement entails
2014-12-03T15:46:26 <colinclark> Well, I think there are a few layers to it
2014-12-03T15:46:43 <colinclark> First, I think it\'s problematic to be hosting up the contents of node_modules
2014-12-03T15:47:02 <colinclark> Second, I think that this doesn\'t really solve the "real" problem of delivering Infusion client-side
2014-12-03T15:47:07 <colinclark> which is via a custom build
2014-12-03T15:47:10 <Bosmon> Could you expand on the first point?
2014-12-03T15:48:16 * anastasiac has quit
2014-12-03T15:48:17 <colinclark> I can only speculate that it represents a greater risk
2014-12-03T15:48:24 * colinclark has quit
2014-12-03T15:48:36 * colinclark joined the channel
2014-12-03T15:48:55 * yzen joined the channel
2014-12-03T15:49:08 <colinclark> sorry, flaky internet
2014-12-03T15:51:46 * slim_jim joined the channel
2014-12-03T15:52:31 <colinclark> "of serving files that were not intended to be served"
2014-12-03T15:52:48 <colinclark> Of enlarging our npm module unnecessarily for users
2014-12-03T15:53:02 <colinclark> of confusing users as to whether or not Infusion is actually intended for node usage or not
2014-12-03T15:53:06 <colinclark> and which parts of it are intended for this
2014-12-03T15:53:41 <Bosmon> colinclark - it seems that we can\'t effectively solve this problem until we can split infusion into several modules - some intended for node usage and some not
2014-12-03T15:53:46 <colinclark> yes
2014-12-03T15:53:51 <colinclark> the question
2014-12-03T15:54:00 <colinclark> is whether we want to live with the compromise until then
2014-12-03T15:54:06 <colinclark> i.e. the compromise of including everything
2014-12-03T15:54:13 * anastasiac joined the channel
2014-12-03T15:54:24 <colinclark> my point about its ugliness wasn\'t to say "we absolutely shouldn\'t do this"
'

